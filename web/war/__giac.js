__giac = {
1: { cmd: "Derivative[x^2]", result: "2x", notes:"" },
2: { cmd: "Integral[x^2]", result: "x³ / 3 + c_1", notes:"" },
3: { cmd:"Integral[x^2]", result:"x³ / 3 + c_2" },
4: { cmd:"Integral[x^2,0,1]", result:"1/3" },
5: { cmd:"Integral[t^2]", result:"t³ / 3 + c_3" },
6: { cmd:"Integral[t^2,t]", result:"t³ / 3 + c_4" },
7: { cmd:"Integral[t^2,t,0,1]", result:"1/3" },
8: { cmd:"Factor(x^2-1)", result:"" },
9: { cmd:"Factor(x^2-y^2,y)", result:"", notes:"2nd argument ignored?" },
10: { cmd:"Coefficients[x^3+3x^2-5]", result:"{1, 3, 0, -5}" },
11: { cmd:"Coefficients[y^3+3y^2-5]", result:"{1, 3, 0, -5}" },
12: { cmd:"Coefficients[3x^2*y-x*y+3,y]", result:"{3x² - x, 3}" },
13: { cmd:"Coefficients[3x^2*y-x*y+3,x]", result:"{3y, -y, 3}" },
14: { cmd:"Append[{1,2,3},5]", result:"{1,2,3,5}" },
15: { cmd:"BinomialCoefficient[10,2]", result:"45" },
16: { cmd:"BinomialDist[20,1/2,3,false]", result:"285 / 262144" },
17: { cmd:"BinomialDist[20,0.5,3,false]", result:"285 / 262144" },
18: { cmd:"BinomialDist[20,1/2,3,true]", result:"1351 / 1048576" ,notes:"(cumulative)" },
19: { cmd:"Cauchy[20,3,2]", result:"1/2-1/πatan(1/20)", notes:"(-2 atan(1 / 20) + π) / (2π) "},
20: { cmd:"CFactor(x^2+1)", result:"(x + ί) (x - ί)" },
21: { cmd:"CFactor(x^8-1)", result:"(x² + ί) (x² - ί) (x + ί) (x - ί) (x + 1) (x - 1)" },
22: { cmd:"CFactor(y^8-1)", result:"(y - ί) (y + ί) (y - 1) (y + 1) (y² - ί) (y² + ί)" },
23: { cmd:"CFactor(y^8-1,y)", result:"(y - ί) (y + ί) (y - 1) (y + 1) (y² - ί) (y² + ί)" },
24: { cmd:"CFactor[x^2-8]", result:"x²-8" },
25: { cmd:"ChiSquared[7,4]", result:"gammaRegularized(7 / 2, 2)|OR|0.220222591524284|OR|0.2202225915243", notes:"needs numeric check too, more digits needed" },
26: { cmd:"CompleteSquare[x^2-4x+3]", result:"(x - 2)² - 1" },
27: { cmd:"CompleteSquare[y^2-8y+3]", result:"(y - 4)² - 13" },
28: { cmd:"CommonDenominator[1/(x^2-1),1/(x+1)]", result:"x²-1|OR|(x-1)(x+1)" },
29: { cmd:"Covariance[{1,2,3},{5,16,1}]", result:"(-4)/3" },
30: { cmd:"Covariance[{(1,5),(2,16),(3,1)}]", result:"(-4)/3", notes:"sent to giac in Maxima form: covariance({[1, 5], [2, 16], [3, 1]})" },
31: { cmd:"Cross[(2,3,1),(4,5,0)]", result:"(-5, 4, -2)" },
32: { cmd:"ComplexRoot[x^3-1]", result:"{1,1/2(-1+ίsqrt(3)),1/2(-1-ίsqrt(3))}" },
33: { cmd:"CSolutions[x^2=-1]", result:"{-ί, ί}" },
34: { cmd:"CSolutions[x^2=-3]", result:"{sqrt(3)ί,-sqrt(3)ί}" },
35: { cmd:"CSolutions[x^2=ί]", result:"{1/sqrt(2)(1+ί),(-1)/sqrt(2)(1+ί)}", notes:"better than Reduce" },
36: { cmd:"CSolutions[x^2=a]", result:"{sqrt(a),-sqrt(a)}", notes:"wrong in Reduce" },
37: { cmd:"CSolve[x^2=-1]", result:"{x=-ί,x=ί}" },
38: { cmd:"CSolve[x^2=-3]", result:"{x=sqrt(3)ί,x=-sqrt(3)ί}" },
39: { cmd:"CSolve[x^2=ί]", result:"{x=1/sqrt(2)(1+ί),x=(-1)/sqrt(2)(1+ί)}" },
40: { cmd:"CSolve[x^2=a]", result:"{x=sqrt(a),x=-sqrt(a)}", notes:"wrong in Reduce" },
41: { cmd:"Degree[x^3+x]", result:"3" },
42: { cmd:"Degree[x^3*y^2+y^2-x,y]", result:"2" },
43: { cmd:"Denominator[x/2-y/x]", result:"2x" },
44: { cmd:"Derivative[sin(x)]", result:"cos(x)" },
45: { cmd:"Determinant[{{1,2,3},{4,5,-1},{4,5,2}}]", result:"-9" },
46: { cmd:"Dimension[{{1,2,3},{4,5,-1}}]", result:"{2,3}" },
47: { cmd:"Div[10,3]", result:"3" },
48: { cmd:"Div[x^3-x+1,x+1]" , result:"x²-x"},
49: { cmd:"Division[10,3]", result:"{3,1}" },
50: { cmd:"Division[x^3-x+1,x+1]", result:"{x² - x, 1}" },
51: { cmd:"Divisors[100]", result:"9" },
52: { cmd:"DivisorsList[100]", result:"{1, 2, 4, 5, 10, 20, 25, 50, 100}" },
53: { cmd:"DivisorsSum[100]", result:"217" },
54: { cmd:"Dot[(1,2,3),(-1,4,5)]", result:"22" },
55: { cmd:"Element[[{{1,2,3},{4,5,-1},{4,5,2}},2]", result:"{4,5,1}" },
56: { cmd:"Element[{{1,2,3},{4,5,-1},{4,5,2}},2,1]", result:"4" },
57: { cmd:"Expand[ (x+1)/2 ]", result:"1/2+1/2x" },
58: { cmd:"Expand[ (x+2)^4 ]", result:"x⁴ + 8x³ + 24x² + 32x + 16" },
59: { cmd:"Exponential[4,3]", result:"1-1/ℯ^12", notes:"Reduce: (ℯ¹² - 1) / ℯ¹²" },
60: { cmd:"Factors[x^2-1]", result:"{{x-1,1},{x+1,1}}" },
61: { cmd:"FDistribution[3,7,2]", result:"betaRegularized(3 / 2, 7 / 2, 6 / 13)|OR|0.79730635751335|OR|0.7973063575133", notes:"accept numerical answer even in exact mode" },
62: { cmd:"Flatten[{{1,2},{3,4}}]", result:"{1,2,3,4}" },
63: { cmd:"First[{3,4,5}]", result:"{3}" },
64: { cmd:"First[{3,4,5,6,7,8},2]", result:"{3,4}" },
65: { cmd:"FitExp[ {(0.44, 0.42), (1.7, 0.48), (2.7, 1.2), (3.5, 1.78), (4.36, 2.64), (5.12, 3.76), (5.78, 4.66)} ]", result:"0.290435875517995ℯ^(0.493486684688428x)|OR|0.290435875518ℯ^(0.4934866846884x)" },
66: { cmd:"FitLog[ {(0.44, 0.42), (1.7, 0.48), (2.7, 1.2), (3.5, 1.78), (4.36, 2.64), (5.12, 3.76), (5.78, 4.66)} ]", result:"1.45942046561421ln(x) + 0.713291243375409|OR|1.459420465614ln(x)+0.7132912433754" },
67: { cmd:"FitPoly[ {(0.44, 0.42), (1.7, 0.48), (2.7, 1.2), (3.5, 1.78), (4.36, 2.64), (5.12, 3.76), (5.78, 4.66)} ,3]", result:"-0.00777623749522 x³ + 0.228417298038848x² - 0.341171655092853x + 0.511167962733187|OR|-0.007776237495168x³+0.2284172980384x²-0.3411716550917x+0.5111679627327" },
68: { cmd:"FitPow[ {(0.44, 0.42), (1.7, 0.48), (2.7, 1.2), (3.5, 1.78), (4.36, 2.64), (5.12, 3.76), (5.78, 4.66)}]", result:"0.601030151244602x^0.961817104673967|OR|0.6010301512446x^0.961817104674" },
69: { cmd:"Gamma[1,2,3]", result:"gammaRegularized(1, 3 / 2)XXX", notes:"is igamma() implemented in giac?" },
70: { cmd:"GCD[45,54]", result:"9" },
71: { cmd:"GCD[{45,54,90}]", result:"9" },
72: { cmd:"GCD[x^2,x^3]", result:"x²" },
73: { cmd:"HyperGeometric[100,40,10,3,true]", result:"170307807 / 455079380" },
74: { cmd:"HyperGeometric[100,40,10,3,false]", result:"35109720 / 159277783" },
75: { cmd:"Identity[3]", result:"{{1,0,0},{0,1,0},{0,0,1}}" },
76: { cmd:"If[x<2/3,sin(x)]", result:"If[x<2/3,sin(x)]", notes:"check" },
77: { cmd:"If[x<2/3,sin(x),cos(x)]", result:"If[x<2/3,sin(x),cos(x)]", notes:"check" },
78: { cmd:"ImplicitDerivative[x+2y]", result:"(-1)/2" },
79: { cmd:"ImplicitDerivative[x+2y,x,y]", result:"-2" },
80: { cmd:"Integral[sec(x)]", result:"2((-1)/8ln(abs(sin(x)+1/sin(x)-2))+1/8ln(abs(sin(x)+1/sin(x)+2)))+c_5" },
81: { cmd:"Derivative[Integral[sec(x)]]", result:"" },
82: { cmd:"Integral[y^2]", result:"1 / 3 y³ + c_7|OR|1 / 3 y³ + c_7" },
83: { cmd:"Integral[x^2,1,2]", result:"7/3", notes:"" },
84: { cmd:"Integral[y^2,1,2]", result:"7/3", notes:"" },
85: { cmd:"Integral[y^2,y,1,2]", result:"7/3" },
86: { cmd:"IntegralBetween[sin(x),cos(x),0,pi]", result:"2" },
87: { cmd:"IntegralBetween[sin(y),cos(y),y,0,pi]", result:"2" },
88: { cmd:"Intersect[x^2,x^3]", result:"{(0, 0), (1, 1)}" },
89: { cmd:"Iteration[x^2, 3, 2]", result:"81" },
90: { cmd:"IterationList[x^2, 3, 2]", result:"{3,9,81}" },
91: { cmd:"PointList[{{1,2},{3,4}}]", result:"{(1, 2), (3, 4)}" },
92: { cmd:"PointList[{{1,0},{2,0}}]", result:"{(1, 0), (2, 0)}" },
93: { cmd:"PointList[{{x=1,y=0},{x=2,y=0}}]", result:"{(1, 0), (2, 0)}" },
94: { cmd:"PointList[{1,2}]", result:"{(1, 0), (2, 0)}" },
95: { cmd:"RootList[{3, 4, 5, 2, 1, 3}]", result:"{(3, 0), (4, 0), (5, 0), (2, 0), (1, 0), (3, 0)}" },
96: { cmd:"Invert[{{1,2,3},{4,5,-1},{4,5,2}}]", result:"{{(-5) / 3, (-11) / 9, 17 / 9}, {4 / 3, 10 / 9, (-13) / 9}, {0, (-1) / 3, 1 / 3}}" },
97: { cmd:"IsPrime[2^127-1]", result:"true" },
98: { cmd:"IsPrime[2^65-1]", result:"false" },
99: { cmd:"Join[{5, 4, 3}, {1, 2, 3}]", result:"{5, 4, 3, 1, 2, 3}" },
100: { cmd:"Line[ (1,2), (3,4) ]", result:"y=x+1" },
101: { cmd:"Last[{1,2,3,4,5}]", result:"{5}" },
102: { cmd:"Last[{1,2,3,4,5},2]", result:"{4,5}" },
103: { cmd:"LCM[45,54]", result:"270" },
104: { cmd:"LCM[{45,54,90}]", result:"270" },
105: { cmd:"LeftSide[4x-3=5x+1]", result:"4x-3" },
106: { cmd:"LeftSide[{x+y=1,2x+y=2},2]", result:"2x+y" },
107: { cmd:"Length[{4,5,6}]", result:"3" },
108: { cmd:"Length[x^2,0,4]", result:"(-1)/4ln(sqrt(65)-8)+2sqrt(65)" },
109: { cmd:"Length[y^2,0,4]", result:"(-1)/4ln(sqrt(65)-8)+2sqrt(65)" },
110: { cmd:"Length[y^2,y,0,4]", result:"(-1)/4ln(sqrt(65)-8)+2sqrt(65)" },
111: { cmd:"Limit(sin(x)/x,0]", result:"1" },
112: { cmd:"Limit[sin(y)/y,0]", result:"1" },
113: { cmd:"Limit[sin(y)/y,y,0]", result:"1" },
114: { cmd:"Limit[If[x>1,x^2,-2x], 1]", result:"?", notes:"undefined  strange error, but ends up OK" },
115: { cmd:"LimitBelow[If[x>1,x^2,-2x], 1]", result:"-2" },
116: { cmd:"LimitAbove[If[x>1,x^2,-2x], 1]", result:"1" },
117: { cmd:"LimitAbove[ln(x),0]", result:"-∞" },
118: { cmd:"LimitBelow[ln(x),0]", result:"?" },
119: { cmd:"Max[{1,4,6,3,9}]", result:"9" },
120: { cmd:"MatrixRank[ {{1,2,3},{4,5,-1},{4,5,2}} ]", result:"3" },
121: { cmd:"Mean[{4,5,3,7,8,8,8,9}]", result:"13/2" },
122: { cmd:"Median[{4,5,3,7,8,8,8,9}]", result:"15/2|OR|7.5", notes:"median does an evalf before sorting data, answer is therefore numeric" },
123: { cmd:"Min[{1,4,6,3,9}]", result:"1" },
124: { cmd:"Midpoint[ (1,2), (3,4) ]", result:"(2,3)" },
125: { cmd:"Mod[23,7]", result:"2" },
126: { cmd:"Mod[x^4-1,x^2+x+2]", result:"3x+1" },
127: { cmd:"NextPrime[99]", result:"101" },
128: { cmd:"NIntegral[exp(x^2),0,5]", result:"7354153747.83713|OR|7354153747.838" },
129: { cmd:"NIntegral[exp(y^2),0,5]", result:"7354153747.83713|OR|7354153747.838" },
130: { cmd:"Normal[3,4,5]", result:"(erf(sqrt(2)/2/2)+1)/2" },
131: { cmd:"Normal[3,4,5, true]", result:"(erf(sqrt(2)/2/2)+1)/2" },
132: { cmd:"Normal[3,4,5, false]", result:"1/sqrt(2π16)ℯ^((-1)/8)" },
133: { cmd:"nPr[40,5]", result:"78960960" },
134: { cmd:"NSolutions[sin(x)]", result:"{0}|OR|{0.0}" },
135: { cmd:"NSolutions[sin(x),x=4]", result:"{3.14159265360127}|OR|{3.14159265359}" },
136: { cmd:"NSolve[sin(x)]", result:"{x=0}|OR|{x=0.0}" },
137: { cmd:"NSolve[sin(x),x=4]", result:"{x = 3.14159265360127}|OR|{x=3.14159265359}" },
138: { cmd:"Numerator[1/x+x^2]", result:"x³+1" },
139: { cmd:"Numeric[pi]", result:"3.14159265358979|OR|3.14159265359", notes:"Reduce gives 'pi', check" },
140: { cmd:"Numeric[pi,20]", result:"3.1415926535897932385" },
141: { cmd:"PartialFractions[x/(x^2-1)]", result:"1/2/(x-1)+1/2/(x+1)" },
142: { cmd:"PerpendicularVector[(2,3)]", result:"(-3,2)" },
143: { cmd:"OrthogonalVector[(2,3)]", result:"(-3,2)" },
144: { cmd:"Pascal[10,0.4,8,false]", result:"32665171968 / 762939453125" },
145: { cmd:"Pascal[10,0.4,8,true]", result:"betaRegularized(10, 9, 0.4)|OR|0.134714148373135|OR|0.1347141483731", notes:"is ibeta() implemented in giac?" },
146: { cmd:"Poisson[10,8,true]", result:"1/ℯ^10(461843/63)" },
147: { cmd:"Poisson[10,8,false]", result:"156250/63/ℯ^10" },
148: { cmd:"PreviousPrime[99]", result:"97" },
149: { cmd:"PrimeFactors[100]", result:"{2,2,5,5}" },
150: { cmd:"Product[{x-1,x-1,x+1}]", result:"x³ - x² - x + 1" },
151: { cmd:"Product[3p,p,1,10]", result:"214277011200" },
152: { cmd:"MixedNumber[1.2]", result:"1 + 1/5" },
153: { cmd:"RandomBetween[2,3]", result:"2 |OR| 3" },
154: { cmd:"RandomBinomial[10,0.5]", result:"RANDOM" },
155: { cmd:"RandomElement[{4,5}]", result:"4 |OR| 5" },
156: { cmd:"RandomPoisson[5]", result:"RANDOM" },
157: { cmd:"RandomNormal[3,4]", result:"RANDOM" },
158: { cmd:"RandomPolynomial[4,-10,10]", result:"RANDOM", notes:"coefficients integers between -10 and 10 inclusive" },
159: { cmd:"RandomPolynomial[y,4,-10,10]", result:"RANDOM" },
160: { cmd:"Rationalize[1/(sqrt(2)+1)]", result:"sqrt(2)-1" },
161: { cmd:"Rationalize[1/(ί+1)]", result:"(1-ί)/2" },
162: { cmd:"Reverse[{2,5,6,7,8}]", result:"{8,7,6,5,2}" },
163: { cmd:"RightSide[4x-3=5y]", result:"5y" },
164: { cmd:"RightSide[{x+y=1,2x+y=2+x},2]", result:"2+x" },
165: { cmd:"Root[x^3+2x+1]", result:"{x = (-cbrt(ℯ^(2asinh((3sqrt(3)) / (4sqrt(2))))) sqrt(2) + sqrt(2)) / (cbrt(ℯ^(asinh((3sqrt(3)) / (4sqrt(2))))) sqrt(3))}" },
166: { cmd:"Root[x^4-x+1]", result:"" },
167: { cmd:"Root[x^5-x+1]", result:"{x = -1.167303978261419}|OR|{x=-1.167303978261}" },
168: { cmd:"ReducedRowEchelonForm[{{1,2,3},{3,4,5},{3,2,1}}]", result:"{{1, 0, -1}, {0, 1, 2}, {0, 0, 0}}" },
169: { cmd:"Sample[{1,2,3,4},4]", result:"RANDOM", notes:" with replacement" },
170: { cmd:"Sample[{1,2,3,4},4, true]", result:"RANDOM", notes:" with replacement" },
171: { cmd:"Sample[{1,4,5,5,5,6,7},2]", result:"RANDOM" },
172: { cmd:"Sort[Sample[{1,2,3,4},4, false]]", result:"{1,2,3,4}" },
173: { cmd:"Sample[{1,4,6,7},2, false]", result:"RANDOM" },
174: { cmd:"SampleVariance[{1,1,3,4,5,6,7,8,99}]", result:"36031/36" },
175: { cmd:"SampleSD[{1,1,3,4,5,6,7,8,99}]", result:"sqrt(36031)/6" },
176: { cmd:"Sequence[10]", result:"{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}" },
177: { cmd:"Sequence[i^2,i,1,10]", result:"{1, 4, 9, 16, 25, 36, 49, 64, 81, 100}" },
178: { cmd:"Sequence[i^2,i,1,10,1/2]", result:"{1, 9 / 4, 4, 25 / 4, 9, 49 / 4, 16, 81 / 4, 25, 121 / 4, 36, 169 / 4, 49, 225 / 4, 64, 289 / 4, 81, 361 / 4, 100}" },
179: { cmd:"SD[{1,1,3,4,5,6,7,8,99}]", result:"sqrt(72062)/9" },
180: { cmd:"Shuffle[{1,1,3,4,5,6,7,8,99}]", result:"RANDOM" },
181: { cmd:"Simplify[x+x]", result:"2x" },
182: { cmd:"Simplify[sin(x) cos(x)]", result:"1/2 sin(2x)" },
183: { cmd:"Solutions[x^2 = 4x]", result:"{0,4}" },
184: { cmd:"Solutions[x^2 = 4x,x]", result:"{0,4}" },
185: { cmd:"Solutions[y^2 = 4y,y]", result:"{0,4}" },
186: { cmd:"Solutions[{4x-y=1,x+y=3},{x,y}]", result:"{{4 / 5, 11 / 5}}" },
187: { cmd:"Solve[x^2=4x]", result:"{x=0, x=4}" },
188: { cmd:"Solve[{4x-y=1,x+y=3},{x,y}]", result:"{{x = 4 / 5, y = 11 / 5}}", notes:"need to remove set[...]" },
189: { cmd:"Solve[x^2<9]", result:"{-3 < x < 3}", notes:"currently gives {(x>-3)∧(x<3)} which is OK" },
190: { cmd:"Solve[x^2>9]", result:"{x<-3,x>3}" },
191: { cmd:"Solve[abs(x)<9]", result:"{-9 < x < 9}" },
192: { cmd:"Solve[sin(x)=0]", result:"{x = 2k_1 π, x = 2k_1 π + π}|OR|{x=(2*n_28*pi),x=(2*n_28*pi+pi)}", notes:"why n_28?" },
193: { cmd:"Solve[sin(x)=3]", result:"{}" },
194: { cmd:"SolveODE[y'=y / x]", result:"y = x c_7" },
195: { cmd:"SolveODE[y'=y / x, (1,2)]", result:"y = 2 x" },
196: { cmd:"SolveODE[y'=y / x, (1,2), (0,2)]", result:"y = 2 x" },
197: { cmd:"SolveODE[v'=v / w, v, w]", result:"v = c1 w" },
198: { cmd:"SolveODE[v'=v / w, v, w, (1,2)]", result:"v = 2 w" },
199: { cmd:"SolveODE[v'=v / w, v, w, (1,2), (0,2)]", result:"v=2 w" },
200: { cmd:"Substitute[2x + 3y - z, {x=a, y=2, z=b}]", result:"2a - b + 6" },
201: { cmd:"Substitute[(3 m - 3)^2 - (m + 3)^2, m, a]", result:"8a² - 24a|OR|(3a-3)²-(a+3)²" },
202: { cmd:"Sum[{4,5,7,8,3,2,8,9}]", result:"46" },
203: { cmd:"Sum[i^2,i,1,10]", result:"385" },
204: { cmd:"Sum[p*i^2,i,1,10]", result:"385p" },
205: { cmd:"Tangent[1/3, x^2]", result:"y = (6x-1)/9|OR|y=2/3(x-1/3)+1/9", notes:"decide if we want to add normal()" },
206: { cmd:"Take[{3,4,5,6,7,8},2,3]", result:"{4,5}" },
207: { cmd:"TaylorPolynomial[sin(x),1,4]", result:"sin(1) + cos(1) (x - 1) - sin(1) / 2 (x - 1)² - cos(1) / 6 (x - 1)³ + sin(1) / 24 (x - 1)⁴" },
208: { cmd:"TaylorPolynomial[x^3 sin(y), y, 3, 2]" , result:"sin(3) x³ + cos(3) x³ (y - 3) - (sin(3) x³) / 2 (y - 3)²"},
209: { cmd:"TDistribution[4,2]", result:"(-betaRegularized(2, 1 / 2, 1 / 2) + betaRegularized(2, 1 / 2, 1) + 1) / 2|OR|0.941941738241592|OR|0.9419417382416", notes:"0.941941738241592" },
210: { cmd:"ToComplex[(1,2)]", result:"1+2ί" },
211: { cmd:"ToExponential[1+2ί]", result:"sqrt(5) ℯ^(atan(2) ί)" },
212: { cmd:"ToPolar[(1,2)]", result:"(sqrt(5); atan(2))", notes:"needs semicolon" },
213: { cmd:"ToPoint[1+2ί]", result:"(1,2)" },
214: { cmd:"Transpose[{{1,2,3},{4,5,-1},{4,5,2}}]", result:"{{1, 4, 4}, {2, 5, 5}, {3, -1, 2}}" },
215: { cmd:"TrigExpand[tan(x + y)]", result:"(cos(x) sin(y) + cos(y) sin(x)) / (cos(x) cos(y) - sin(x) sin(y))", notes:"should be in terms of sin, cos http://reduce-algebra.com/docs/trigsimp.pdf" },
216: { cmd:"TrigExpand[tan(x + y), tan(x)]", result:"(-tan(x) - tan(y)) / (tan(x) tan(y) - 1)", notes:"should be in terms of tan" },
217: { cmd:"TrigExpand[sin(x), sin(x), x/2]", result:"2 cos(x/2)sin(x/2)" },
218: { cmd:"TrigExpand[csc(x) - cot(x) + csc(y) - cot(y), tan(x), x/2, y/2]", result:"tan(x/2) + tan(y/2)" },
219: { cmd:"TrigSimplify[1 - sin(x)^2]", result:"cos²(x)" },
220: { cmd:"TrigSimplify[sin(x)^2 - cos(x)^2 + 1]", result:"2 sin²(x)" },
221: { cmd:"TrigCombine[sin(x) cos(3x)]", result:"(sin(4x)-sin(2x))/2" },
222: { cmd:"TrigCombine[(tan(p) + tan(q)) / (1 - tan(p) tan(q)), tan(x)]", result:"tan(p+q)" },
223: { cmd:"Unique[{1,1,2,3,4,5,5,6,6,6,7,8,99}]", result:"{1, 2, 3, 4, 5, 6, 7, 8, 99}" },
224: { cmd:"UnitPerpendicularVector[(1,2)]", result:"((-2) / sqrt(5), 1 / sqrt(5))" },
225: { cmd:"UnitVector[(1,2)]", result:"(1 / sqrt(5), 2 / sqrt(5))" },
226: { cmd:"Variance[{1,1,3,4,5,6,7,8,99}]", result:"72062/81" },
227: { cmd:"Weibull[2,3,4]", result:"1-ℯ^((-16)/9)" },
228: { cmd:"Zipf[10,3,2,true]", result:"0.939432109921174" },
229: { cmd:"Zipf[10,3,2,false]", result:"0.104381345546797" },
230: { cmd:"5E100*2" , result:"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"},
231: { cmd:"Element[{1,2,3},6]" , result:"?", notes:"'?' would be a better output"},
232: { cmd:"Limit[x/x,0]" , result:"1"},
232: { cmd:"0/0" , result:"?"},
233: { cmd:"10^0" , result:"1"},
234: { cmd:"PointList[{x=1,x=2}", result:"{(1, 0), (2, 0)}" },
235: { cmd:"2^31", result:"2147483648" },
236: { cmd:"2^32", result:"4294967296" },
237: { cmd:"2^33", result:"8589934592" },
238: { cmd:"Numeric[sin(1\u00b0),13]", result:"0.01745240643728", notes:"should be 13 significant digits, not 13 decimal places" },
239: { cmd:"Numeric[sin(1),13]", result:"0.8414709848079" },
240: { cmd:"sin(x", result:"GEOGEBRAERROR", notes:"deliberate error" },
}
