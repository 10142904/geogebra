package geogebra.web.properties;
import com.google.gwt.i18n.client.ConstantsWithLookup;

/**
 * THIS FILE IS AUTOMATICALLY GENERATED - DO NOT EDIT THIS FILE!
 * Command interface
 * GWT implementation of Command internationalization.
 * @author ggbtrans
 *
 */
public interface CommandConstants extends ConstantsWithLookup {

    @DefaultStringValue("ANOVA")
    String ANOVA();

    @DefaultStringValue("[ <List>, <List>, ... ]")
    String ANOVA_Syntax();

    @DefaultStringValue("AffineRatio")
    String AffineRatio();

    @DefaultStringValue("[ <Point>, <Point>, <Point> ]")
    String AffineRatio_Syntax();

    @DefaultStringValue("Angle")
    String Angle();

    @DefaultStringValue("[ <Object> ]\n[ <Vector>, <Vector> ]\n[ <Line>, <Line> ]\n[ <Point>, <Apex>, <Point> ]\n[ <Point>, <Apex>, <Angle> ]")
    String Angle_Syntax();

    @DefaultStringValue("AngleBisector")
    String AngularBisector();

    @DefaultStringValue("[ <Line>, <Line> ]\n[ <Point>, <Point>, <Point> ]")
    String AngularBisector_Syntax();

    @DefaultStringValue("Append")
    String Append();

    @DefaultStringValue("[ <List>, <Object> ]\n[ <Object>, <List> ]")
    String Append_Syntax();

    @DefaultStringValue("ApplyMatrix")
    String ApplyMatrix();

    @DefaultStringValue("[ <Matrix>, <Object> ]")
    String ApplyMatrix_Syntax();

    @DefaultStringValue("Arc")
    String Arc();

    @DefaultStringValue("[ <Circle>, <Point>, <Point> ]\n[ <Ellipse>, <Point>, <Point> ]\n[ <Circle>, <Parameter Value>, <Parameter Value> ]\n[ <Ellipse>, <Parameter Value>, <Parameter Value> ]")
    String Arc_Syntax();

    @DefaultStringValue("Area")
    String Area();

    @DefaultStringValue("[ <Conic> ]\n[ <Polygon> ]\n[ <Point>, ..., <Point> ]")
    String Area_Syntax();

    @DefaultStringValue("Asymptote")
    String Asymptote();

    @DefaultStringValue("[ <Conic> ]\n[ <Function> ]\n[ <Implicit Curve> ]")
    String Asymptote_Syntax();

    @DefaultStringValue("AttachCopyToView")
    String AttachCopyToView();

    @DefaultStringValue("[ <Object>, <View 0|1|2> ]\n[ <Object>, <View 0|1|2>, <Point 1>, <Point 2>, <Screen Point 1>, <Screen Point 2> ]")
    String AttachCopyToView_Syntax();

    @DefaultStringValue("Axes")
    String Axes();

    @DefaultStringValue("[ <Conic> ]")
    String Axes_Syntax();

    @DefaultStringValue("AxisStepX")
    String AxisStepX();

    @DefaultStringValue("[ ]")
    String AxisStepX_Syntax();

    @DefaultStringValue("AxisStepY")
    String AxisStepY();

    @DefaultStringValue("[ ]")
    String AxisStepY_Syntax();

    @DefaultStringValue("BarChart")
    String BarChart();

    @DefaultStringValue("[ <List of Data>, <List of Frequencies> ]\n[ <List of Raw Data>, <Width of Bars> ]\n[ <List of Data>, <List of Frequencies>, <Width of Bars> ]\n[ <Start Value>, <End Value>, <List of Heights> ]\n[ <Start Value>, <End Value>, <Expression>, <Variable>, <From Number>, <To Number> ]\n[ <Start Value>, <End Value>, <Expression>, <Variable>, <From Number>, <To Number>, <Step Width> ]")
    String BarChart_Syntax();

    @DefaultStringValue("BarCode")
    String BarCode();

    @DefaultStringValue("[ ]\n[ <Image> ]\n[ <Text or Number>, \"<Format (optional)>\" , \"<Error Correction (optional)>\", <Width (optional)>, <Height (optional)>]")
    String BarCode_Syntax();

    @DefaultStringValue("Barycenter")
    String Barycenter();

    @DefaultStringValue("[ <List of Points>, <List of Weights> ]")
    String Barycenter_Syntax();

    @DefaultStringValue("Bernoulli")
    String Bernoulli();

    @DefaultStringValue("[ <Probability>, <Boolean Cumulative> ]")
    String Bernoulli_Syntax();

    @DefaultStringValue("BinomialCoefficient")
    String Binomial();

    @DefaultStringValue("[ <Number n>, <Number r> ]")
    String Binomial_Syntax();

    @DefaultStringValue("[ <Number>, <Number> ]")
    String Binomial_SyntaxCAS();

    @DefaultStringValue("BinomialDist")
    String BinomialDist();

    @DefaultStringValue("[ <Number of Trials>, <Probability of Success> ]\n[ <Number of Trials>, <Probability of Success>, <Boolean Cumulative> ]\n[ <Number of Trials>, <Probability of Success>, <Variable Value>, <Boolean Cumulative> ]")
    String BinomialDist_Syntax();

    @DefaultStringValue("[ <Number of Trials>, <Probability of Success>, <Variable Value>, <Boolean Cumulative> ]")
    String BinomialDist_SyntaxCAS();

    @DefaultStringValue("BoxPlot")
    String BoxPlot();

    @DefaultStringValue("[ <yOffset>, <yScale>, <List of Raw Data> ]\n[ <yOffset>, <yScale>, <Start Value>, <Q1>, <Median>, <Q3>, <End Value> ]")
    String BoxPlot_Syntax();

    @DefaultStringValue("Button")
    String Button();

    @DefaultStringValue("[ ]\n[ <Caption> ]")
    String Button_Syntax();

    @DefaultStringValue("CFactor")
    String CFactor();

    @DefaultStringValue("[ <Expression> ]\n[ <Expression>, <Variable> ]")
    String CFactor_SyntaxCAS();

    @DefaultStringValue("CSolutions")
    String CSolutions();

    @DefaultStringValue("[ <Equation> ]\n[ <Equation>, <Variable> ]\n[ <List of Equations>, <List of Variables> ]")
    String CSolutions_SyntaxCAS();

    @DefaultStringValue("CSolve")
    String CSolve();

    @DefaultStringValue("[ <Equation> ]\n[ <Equation>, <Variable> ]\n[ <List of Equations>, <List of Variables> ]")
    String CSolve_SyntaxCAS();

    @DefaultStringValue("Cauchy")
    String Cauchy();

    @DefaultStringValue("[ <Median>, <Scale>, x ]\n[ <Median>, <Scale>, <Variable Value> ]\n[ <Median>, <Scale>, x, <Boolean Cumulative> ]")
    String Cauchy_Syntax();

    @DefaultStringValue("[ <Median>, <Scale>, <Variable Value> ]")
    String Cauchy_SyntaxCAS();

    @DefaultStringValue("Cell")
    String Cell();

    @DefaultStringValue("[ <Column>, <Row> ]")
    String Cell_Syntax();

    @DefaultStringValue("CellRange")
    String CellRange();

    @DefaultStringValue("[ <Start Cell>, <End Cell> ]")
    String CellRange_Syntax();

    @DefaultStringValue("Center")
    String Center();

    @DefaultStringValue("[ <Conic> ]")
    String Center_Syntax();

    @DefaultStringValue("CenterView")
    String CenterView();

    @DefaultStringValue("[ <Center Point> ]")
    String CenterView_Syntax();

    @DefaultStringValue("Centroid")
    String Centroid();

    @DefaultStringValue("[ <Polygon> ]")
    String Centroid_Syntax();

    @DefaultStringValue("Checkbox")
    String Checkbox();

    @DefaultStringValue("[ ]\n[ <Caption> ]\n[ <List> ]\n[ <Caption>, <List> ]")
    String Checkbox_Syntax();

    @DefaultStringValue("ChiSquared")
    String ChiSquared();

    @DefaultStringValue("[ <Degrees of Freedom>, x ]\n[ <Degrees of Freedom>, <Variable Value> ]\n[ <Degrees of Freedom>, x, <Boolean Cumulative> ]")
    String ChiSquared_Syntax();

    @DefaultStringValue("[ <Degrees of Freedom>, <Variable> ]")
    String ChiSquared_SyntaxCAS();

    @DefaultStringValue("Circle")
    String Circle();

    @DefaultStringValue("[ <Point>, <Radius Number> ]\n[ <Point>, <Segment> ]\n[ <Point>, <Point> ]\n[ <Point>, <Point>, <Point> ]")
    String Circle_Syntax();

    @DefaultStringValue("CircularArc")
    String CircleArc();

    @DefaultStringValue("[ <Midpoint>, <Point>, <Point> ]")
    String CircleArc_Syntax();

    @DefaultStringValue("CircularSector")
    String CircleSector();

    @DefaultStringValue("[ <Midpoint>, <Point>, <Point> ]")
    String CircleSector_Syntax();

    @DefaultStringValue("CircumcircularArc")
    String CircumcircleArc();

    @DefaultStringValue("[ <Point>, <Point>, <Point> ]")
    String CircumcircleArc_Syntax();

    @DefaultStringValue("CircumcircularSector")
    String CircumcircleSector();

    @DefaultStringValue("[ <Point>, <Point>, <Point> ]")
    String CircumcircleSector_Syntax();

    @DefaultStringValue("Circumference")
    String Circumference();

    @DefaultStringValue("[ <Conic> ]")
    String Circumference_Syntax();

    @DefaultStringValue("Classes")
    String Classes();

    @DefaultStringValue("[ <List of Data>, <Number of Classes> ]\n[ <List of Data>, <Start>, <Width of Classes> ]")
    String Classes_Syntax();

    @DefaultStringValue("ClosestPoint")
    String ClosestPoint();

    @DefaultStringValue("[ <Path>, <Point> ]")
    String ClosestPoint_Syntax();

    @DefaultStringValue("Coefficients")
    String Coefficients();

    @DefaultStringValue("[ <Polynomial> ]\n[ <Conic> ]")
    String Coefficients_Syntax();

    @DefaultStringValue("[ <Polynomial> ]")
    String Coefficients_SyntaxCAS();

    @DefaultStringValue("Column")
    String Column();

    @DefaultStringValue("[ <Spreadsheet Cell> ]")
    String Column_Syntax();

    @DefaultStringValue("ColumnName")
    String ColumnName();

    @DefaultStringValue("[ <Spreadsheet Cell> ]")
    String ColumnName_Syntax();

    @DefaultStringValue("Command")
    String Command();

    @DefaultStringValue("CommonDenominator")
    String CommonDenominator();

    @DefaultStringValue("[ <Expression>, <Expression> ]")
    String CommonDenominator_Syntax();

    @DefaultStringValue("CompetitionRank")
    String CompetitionRank();

    @DefaultStringValue("[ <List> ]")
    String CompetitionRank_Syntax();

    @DefaultStringValue("CompleteSquare")
    String CompleteSquare();

    @DefaultStringValue("[ <Quadratic Function> ]")
    String CompleteSquare_Syntax();

    @DefaultStringValue("ComplexRoot")
    String ComplexRoot();

    @DefaultStringValue("[ <Polynomial> ]")
    String ComplexRoot_Syntax();

    @DefaultStringValue("Conic")
    String Conic();

    @DefaultStringValue("[ <Point>, <Point>, <Point>, <Point>, <Point> ]\n[ <Number>, <Number>, <Number>, <Number>, <Number>, <Number> ]")
    String Conic_Syntax();

    @DefaultStringValue("ConstructionStep")
    String ConstructionStep();

    @DefaultStringValue("[ ]\n[ <Object> ]")
    String ConstructionStep_Syntax();

    @DefaultStringValue("ContinuedFraction")
    String ContinuedFraction();

    @DefaultStringValue("[ <Number> ]\n[ <Number>, <Level> ]\n[ <Number>, <Level>, <Shorthand true|false> ]")
    String ContinuedFraction_Syntax();

    @DefaultStringValue("ConvexHull")
    String ConvexHull();

    @DefaultStringValue("[ <List of Points> ]")
    String ConvexHull_Syntax();

    @DefaultStringValue("CopyFreeObject")
    String CopyFreeObject();

    @DefaultStringValue("[ <Object> ]")
    String CopyFreeObject_Syntax();

    @DefaultStringValue("Corner")
    String Corner();

    @DefaultStringValue("[ <Number of Corner> ]\n[ <Image>, <Number of Corner> ]\n[ <Text>, <Number of Corner> ]\n[ <Graphics View>, <Number of Corner> ]")
    String Corner_Syntax();

    @DefaultStringValue("CountIf")
    String CountIf();

    @DefaultStringValue("[ <Condition>, <List> ]")
    String CountIf_Syntax();

    @DefaultStringValue("Covariance")
    String Covariance();

    @DefaultStringValue("[ <List of Points> ]\n[ <List of Numbers>, <List of Numbers> ]")
    String Covariance_Syntax();

    @DefaultStringValue("[ <List of Points> ]\n[ <List of Numbers>, <List of Numbers> ]")
    String Covariance_SyntaxCAS();

    @DefaultStringValue("Cross")
    String Cross();

    @DefaultStringValue("[ <Vector>, <Vector> ]")
    String Cross_SyntaxCAS();

    @DefaultStringValue("CrossRatio")
    String CrossRatio();

    @DefaultStringValue("[ <Point>, <Point>, <Point>, <Point> ]")
    String CrossRatio_Syntax();

    @DefaultStringValue("Cubic")
    String Cubic();

    @DefaultStringValue("[ <Point>, <Point>, <Point>, <Number> ]")
    String Cubic_Syntax();

    @DefaultStringValue("Curvature")
    String Curvature();

    @DefaultStringValue("[ <Point>, <Function> ]\n[ <Point>, <Curve> ]")
    String Curvature_Syntax();

    @DefaultStringValue("CurvatureVector")
    String CurvatureVector();

    @DefaultStringValue("[ <Point>, <Function> ]\n[ <Point>, <Curve> ]")
    String CurvatureVector_Syntax();

    @DefaultStringValue("Curve")
    String CurveCartesian();

    @DefaultStringValue("[ <Expression>, <Expression>, <Parameter Variable>, <Start Value>, <End Value> ]")
    String CurveCartesian_Syntax();

    @DefaultStringValue("Decimal")
    String Decimal();

    @DefaultStringValue("[ <Expression> ]")
    String Decimal_SyntaxCAS();

    @DefaultStringValue("IsDefined")
    String Defined();

    @DefaultStringValue("[ <Object> ]")
    String Defined_Syntax();

    @DefaultStringValue("Degree")
    String Degree();

    @DefaultStringValue("[ <Polynomial> ]")
    String Degree_Syntax();

    @DefaultStringValue("[ <Polynomial> ]")
    String Degree_SyntaxCAS();

    @DefaultStringValue("DelaunayTriangulation")
    String DelauneyTriangulation();

    @DefaultStringValue("[ <List of Points> ]")
    String DelauneyTriangulation_Syntax();

    @DefaultStringValue("Delete")
    String Delete();

    @DefaultStringValue("[ <Object> ]")
    String Delete_Syntax();

    @DefaultStringValue("[ <Variable> ]")
    String Delete_SyntaxCAS();

    @DefaultStringValue("Denominator")
    String Denominator();

    @DefaultStringValue("[ <Function> ]")
    String Denominator_Syntax();

    @DefaultStringValue("[ <Expression> ]")
    String Denominator_SyntaxCAS();

    @DefaultStringValue("Derivative")
    String Derivative();

    @DefaultStringValue("[ <Function> ]\n[ <Curve> ]\n[ <Function>, <Number> ]\n[ <Function>, <Variable> ]\n[ <Curve>, <Number> ]\n[ <Function>, <Variable>, <Number> ]")
    String Derivative_Syntax();

    @DefaultStringValue("[ <Expression> ]\n[ <Expression>, <Variable> ]\n[ <Expression>, <Variable>, <Number> ]")
    String Derivative_SyntaxCAS();

    @DefaultStringValue("Determinant")
    String Determinant();

    @DefaultStringValue("[ <Matrix> ]")
    String Determinant_Syntax();

    @DefaultStringValue("[ <Matrix> ]")
    String Determinant_SyntaxCAS();

    @DefaultStringValue("ConjugateDiameter")
    String Diameter();

    @DefaultStringValue("[ <Vector>, <Conic> ]\n[ <Line>, <Conic> ]")
    String Diameter_Syntax();

    @DefaultStringValue("Dilate")
    String Dilate();

    @DefaultStringValue("[ <Object>, <Dilation Factor> ]\n[ <Object>, <Dilation Factor>, <Dilation Center Point> ]")
    String Dilate_Syntax();

    @DefaultStringValue("Dimension")
    String Dimension();

    @DefaultStringValue("[ <Object> ]")
    String Dimension_Syntax();

    @DefaultStringValue("Direction")
    String Direction();

    @DefaultStringValue("[ <Line> ]")
    String Direction_Syntax();

    @DefaultStringValue("Directrix")
    String Directrix();

    @DefaultStringValue("[ <Conic> ]")
    String Directrix_Syntax();

    @DefaultStringValue("Distance")
    String Distance();

    @DefaultStringValue("[ <Point>, <Object> ]\n[ <Line>, <Line> ]")
    String Distance_Syntax();

    @DefaultStringValue("Div")
    String Div();

    @DefaultStringValue("[ <Dividend Number>, <Divisor Number> ]\n[ <Dividend Polynomial>, <Divisor Polynomial> ]")
    String Div_Syntax();

    @DefaultStringValue("[ <Dividend Number>, <Divisor Number> ]\n[ <Dividend Polynomial>, <Divisor Polynomial> ]")
    String Div_SyntaxCAS();

    @DefaultStringValue("Division")
    String Division();

    @DefaultStringValue("[ <Dividend Number>, <Divisor Number> ]\n[ <Dividend Polynomial>, <Divisor Polynomial> ]")
    String Division_Syntax();

    @DefaultStringValue("Divisors")
    String Divisors();

    @DefaultStringValue("[ <Number> ]")
    String Divisors_Syntax();

    @DefaultStringValue("DivisorsList")
    String DivisorsList();

    @DefaultStringValue("[ <Number> ]")
    String DivisorsList_Syntax();

    @DefaultStringValue("DivisorsSum")
    String DivisorsSum();

    @DefaultStringValue("[ <Number> ]")
    String DivisorsSum_Syntax();

    @DefaultStringValue("Dot")
    String Dot();

    @DefaultStringValue("[ <Vector>, <Vector> ]")
    String Dot_SyntaxCAS();

    @DefaultStringValue("DotPlot")
    String DotPlot();

    @DefaultStringValue("[ <List of Raw Data> ]")
    String DotPlot_Syntax();

    @DefaultStringValue("DynamicCoordinates")
    String DynamicCoordinates();

    @DefaultStringValue("[ <Point>, <Number>, <Number> ]")
    String DynamicCoordinates_Syntax();

    @DefaultStringValue("Eccentricity")
    String Eccentricity();

    @DefaultStringValue("[ <Conic> ]")
    String Eccentricity_Syntax();

    @DefaultStringValue("Element")
    String Element();

    @DefaultStringValue("[ <List>, <Position of Element> ]\n[ <Matrix>, <Row>, <Column> ]\n[ <List>, <Index1>, <Index2>, ... ]")
    String Element_Syntax();

    @DefaultStringValue("[ <List>, <Position of Element> ]\n[ <Matrix>, <Row>, <Column> ]")
    String Element_SyntaxCAS();

    @DefaultStringValue("Ellipse")
    String Ellipse();

    @DefaultStringValue("[ <Focus>, <Focus>, <Semimajor Axis Length> ]\n[ <Focus>, <Focus>, <Segment> ]\n[ <Focus>, <Focus>, <Point> ]")
    String Ellipse_Syntax();

    @DefaultStringValue("Erlang")
    String Erlang();

    @DefaultStringValue("[ <Shape>, <Rate>, x ]\n[ <Shape>, <Rate>, <Variable Value> ]\n[ <Shape>, <Rate>, x, <Boolean Cumulative> ]")
    String Erlang_Syntax();

    @DefaultStringValue("LinearEccentricity")
    String Excentricity();

    @DefaultStringValue("[ <Conic> ]")
    String Excentricity_Syntax();

    @DefaultStringValue("Execute")
    String Execute();

    @DefaultStringValue("[ <List of Texts> ]\n[ <List of Texts>, <Parameter>, <Parameter>, ... ]")
    String Execute_Syntax();

    @DefaultStringValue("Expand")
    String Expand();

    @DefaultStringValue("[ <Expression> ]")
    String Expand_Syntax();

    @DefaultStringValue("[ <Expression> ]")
    String Expand_SyntaxCAS();

    @DefaultStringValue("Exponential")
    String Exponential();

    @DefaultStringValue("[ <Lambda>, x ]\n[ <Lambda>, <Variable Value> ]\n[ <Lambda>, x, <Boolean Cumulative> ]")
    String Exponential_Syntax();

    @DefaultStringValue("[ <Lambda>, <Variable Value> ]")
    String Exponential_SyntaxCAS();

    @DefaultStringValue("Extremum")
    String Extremum();

    @DefaultStringValue("[ <Polynomial> ]\n[ <Function>, <Start x-Value>, <End x-Value> ]")
    String Extremum_Syntax();

    @DefaultStringValue("FDistribution")
    String FDistribution();

    @DefaultStringValue("[ <Numerator Degrees of Freedom>, <Denominator Degrees of Freedom>, x ]\n[ <Numerator Degrees of Freedom>, <Denominator Degrees of Freedom>, <Variable Value> ]\n[ <Numerator Degrees of Freedom>, <Denominator Degrees of Freedom>, x, <Boolean Cumulative> ]")
    String FDistribution_Syntax();

    @DefaultStringValue("[ <Numerator Degrees of Freedom>, <Denominator Degrees of Freedom>, <Variable Value> ]")
    String FDistribution_SyntaxCAS();

    @DefaultStringValue("Factor")
    String Factor();

    @DefaultStringValue("[ <Polynomial> ]")
    String Factor_Syntax();

    @DefaultStringValue("[ <Polynomial> ]\n[ <Expression>, <Variable> ]")
    String Factor_SyntaxCAS();

    @DefaultStringValue("Factors")
    String Factors();

    @DefaultStringValue("[ <Polynomial> ]\n[ <Number> ]")
    String Factors_Syntax();

    @DefaultStringValue("[ <Polynomial> ]\n[ <Number> ]")
    String Factors_SyntaxCAS();

    @DefaultStringValue("FillCells")
    String FillCells();

    @DefaultStringValue("[ <CellRange>, <Object> ]\n[ <Cell>, <List> ]\n[ <Cell>, <Matrix> ]")
    String FillCells_Syntax();

    @DefaultStringValue("FillColumn")
    String FillColumn();

    @DefaultStringValue("[ <Column>, <List> ]")
    String FillColumn_Syntax();

    @DefaultStringValue("FillRow")
    String FillRow();

    @DefaultStringValue("[ <Row>, <List> ]")
    String FillRow_Syntax();

    @DefaultStringValue("First")
    String First();

    @DefaultStringValue("[ <List> ]\n[ <Text> ]\n[ <List>, <Number of Elements> ]\n[ <Text>, <Number of Elements> ]\n[ <Locus>, <Number of Elements> ]")
    String First_Syntax();

    @DefaultStringValue("[ <List> ]\n[ <List>, <Number of Elements> ]")
    String First_SyntaxCAS();

    @DefaultStringValue("MajorAxis")
    String FirstAxis();

    @DefaultStringValue("[ <Conic> ]")
    String FirstAxis_Syntax();

    @DefaultStringValue("SemiMajorAxisLength")
    String FirstAxisLength();

    @DefaultStringValue("[ <Conic> ]")
    String FirstAxisLength_Syntax();

    @DefaultStringValue("Fit")
    String Fit();

    @DefaultStringValue("[ <List of Points>, <List of Functions> ]\n[ <List of Points>, <Function> ]")
    String Fit_Syntax();

    @DefaultStringValue("FitExp")
    String FitExp();

    @DefaultStringValue("[ <List of Points> ]")
    String FitExp_Syntax();

    @DefaultStringValue("[ <List of Points> ]")
    String FitExp_SyntaxCAS();

    @DefaultStringValue("FitGrowth")
    String FitGrowth();

    @DefaultStringValue("[ <List of Points> ]")
    String FitGrowth_Syntax();

    @DefaultStringValue("FitLineX")
    String FitLineX();

    @DefaultStringValue("[ <List of Points> ]")
    String FitLineX_Syntax();

    @DefaultStringValue("FitLine")
    String FitLineY();

    @DefaultStringValue("[ <List of Points> ]")
    String FitLineY_Syntax();

    @DefaultStringValue("FitLog")
    String FitLog();

    @DefaultStringValue("[ <List of Points> ]")
    String FitLog_Syntax();

    @DefaultStringValue("[ <List of Points> ]")
    String FitLog_SyntaxCAS();

    @DefaultStringValue("FitLogistic")
    String FitLogistic();

    @DefaultStringValue("[ <List of Points> ]")
    String FitLogistic_Syntax();

    @DefaultStringValue("FitPoly")
    String FitPoly();

    @DefaultStringValue("[ <List of Points>, <Degree of Polynomial> ]")
    String FitPoly_Syntax();

    @DefaultStringValue("[ <List of Points>, <Degree of Polynomial> ]")
    String FitPoly_SyntaxCAS();

    @DefaultStringValue("FitPow")
    String FitPow();

    @DefaultStringValue("[ <List of Points> ]")
    String FitPow_Syntax();

    @DefaultStringValue("[ <List of Points> ]")
    String FitPow_SyntaxCAS();

    @DefaultStringValue("FitSin")
    String FitSin();

    @DefaultStringValue("[ <List of Points> ]")
    String FitSin_Syntax();

    @DefaultStringValue("[ <List of Points> ]")
    String FitSin_SyntaxCAS();

    @DefaultStringValue("Flatten")
    String Flatten();

    @DefaultStringValue("[ <List> ]")
    String Flatten_Syntax();

    @DefaultStringValue("Focus")
    String Focus();

    @DefaultStringValue("[ <Conic> ]")
    String Focus_Syntax();

    @DefaultStringValue("FractionText")
    String FractionText();

    @DefaultStringValue("[ <Number> ]\n[ <Point> ]")
    String FractionText_Syntax();

    @DefaultStringValue("Frequency")
    String Frequency();

    @DefaultStringValue("[ <List of Raw Data> ]\n[ <Boolean Cumulative>, <List of Raw Data> ]\n[ <List of Class Boundaries>, <List of Raw Data>, ]\n[ <Boolean Cumulative>, <List of Class Boundaries>, <List of Raw Data> ]\n[ <List of Class Boundaries>, <List of Raw Data>, <Use Density>, <Density Scale Factor (optional)> ]\n[ <Boolean Cumulative>, <List of Class Boundaries>, <List of Raw Data>, <Use Density>, <Density Scale Factor (optional)> ]")
    String Frequency_Syntax();

    @DefaultStringValue("FrequencyPolygon")
    String FrequencyPolygon();

    @DefaultStringValue("[ <List of Class Boundaries>, <List of Heights> ]\n[ <List of Class Boundaries>, <List of Raw Data>, <Boolean Use Density>, <Density Scale Factor (optional)> ]\n[ <Boolean Cumulative>, <List of Class Boundaries>, <List of Raw Data>, <Boolean Use Density>, <Density Scale Factor (optional)> ]")
    String FrequencyPolygon_Syntax();

    @DefaultStringValue("FrequencyTable")
    String FrequencyTable();

    @DefaultStringValue("[ <List of Raw Data> ]\n[ <Boolean Cumulative>, <List of Raw Data> ]\n[ <List of Class Boundaries>, <List of Raw Data> ]\n[ <Boolean Cumulative>, <List of Class Boundaries>, <List of Raw Data> ]\n[ <List of Class Boundaries>, <List of Raw Data>, <Use Density>, <Density Scale Factor (optional)> ]\n[ <Boolean Cumulative>, <List of Class Boundaries>, <List of Raw Data>, <Use Density>, <Density Scale Factor (optional)> ]")
    String FrequencyTable_Syntax();

    @DefaultStringValue("FromBase")
    String FromBase();

    @DefaultStringValue("[ \"<Number as Text>\", <Base> ]")
    String FromBase_Syntax();

    @DefaultStringValue("Function")
    String Function();

    @DefaultStringValue("[ <Function>, <Start x-Value>, <End x-Value> ]\n[ <List of Numbers> ]")
    String Function_Syntax();

    @DefaultStringValue("GCD")
    String GCD();

    @DefaultStringValue("[ <List of Numbers> ]\n[ <Number>, <Number> ]")
    String GCD_Syntax();

    @DefaultStringValue("[ <List of Numbers> ]\n[ <List of Polynomials> ]\n[ <Number>, <Number> ]\n[ <Polynomial>, <Polynomial> ]")
    String GCD_SyntaxCAS();

    @DefaultStringValue("Gamma")
    String Gamma();

    @DefaultStringValue("[ <Alpha>, <Beta>, x ]\n[ <Alpha>, <Beta>, <Variable Value> ]\n[ <Alpha>, <Beta>, x, <Boolean Cumulative> ]")
    String Gamma_Syntax();

    @DefaultStringValue("[ <Alpha>, <Beta>, <Variable Value> ]")
    String Gamma_SyntaxCAS();

    @DefaultStringValue("GeometricMean")
    String GeometricMean();

    @DefaultStringValue("[ <List of Numbers> ]")
    String GeometricMean_Syntax();

    @DefaultStringValue("GetTime")
    String GetTime();

    @DefaultStringValue("[]\n[ \"<Format>\" ]")
    String GetTime_Syntax();

    @DefaultStringValue("Groebner")
    String Groebner();

    @DefaultStringValue("[ <List of Polynomials> ]\n[ <List of Polynomials>, <List of Variables> ]\n[ <List of Polynomials>, <List of Variables>, <Type of Variable Ordering> ]")
    String Groebner_SyntaxCAS();

    @DefaultStringValue("HarmonicMean")
    String HarmonicMean();

    @DefaultStringValue("[ <List of Numbers> ]")
    String HarmonicMean_Syntax();

    @DefaultStringValue("HideLayer")
    String HideLayer();

    @DefaultStringValue("[ <Number> ]")
    String HideLayer_Syntax();

    @DefaultStringValue("Histogram")
    String Histogram();

    @DefaultStringValue("[ <List of Class Boundaries>, <List of Heights> ]\n[ <List of Class Boundaries>, <List of Raw Data>, <Use Density>, <Density Scale Factor (optional)> ]\n[ <Boolean Cumulative>, <List of Class Boundaries>, <List of Raw Data>, <Use Density>, <Density Scale Factor (optional)> ]")
    String Histogram_Syntax();

    @DefaultStringValue("HistogramRight")
    String HistogramRight();

    @DefaultStringValue("[ <List of Class Boundaries>, <List of Heights> ]\n[ <List of Class Boundaries>, <List of Raw Data>, <Use Density>, <Density Scale Factor> (optional) ]\n[ <Boolean Cumulative>, <List of Class Boundaries>, <List of Raw Data>, <Use Density>, <Density Scale Factor> (optional) ]")
    String HistogramRight_Syntax();

    @DefaultStringValue("Hull")
    String Hull();

    @DefaultStringValue("[ <List of Points>, <Percentage> ]")
    String Hull_Syntax();

    @DefaultStringValue("HyperGeometric")
    String HyperGeometric();

    @DefaultStringValue("[ <Population Size>, <Number of Successes>, <Sample Size> ]\n[ <Population Size>, <Number of Successes>, <Sample Size>, <Boolean Cumulative> ]\n[ <Population Size>, <Number of Successes>, <Sample Size>, <Variable Value>, <Boolean Cumulative> ]")
    String HyperGeometric_Syntax();

    @DefaultStringValue("[ <Population Size>, <Number of Successes>, <Sample Size>, <Variable Value>, <Boolean Cumulative> ]")
    String HyperGeometric_SyntaxCAS();

    @DefaultStringValue("Hyperbola")
    String Hyperbola();

    @DefaultStringValue("[ <Focus>, <Focus>, <Semimajor Axis Length> ]\n[ <Focus>, <Focus>, <Segment> ]\n[ <Focus>, <Focus>, <Point> ]")
    String Hyperbola_Syntax();

    @DefaultStringValue("Identity")
    String Identity();

    @DefaultStringValue("[ <Number> ]")
    String Identity_Syntax();

    @DefaultStringValue("[ <Number> ]")
    String Identity_SyntaxCAS();

    @DefaultStringValue("If")
    String If();

    @DefaultStringValue("[ <Condition>, <Then> ]\n[ <Condition>, <Then>, <Else> ]")
    String If_Syntax();

    @DefaultStringValue("ImplicitCurve")
    String ImplicitCurve();

    @DefaultStringValue("[ <List of Points> ]\n[ <f(x, y)> ]")
    String ImplicitCurve_Syntax();

    @DefaultStringValue("ImplicitDerivative")
    String ImplicitDerivative();

    @DefaultStringValue("[ <f(x, y)> ]")
    String ImplicitDerivative_Syntax();

    @DefaultStringValue("[ <f(x, y) > ]\n[ <Expression>, <Dependent Variable>, <Independent Variable> ]")
    String ImplicitDerivative_SyntaxCAS();

    @DefaultStringValue("Incircle")
    String Incircle();

    @DefaultStringValue("[ <Point>, <Point>, <Point> ]")
    String Incircle_Syntax();

    @DefaultStringValue("IndexOf")
    String IndexOf();

    @DefaultStringValue("[ <Object>, <List> ]\n[ <Text>, <Text> ]\n[ <Object>, <List>, <Start Index> ]\n[ <Text>, <Text>, <Start Index> ]")
    String IndexOf_Syntax();

    @DefaultStringValue("[ <Line>, <Radius> ]\n[ <Point>, <Vector>, <Radius> ]\n[ <Point>, <Point>, <Radius> ]")
    String InfiniteCylinder_Syntax();

    @DefaultStringValue("Insert")
    String Insert();

    @DefaultStringValue("[ <List>, <List>, <Position> ]\n[ <Object>, <List>, <Position> ]")
    String Insert_Syntax();

    @DefaultStringValue("IntegerPart")
    String IntegerPart();

    @DefaultStringValue("[ <Expression> ]")
    String IntegerPart_SyntaxCAS();

    @DefaultStringValue("Integral")
    String Integral();

    @DefaultStringValue("[ <Function> ]\n[ <Function>, <Start x-Value>, <End x-Value> ]\n[ <Function>, <Start x-Value>, <End x-Value>, <Boolean Evaluate> ]")
    String Integral_Syntax();

    @DefaultStringValue("[ <Function> ]\n[ <Function>, <Variable> ]\n[ <Function>, <Start x-Value>, <End x-Value> ]\n[ <Function>, <Variable>, <Start Value>, <End Value> ]")
    String Integral_SyntaxCAS();

    @DefaultStringValue("IntegralBetween")
    String IntegralBetween();

    @DefaultStringValue("[ <Function>, <Function>, <Start x-Value>, <End x-Value> ]\n[ <Function>, <Function>, <Start x-Value>, <End x-Value>, <Boolean Evaluate> ]")
    String IntegralBetween_Syntax();

    @DefaultStringValue("[ <Function>, <Function>, <Start x-Value>, <End x-Value> ]\n[ <Function>, <Function>, <Variable>, <Start Value>, <End Value> ]")
    String IntegralBetween_SyntaxCAS();

    @DefaultStringValue("Intersect")
    String Intersect();

    @DefaultStringValue("[ <Object>, <Object> ]\n[ <Object>, <Object>, <Index of Intersection Point> ]\n[ <Object>, <Object>, <Initial Point> ]\n[ <Function>, <Function>, <Start x-Value>, <End x-Value> ]")
    String Intersect_Syntax();

    @DefaultStringValue("[ <Function>, <Function> ]")
    String Intersect_SyntaxCAS();

    @DefaultStringValue("IntersectRegion")
    String IntersectRegion();

    @DefaultStringValue("[ <Polygon>, <Polygon> ]")
    String IntersectRegion_Syntax();

    @DefaultStringValue("Intersection")
    String Intersection();

    @DefaultStringValue("[ <List>, <List> ]")
    String Intersection_Syntax();

    @DefaultStringValue("IntersectionPaths")
    String IntersectionPaths();

    @DefaultStringValue("[ <Line>, <Polygon> ]\n[ <Line>, <Conic> ]")
    String IntersectionPaths_Syntax();

    @DefaultStringValue("InverseBinomial")
    String InverseBinomial();

    @DefaultStringValue("[ <Number of Trials>, <Probability of Success>, <Probability> ]")
    String InverseBinomial_Syntax();

    @DefaultStringValue("InverseCauchy")
    String InverseCauchy();

    @DefaultStringValue("[ <Median>, <Scale>, <Probability> ]")
    String InverseCauchy_Syntax();

    @DefaultStringValue("InverseChiSquared")
    String InverseChiSquared();

    @DefaultStringValue("[ <Degrees of Freedom>, <Probability> ]")
    String InverseChiSquared_Syntax();

    @DefaultStringValue("InverseExponential")
    String InverseExponential();

    @DefaultStringValue("[ <Lambda>, <Probability> ]")
    String InverseExponential_Syntax();

    @DefaultStringValue("InverseFDistribution")
    String InverseFDistribution();

    @DefaultStringValue("[ <Numerator Degrees of Freedom>, <Denominator Degrees of Freedom>, <Probability> ]")
    String InverseFDistribution_Syntax();

    @DefaultStringValue("InverseGamma")
    String InverseGamma();

    @DefaultStringValue("[ <Alpha>, <Beta>, <Probability> ]")
    String InverseGamma_Syntax();

    @DefaultStringValue("InverseHyperGeometric")
    String InverseHyperGeometric();

    @DefaultStringValue("[ <Population Size>, <Number of Successes>, <Sample Size>, <Probability> ]")
    String InverseHyperGeometric_Syntax();

    @DefaultStringValue("InverseLogNormal")
    String InverseLogNormal();

    @DefaultStringValue("[ <Mean>, <Standard Deviation>, <Probability> ]")
    String InverseLogNormal_Syntax();

    @DefaultStringValue("InverseLogistic")
    String InverseLogistic();

    @DefaultStringValue("[ <Mean>, <Scale>, <Probability> ]")
    String InverseLogistic_Syntax();

    @DefaultStringValue("InverseNormal")
    String InverseNormal();

    @DefaultStringValue("[ <Mean>, <Standard Deviation>, <Probability> ]")
    String InverseNormal_Syntax();

    @DefaultStringValue("InversePascal")
    String InversePascal();

    @DefaultStringValue("[ <Number of Successes>, <Probability of Success>, <Probability> ]")
    String InversePascal_Syntax();

    @DefaultStringValue("InversePoisson")
    String InversePoisson();

    @DefaultStringValue("[ <Mean>, <Probability> ]")
    String InversePoisson_Syntax();

    @DefaultStringValue("InverseTDistribution")
    String InverseTDistribution();

    @DefaultStringValue("[ <Degrees of Freedom>, <Probability> ]")
    String InverseTDistribution_Syntax();

    @DefaultStringValue("InverseWeibull")
    String InverseWeibull();

    @DefaultStringValue("[ <Shape>, <Scale>, <Probability> ]")
    String InverseWeibull_Syntax();

    @DefaultStringValue("InverseZipf")
    String InverseZipf();

    @DefaultStringValue("[ <Number of Elements>, <Exponent>, <Probability> ]")
    String InverseZipf_Syntax();

    @DefaultStringValue("Invert")
    String Invert();

    @DefaultStringValue("[ <Matrix> ]\n[ <Function> ]")
    String Invert_Syntax();

    @DefaultStringValue("[ <Matrix> ]")
    String Invert_SyntaxCAS();

    @DefaultStringValue("IsInRegion")
    String IsInRegion();

    @DefaultStringValue("[ <Point>, <Region> ]")
    String IsInRegion_Syntax();

    @DefaultStringValue("IsInteger")
    String IsInteger();

    @DefaultStringValue("[ <Number> ]")
    String IsInteger_Syntax();

    @DefaultStringValue("IsPrime")
    String IsPrime();

    @DefaultStringValue("[ <Number> ]")
    String IsPrime_Syntax();

    @DefaultStringValue("Iteration")
    String Iteration();

    @DefaultStringValue("[ <Function>, <Start Value>, <Number of Iterations> ]")
    String Iteration_Syntax();

    @DefaultStringValue("IterationList")
    String IterationList();

    @DefaultStringValue("[ <Function>, <Start Value>, <Number of Iterations> ]")
    String IterationList_Syntax();

    @DefaultStringValue("Join")
    String Join();

    @DefaultStringValue("[ <List of Lists> ]\n[ <List>, <List>, ... ]")
    String Join_Syntax();

    @DefaultStringValue("KeepIf")
    String KeepIf();

    @DefaultStringValue("[ <Condition>, <List> ]")
    String KeepIf_Syntax();

    @DefaultStringValue("LCM")
    String LCM();

    @DefaultStringValue("[ <List of Numbers> ]\n[ <Number>, <Number> ]")
    String LCM_Syntax();

    @DefaultStringValue("[ <List of Numbers> ]\n[ <List of Polynomials> ]\n[ <Number>, <Number> ]\n[ <Polynomial>, <Polynomial> ]")
    String LCM_SyntaxCAS();

    @DefaultStringValue("FormulaText")
    String LaTeX();

    @DefaultStringValue("[ <Object> ]\n[ <Object>, <Boolean for Substitution of Variables> ]\n[ <Object>, <Boolean for Substitution of Variables>, <Boolean Show Name> ]")
    String LaTeX_Syntax();

    @DefaultStringValue("Last")
    String Last();

    @DefaultStringValue("[ <List> ]\n[ <Text> ]\n[ <List>, <Number of Elements> ]\n[ <Text>, <Number of Elements> ]")
    String Last_Syntax();

    @DefaultStringValue("[ <List> ]\n[ <List>, <Number of Elements> ]")
    String Last_SyntaxCAS();

    @DefaultStringValue("LeftSide")
    String LeftSide();

    @DefaultStringValue("[ <Equation> ]")
    String LeftSide_Syntax();

    @DefaultStringValue("[ <Equation> ]\n[ <List of Equations> ]")
    String LeftSide_SyntaxCAS();

    @DefaultStringValue("LeftSum")
    String LeftSum();

    @DefaultStringValue("[ <Function>, <Start x-Value>, <End x-Value>, <Number of Rectangles> ]")
    String LeftSum_Syntax();

    @DefaultStringValue("Length")
    String Length();

    @DefaultStringValue("[ <Object> ]\n[ <Function>, <Start x-Value>, <End x-Value> ]\n[ <Function>, <Start Point>, <End Point> ]\n[ <Curve>, <Start x-Value>, <End x-Value> ]\n[ <Curve>, <Start Point>, <End Point> ]")
    String Length_Syntax();

    @DefaultStringValue("[ <Function>, <x-start>, <x-end> ]\n[ <Function>, <Variable>, <Start Point>, <End Point> ]")
    String Length_SyntaxCAS();

    @DefaultStringValue("LetterToUnicode")
    String LetterToUnicode();

    @DefaultStringValue("[ \"<Letter>\" ]")
    String LetterToUnicode_Syntax();

    @DefaultStringValue("Limit")
    String Limit();

    @DefaultStringValue("[ <Function>, <Value> ]")
    String Limit_Syntax();

    @DefaultStringValue("[ <Expression>, <Value> ]\n[ <Expression>, <Variable>, <Value> ]")
    String Limit_SyntaxCAS();

    @DefaultStringValue("LimitAbove")
    String LimitAbove();

    @DefaultStringValue("[ <Function>, <Value> ]")
    String LimitAbove_Syntax();

    @DefaultStringValue("[ <Expression>, <Value> ]\n[ <Expression>, <Variable>, <Value> ]")
    String LimitAbove_SyntaxCAS();

    @DefaultStringValue("LimitBelow")
    String LimitBelow();

    @DefaultStringValue("[ <Function>, <Value> ]")
    String LimitBelow_Syntax();

    @DefaultStringValue("[ <Expression>, <Value> ]\n[ <Expression>, <Variable>, <Value> ]")
    String LimitBelow_SyntaxCAS();

    @DefaultStringValue("Line")
    String Line();

    @DefaultStringValue("[ <Point>, <Point> ]\n[ <Point>, <Parallel Line> ]\n[ <Point>, <Direction Vector> ]")
    String Line_Syntax();

    @DefaultStringValue("PerpendicularBisector")
    String LineBisector();

    @DefaultStringValue("[ <Segment> ]\n[ <Point>, <Point> ]")
    String LineBisector_Syntax();

    @DefaultStringValue("Locus")
    String Locus();

    @DefaultStringValue("[ <Point Creating Locus Line>, <Point> ]\n[ <Point Creating Locus Line>, <Slider> ]\n[ <Slopefield>, <Point> ]\n[ <f(x, y)>, <Point> ]")
    String Locus_Syntax();

    @DefaultStringValue("LocusEquation")
    String LocusEquation();

    @DefaultStringValue("[ <Locus> ]\n[ <Locus Point>, <Moving Point> ]")
    String LocusEquation_Syntax();

    @DefaultStringValue("LogNormal")
    String LogNormal();

    @DefaultStringValue("[ <Mean>, <Standard Deviation>, x ]\n[ <Mean>, <Standard Deviation>, <Variable Value> ]\n[ <Mean>, <Standard Deviation>, x, <Boolean Cumulative> ]")
    String LogNormal_Syntax();

    @DefaultStringValue("Logistic")
    String Logistic();

    @DefaultStringValue("[ <Mean>, <Scale>, x ]\n[ <Mean>, <Scale>, <Variable Value> ]\n[ <Mean>, <Scale>, x, <Boolean Cumulative> ]")
    String Logistic_Syntax();

    @DefaultStringValue("LowerSum")
    String LowerSum();

    @DefaultStringValue("[ <Function>, <Start x-Value>, <End x-Value>, <Number of Rectangles> ]")
    String LowerSum_Syntax();

    @DefaultStringValue("MatrixRank")
    String MatrixRank();

    @DefaultStringValue("[ <Matrix> ]")
    String MatrixRank_Syntax();

    @DefaultStringValue("Max")
    String Max();

    @DefaultStringValue("[ <List> ]\n[ <Interval> ]\n[ <Number>, <Number> ]\n[ <Function>, <Start x-Value>, <End x-Value> ]")
    String Max_Syntax();

    @DefaultStringValue("[ <List> ]\n[ <Number>, <Number> ]")
    String Max_SyntaxCAS();

    @DefaultStringValue("Maximize")
    String Maximize();

    @DefaultStringValue("[ <Dependent Number>, <Free Number> ]")
    String Maximize_Syntax();

    @DefaultStringValue("Mean")
    String Mean();

    @DefaultStringValue("[ <List of Numbers> ]")
    String Mean_Syntax();

    @DefaultStringValue("[ <List of Numbers> ]")
    String Mean_SyntaxCAS();

    @DefaultStringValue("MeanX")
    String MeanX();

    @DefaultStringValue("[ <List of Points> ]")
    String MeanX_Syntax();

    @DefaultStringValue("MeanY")
    String MeanY();

    @DefaultStringValue("[ <List of Points> ]")
    String MeanY_Syntax();

    @DefaultStringValue("Median")
    String Median();

    @DefaultStringValue("[ <List of Numbers> ]")
    String Median_Syntax();

    @DefaultStringValue("[ <List of Numbers> ]")
    String Median_SyntaxCAS();

    @DefaultStringValue("Midpoint")
    String Midpoint();

    @DefaultStringValue("[ <Segment> ]\n[ <Conic> ]\n[ <Interval> ]\n[ <Point>, <Point> ]")
    String Midpoint_Syntax();

    @DefaultStringValue("Min")
    String Min();

    @DefaultStringValue("[ <List> ]\n[ <Interval> ]\n[ <Number>, <Number> ]\n[ <Function>, <Start x-Value>, <End x-Value> ]")
    String Min_Syntax();

    @DefaultStringValue("[ <List> ]\n[ <Number>, <Number> ]")
    String Min_SyntaxCAS();

    @DefaultStringValue("Minimize")
    String Minimize();

    @DefaultStringValue("[ <Dependent Number>, <Free Number> ]")
    String Minimize_Syntax();

    @DefaultStringValue("MinimumSpanningTree")
    String MinimumSpanningTree();

    @DefaultStringValue("[ <List of Points> ]")
    String MinimumSpanningTree_Syntax();

    @DefaultStringValue("Reflect")
    String Mirror();

    @DefaultStringValue("[ <Object>, <Point> ]\n[ <Object>, <Line> ]\n[ <Object>, <Circle> ]")
    String Mirror_Syntax();

    @DefaultStringValue("MixedNumber")
    String MixedNumber();

    @DefaultStringValue("[ <Number> ]")
    String MixedNumber_SyntaxCAS();

    @DefaultStringValue("Mod")
    String Mod();

    @DefaultStringValue("[ <Dividend Number>, <Divisor Number> ]\n[ <Dividend Polynomial>, <Divisor Polynomial> ]")
    String Mod_Syntax();

    @DefaultStringValue("[ <Dividend Number>, <Divisor Number> ]\n[ <Dividend Polynomial>, <Divisor Polynomial> ]")
    String Mod_SyntaxCAS();

    @DefaultStringValue("Mode")
    String Mode();

    @DefaultStringValue("[ <List of Numbers> ]")
    String Mode_Syntax();

    @DefaultStringValue("NIntegral")
    String NIntegral();

    @DefaultStringValue("[ <Function>, <Start x-Value>, <End x-Value> ]\n[ <Function>, <Variable>, <Start Value>, <End Value> ]")
    String NIntegral_SyntaxCAS();

    @DefaultStringValue("NSolutions")
    String NSolutions();

    @DefaultStringValue("[ <Equation> ]\n[ <Equation>, <Variable> ]\n[ <Equation>, <Variable = starting value> ]\n[ <List of Equations>, <List of Variables> ]")
    String NSolutions_SyntaxCAS();

    @DefaultStringValue("NSolve")
    String NSolve();

    @DefaultStringValue("[ <Equation> ]\n[ <Equation>, <Variable> ]\n[ <Equation>, <Variable = starting value> ]\n[ <List of Equations>, <List of Variables)> ]")
    String NSolve_SyntaxCAS();

    @DefaultStringValue("Name")
    String Name();

    @DefaultStringValue("[ <Object> ]")
    String Name_Syntax();

    @DefaultStringValue("NextPrime")
    String NextPrime();

    @DefaultStringValue("[ <Number> ]")
    String NextPrime_Syntax();

    @DefaultStringValue("Normal")
    String Normal();

    @DefaultStringValue("[ <Mean>, <Standard Deviation>, x ]\n[ <Mean>, <Standard Deviation>, <Variable Value> ]\n[ <Mean>, <Standard Deviation>, x, <Boolean Cumulative> ]")
    String Normal_Syntax();

    @DefaultStringValue("[ <Mean>, <Standard Deviation>, <Variable Value> ]")
    String Normal_SyntaxCAS();

    @DefaultStringValue("NormalQuantilePlot")
    String NormalQuantilePlot();

    @DefaultStringValue("[ <List of Raw Data> ]")
    String NormalQuantilePlot_Syntax();

    @DefaultStringValue("Numerator")
    String Numerator();

    @DefaultStringValue("[ <Function> ]")
    String Numerator_Syntax();

    @DefaultStringValue("[ <Expression> ]")
    String Numerator_SyntaxCAS();

    @DefaultStringValue("Numeric")
    String Numeric();

    @DefaultStringValue("[ <Expression> ]\n[ <Expression>, <significant figures> ]")
    String Numeric_SyntaxCAS();

    @DefaultStringValue("Object")
    String Object();

    @DefaultStringValue("[ <Name of Object as Text> ]")
    String Object_Syntax();

    @DefaultStringValue("Ordinal")
    String Ordinal();

    @DefaultStringValue("[ <Integer> ]")
    String Ordinal_Syntax();

    @DefaultStringValue("OrdinalRank")
    String OrdinalRank();

    @DefaultStringValue("[ <List> ]")
    String OrdinalRank_Syntax();

    @DefaultStringValue("PerpendicularLine")
    String OrthogonalLine();

    @DefaultStringValue("[ <Point>, <Line> ]\n[ <Point>, <Segment> ]\n[ <Point>, <Vector> ]")
    String OrthogonalLine_Syntax();

    @DefaultStringValue("PerpendicularVector")
    String OrthogonalVector();

    @DefaultStringValue("[ <Line> ]\n[ <Segment> ]\n[ <Vector> ]")
    String OrthogonalVector_Syntax();

    @DefaultStringValue("[ <Vector> ]")
    String OrthogonalVector_SyntaxCAS();

    @DefaultStringValue("OsculatingCircle")
    String OsculatingCircle();

    @DefaultStringValue("[ <Point>, <Function> ]\n[ <Point>, <Curve> ]")
    String OsculatingCircle_Syntax();

    @DefaultStringValue("CorrelationCoefficient")
    String PMCC();

    @DefaultStringValue("[ <List of Points> ]\n[ <List of x-Coordinates>, <List of y-Coordinates> ]")
    String PMCC_Syntax();

    @DefaultStringValue("Pan")
    String Pan();

    @DefaultStringValue("[ <x>, <y> ]")
    String Pan_Syntax();

    @DefaultStringValue("Parabola")
    String Parabola();

    @DefaultStringValue("[ <Point>, <Line> ]")
    String Parabola_Syntax();

    @DefaultStringValue("Parameter")
    String Parameter();

    @DefaultStringValue("[ <Parabola> ]")
    String Parameter_Syntax();

    @DefaultStringValue("ParametricDerivative")
    String ParametricDerivative();

    @DefaultStringValue("[ <Curve> ]")
    String ParametricDerivative_Syntax();

    @DefaultStringValue("ParseToFunction")
    String ParseToFunction();

    @DefaultStringValue("[ <Function>, <String> ]")
    String ParseToFunction_Syntax();

    @DefaultStringValue("ParseToNumber")
    String ParseToNumber();

    @DefaultStringValue("[ <Number>, <String> ]")
    String ParseToNumber_Syntax();

    @DefaultStringValue("PartialFractions")
    String PartialFractions();

    @DefaultStringValue("[ <Function> ]")
    String PartialFractions_Syntax();

    @DefaultStringValue("[ <Function> ]\n[ <Function>, <Variable> ]")
    String PartialFractions_SyntaxCAS();

    @DefaultStringValue("Pascal")
    String Pascal();

    @DefaultStringValue("[ <Number of Successes>, <Probability of Success> ]\n[ <Number of Successes>, <Probability of Success>, <Boolean Cumulative> ]\n[ <Number of Successes>, <Probability of Success>, <Variable Value>, <Boolean Cumulative> ]")
    String Pascal_Syntax();

    @DefaultStringValue("[ <Number of Successes>, <Probability of Success>, <Variable Value>, <Boolean Cumulative> ]")
    String Pascal_SyntaxCAS();

    @DefaultStringValue("PathParameter")
    String PathParameter();

    @DefaultStringValue("[ <Point On Path> ]")
    String PathParameter_Syntax();

    @DefaultStringValue("Percentile")
    String Percentile();

    @DefaultStringValue("[ <List of Numbers>, <Percent> ]")
    String Percentile_Syntax();

    @DefaultStringValue("Perimeter")
    String Perimeter();

    @DefaultStringValue("[ <Polygon> ]\n[ <Conic> ]\n[ <Locus> ]")
    String Perimeter_Syntax();

    @DefaultStringValue("PlaySound")
    String PlaySound();

    @DefaultStringValue("[ <File> ]\n[ <Boolean Play> ]\n[ <Note Sequence>, <Instrument> ]\n[ <Note>, <Duration>, <Instrument> ]\n[ <Function>, <Min Value>, <Max Value> ]\n[ <Function>, <Min Value>, <Max Value>, <Sample Rate>, <Sample Depth> ]")
    String PlaySound_Syntax();

    @DefaultStringValue("Point")
    String Point();

    @DefaultStringValue("[ <Object> ]\n[ <Object>, <Parameter> ]\n[ <Point>, <Vector> ]\n[ <List> ]")
    String Point_Syntax();

    @DefaultStringValue("PointIn")
    String PointIn();

    @DefaultStringValue("[ <Region> ]")
    String PointIn_Syntax();

    @DefaultStringValue("PointList")
    String PointList();

    @DefaultStringValue("[ <List> ]")
    String PointList_Syntax();

    @DefaultStringValue("Poisson")
    String Poisson();

    @DefaultStringValue("[ <Mean> ]\n[ <Mean>, <Boolean Cumulative> ]\n[ <Mean>, <Variable Value>, <Boolean Cumulative> ]")
    String Poisson_Syntax();

    @DefaultStringValue("[ <Mean>, <Variable Value>, <Boolean Cumulative> ]")
    String Poisson_SyntaxCAS();

    @DefaultStringValue("Polar")
    String Polar();

    @DefaultStringValue("[ <Point>, <Conic> ]")
    String Polar_Syntax();

    @DefaultStringValue("PolyLine")
    String PolyLine();

    @DefaultStringValue("[ <List of Points> ]\n[ <Point>, ..., <Point> ]")
    String PolyLine_Syntax();

    @DefaultStringValue("Polygon")
    String Polygon();

    @DefaultStringValue("[ <List of Points> ]\n[ <Point>, ..., <Point> ]\n[ <Point>, <Point>, <Number of Vertices> ]")
    String Polygon_Syntax();

    @DefaultStringValue("Polynomial")
    String Polynomial();

    @DefaultStringValue("[ <Function> ]\n[ <List of Points> ]")
    String Polynomial_Syntax();

    @DefaultStringValue("PreviousPrime")
    String PreviousPrime();

    @DefaultStringValue("[ <Number> ]")
    String PreviousPrime_Syntax();

    @DefaultStringValue("PrimeFactors")
    String PrimeFactors();

    @DefaultStringValue("[ <Number> ]")
    String PrimeFactors_Syntax();

    @DefaultStringValue("[ <Number> ]")
    String PrimeFactors_SyntaxCAS();

    @DefaultStringValue("Product")
    String Product();

    @DefaultStringValue("[ <List of Numbers> ]\n[ <List of Numbers>, <Number of Elements> ]")
    String Product_Syntax();

    @DefaultStringValue("[ <List of expressions> ]\n[ <Expression>, <variable>, <start index>, <end index> ]")
    String Product_SyntaxCAS();

    @DefaultStringValue("Q1")
    String Q1();

    @DefaultStringValue("[ <List of Numbers> ]")
    String Q1_Syntax();

    @DefaultStringValue("Q3")
    String Q3();

    @DefaultStringValue("[ <List of Numbers> ]")
    String Q3_Syntax();

    @DefaultStringValue("RSquare")
    String RSquare();

    @DefaultStringValue("[ <List of Points>, <Function> ]")
    String RSquare_Syntax();

    @DefaultStringValue("Radius")
    String Radius();

    @DefaultStringValue("[ <Conic> ]")
    String Radius_Syntax();

    @DefaultStringValue("RandomBetween")
    String Random();

    @DefaultStringValue("[ <Minimum Integer>, <Maximum Integer> ]\n[ <Minimum Integer>, <Maximum Integer>, <Boolean Fixed> ]")
    String Random_Syntax();

    @DefaultStringValue("[ <Minimum Integer>, <Maximum Integer> ]")
    String Random_SyntaxCAS();

    @DefaultStringValue("RandomBinomial")
    String RandomBinomial();

    @DefaultStringValue("[ <Number of Trials>, <Probability> ]")
    String RandomBinomial_Syntax();

    @DefaultStringValue("[ <Number of Trials>, <Probability> ]")
    String RandomBinomial_SyntaxCAS();

    @DefaultStringValue("RandomElement")
    String RandomElement();

    @DefaultStringValue("[ <List> ]")
    String RandomElement_Syntax();

    @DefaultStringValue("[ <List> ]")
    String RandomElement_SyntaxCAS();

    @DefaultStringValue("RandomNormal")
    String RandomNormal();

    @DefaultStringValue("[ <Mean>, <Standard Deviation> ]")
    String RandomNormal_Syntax();

    @DefaultStringValue("[ <Mean>, <Standard Deviation> ]")
    String RandomNormal_SyntaxCAS();

    @DefaultStringValue("RandomPoisson")
    String RandomPoisson();

    @DefaultStringValue("[ <Mean> ]")
    String RandomPoisson_Syntax();

    @DefaultStringValue("[ <Mean> ]")
    String RandomPoisson_SyntaxCAS();

    @DefaultStringValue("RandomPolynomial")
    String RandomPolynomial();

    @DefaultStringValue("[ <Degree>, <Minimum for Coefficients>, <Maximum for Coefficients> ]")
    String RandomPolynomial_Syntax();

    @DefaultStringValue("[ <Degree>, <Minimum for Coefficients>, <Maximum for Coefficients> ]\n[ <Variable>, <Degree>, <Minimum for Coefficients>, <Maximum for Coefficients> ]")
    String RandomPolynomial_SyntaxCAS();

    @DefaultStringValue("RandomUniform")
    String RandomUniform();

    @DefaultStringValue("[ <Min>, <Max> ]")
    String RandomUniform_Syntax();

    @DefaultStringValue("Rationalize")
    String Rationalize();

    @DefaultStringValue("[ <Number> ]")
    String Rationalize_SyntaxCAS();

    @DefaultStringValue("Ray")
    String Ray();

    @DefaultStringValue("[ <Start Point>, <Point> ]\n[ <Start Point>, <Direction Vector> ]")
    String Ray_Syntax();

    @DefaultStringValue("RectangleSum")
    String RectangleSum();

    @DefaultStringValue("[ <Function>, <Start x-Value>, <End x-Value>, <Number of Rectangles>, <Position for rectangle start> ]")
    String RectangleSum_Syntax();

    @DefaultStringValue("ReducedRowEchelonForm")
    String ReducedRowEchelonForm();

    @DefaultStringValue("[ <Matrix> ]")
    String ReducedRowEchelonForm_Syntax();

    @DefaultStringValue("[ <Matrix> ]")
    String ReducedRowEchelonForm_SyntaxCAS();

    @DefaultStringValue("Relation")
    String Relation();

    @DefaultStringValue("[ <Object>, <Object> ]")
    String Relation_Syntax();

    @DefaultStringValue("RemoveUndefined")
    String RemoveUndefined();

    @DefaultStringValue("[ <List> ]")
    String RemoveUndefined_Syntax();

    @DefaultStringValue("Rename")
    String Rename();

    @DefaultStringValue("[ <Object>, <Name> ]")
    String Rename_Syntax();

    @DefaultStringValue("ResidualPlot")
    String ResidualPlot();

    @DefaultStringValue("[ <List of Points>, <Function> ]")
    String ResidualPlot_Syntax();

    @DefaultStringValue("Reverse")
    String Reverse();

    @DefaultStringValue("[ <List> ]")
    String Reverse_Syntax();

    @DefaultStringValue("RightSide")
    String RightSide();

    @DefaultStringValue("[ <Equation> ]")
    String RightSide_Syntax();

    @DefaultStringValue("[ <Equation> ]\n[ <List of Equations> ]")
    String RightSide_SyntaxCAS();

    @DefaultStringValue("RigidPolygon")
    String RigidPolygon();

    @DefaultStringValue("[ <Polygon> ]\n[ <Polygon>, <Offset x>, <Offset y> ]\n[ <Free Point>, ..., <Free Point> ]")
    String RigidPolygon_Syntax();

    @DefaultStringValue("Root")
    String Root();

    @DefaultStringValue("[ <Polynomial> ]\n[ <Function>, <Initial x-Value> ]\n[ <Function>, <Start x-Value>, <End x-Value> ]")
    String Root_Syntax();

    @DefaultStringValue("[ <Polynomial> ]")
    String Root_SyntaxCAS();

    @DefaultStringValue("RootList")
    String RootList();

    @DefaultStringValue("[ <List> ]")
    String RootList_Syntax();

    @DefaultStringValue("RootMeanSquare")
    String RootMeanSquare();

    @DefaultStringValue("[ <List of Numbers> ]")
    String RootMeanSquare_Syntax();

    @DefaultStringValue("Roots")
    String Roots();

    @DefaultStringValue("[ <Function>, <Start x-Value>, <End x-Value> ]")
    String Roots_Syntax();

    @DefaultStringValue("Rotate")
    String Rotate();

    @DefaultStringValue("[ <Object>, <Angle> ]\n[ <Object>, <Angle>, <Point> ]")
    String Rotate_Syntax();

    @DefaultStringValue("RotateText")
    String RotateText();

    @DefaultStringValue("[ <Text>, <Angle> ]")
    String RotateText_Syntax();

    @DefaultStringValue("Row")
    String Row();

    @DefaultStringValue("[ <Spreadsheet Cell> ]")
    String Row_Syntax();

    @DefaultStringValue("SD")
    String SD();

    @DefaultStringValue("[ <List of Numbers> ]")
    String SD_Syntax();

    @DefaultStringValue("[ <List of Numbers> ]")
    String SD_SyntaxCAS();

    @DefaultStringValue("SDX")
    String SDX();

    @DefaultStringValue("[ <List of Points> ]")
    String SDX_Syntax();

    @DefaultStringValue("SDY")
    String SDY();

    @DefaultStringValue("[ <List of Points> ]")
    String SDY_Syntax();

    @DefaultStringValue("Sxx")
    String SXX();

    @DefaultStringValue("[ <List of Numbers> ]\n[ <List of Points> ]")
    String SXX_Syntax();

    @DefaultStringValue("Sxy")
    String SXY();

    @DefaultStringValue("[ <List of Points> ]\n[ <List of Numbers>, <List of Numbers> ]")
    String SXY_Syntax();

    @DefaultStringValue("Syy")
    String SYY();

    @DefaultStringValue("[ <List of Points> ]")
    String SYY_Syntax();

    @DefaultStringValue("Sample")
    String Sample();

    @DefaultStringValue("[ <List>, <Size> ]\n[ <List>, <Size>, <With Replacement> ]")
    String Sample_Syntax();

    @DefaultStringValue("[ <List>, <Size> ]\n[ <List>, <Size>, <With Replacement> ]")
    String Sample_SyntaxCAS();

    @DefaultStringValue("SampleSD")
    String SampleSD();

    @DefaultStringValue("[ <List of Numbers> ]")
    String SampleSD_Syntax();

    @DefaultStringValue("[ <List of Numbers> ]")
    String SampleSD_SyntaxCAS();

    @DefaultStringValue("SampleSDX")
    String SampleSDX();

    @DefaultStringValue("[ <List of Points> ]")
    String SampleSDX_Syntax();

    @DefaultStringValue("SampleSDY")
    String SampleSDY();

    @DefaultStringValue("[ <List of Points> ]")
    String SampleSDY_Syntax();

    @DefaultStringValue("SampleVariance")
    String SampleVariance();

    @DefaultStringValue("[ <List of Numbers> ]")
    String SampleVariance_Syntax();

    @DefaultStringValue("[ <List of Numbers> ]")
    String SampleVariance_SyntaxCAS();

    @DefaultStringValue("ScientificText")
    String ScientificText();

    @DefaultStringValue("[ <Number> ]\n[ <Number>, <Precision> ]")
    String ScientificText_Syntax();

    @DefaultStringValue("MinorAxis")
    String SecondAxis();

    @DefaultStringValue("[ <Conic> ]")
    String SecondAxis_Syntax();

    @DefaultStringValue("SemiMinorAxisLength")
    String SecondAxisLength();

    @DefaultStringValue("[ <Conic> ]")
    String SecondAxisLength_Syntax();

    @DefaultStringValue("Sector")
    String Sector();

    @DefaultStringValue("[ <Conic>, <Point>, <Point> ]\n[ <Conic>, <Parameter Value>, <Parameter Value> ]")
    String Sector_Syntax();

    @DefaultStringValue("Segment")
    String Segment();

    @DefaultStringValue("[ <Point>, <Point> ]\n[ <Point>, <Length> ]")
    String Segment_Syntax();

    @DefaultStringValue("SelectObjects")
    String SelectObjects();

    @DefaultStringValue("[ ]\n[ <Object>, <Object>, ... ]")
    String SelectObjects_Syntax();

    @DefaultStringValue("SelectedElement")
    String SelectedElement();

    @DefaultStringValue("[ <List> ]")
    String SelectedElement_Syntax();

    @DefaultStringValue("SelectedIndex")
    String SelectedIndex();

    @DefaultStringValue("[ <List> ]")
    String SelectedIndex_Syntax();

    @DefaultStringValue("Semicircle")
    String Semicircle();

    @DefaultStringValue("[ <Point>, <Point> ]")
    String Semicircle_Syntax();

    @DefaultStringValue("Sequence")
    String Sequence();

    @DefaultStringValue("[ <End Value> ]\n[ <Expression>, <Variable>, <Start Value>, <End Value> ]\n[ <Expression>, <Variable>, <Start Value>, <End Value>, <Increment> ]")
    String Sequence_Syntax();

    @DefaultStringValue("[ <End Value> ]\n[ <Expression>, <Variable>, <Start Value>, <End Value> ]\n[ <Expression>, <Variable>, <Start Value>, <End Value>, <Increment> ]")
    String Sequence_SyntaxCAS();

    @DefaultStringValue("SetActiveView")
    String SetActiveView();

    @DefaultStringValue("[ <View Number 1|2> ]")
    String SetActiveView_Syntax();

    @DefaultStringValue("SetAxesRatio")
    String SetAxesRatio();

    @DefaultStringValue("[ <Number>, <Number> ]")
    String SetAxesRatio_Syntax();

    @DefaultStringValue("SetBackgroundColor")
    String SetBackgroundColor();

    @DefaultStringValue("[ <Object>, \"<Color>\" ]\n[ <Object>, <Red>, <Green>, <Blue> ]")
    String SetBackgroundColor_Syntax();

    @DefaultStringValue("SetCaption")
    String SetCaption();

    @DefaultStringValue("[ <Object>, <Text> ]")
    String SetCaption_Syntax();

    @DefaultStringValue("SetColor")
    String SetColor();

    @DefaultStringValue("[ <Object>, \"<Color>\" ]\n[ <Object>, <Red>, <Green>, <Blue> ]")
    String SetColor_Syntax();

    @DefaultStringValue("SetConditionToShowObject")
    String SetConditionToShowObject();

    @DefaultStringValue("[ <Object>, <Condition> ]")
    String SetConditionToShowObject_Syntax();

    @DefaultStringValue("SetCoords")
    String SetCoords();

    @DefaultStringValue("[ <Point>, <x>, <y> ]")
    String SetCoords_Syntax();

    @DefaultStringValue("SetDynamicColor")
    String SetDynamicColor();

    @DefaultStringValue("[ <Object>, <Red>, <Green>, <Blue> ]\n[ <Object>, <Red>, <Green>, <Blue>, <Opacity> ]")
    String SetDynamicColor_Syntax();

    @DefaultStringValue("SetFilling")
    String SetFilling();

    @DefaultStringValue("[ <Object>, <Number> ]")
    String SetFilling_Syntax();

    @DefaultStringValue("SetFixed")
    String SetFixed();

    @DefaultStringValue("[ <Object>, <true | false> ]")
    String SetFixed_Syntax();

    @DefaultStringValue("SetLabelMode")
    String SetLabelMode();

    @DefaultStringValue("[ <Object>, <Number> ]")
    String SetLabelMode_Syntax();

    @DefaultStringValue("SetLayer")
    String SetLayer();

    @DefaultStringValue("[ <Object>, <Layer> ]")
    String SetLayer_Syntax();

    @DefaultStringValue("SetLineStyle")
    String SetLineStyle();

    @DefaultStringValue("[ <Line>, <Number> ]")
    String SetLineStyle_Syntax();

    @DefaultStringValue("SetLineThickness")
    String SetLineThickness();

    @DefaultStringValue("[ <Line>, <Number> ]")
    String SetLineThickness_Syntax();

    @DefaultStringValue("SetPointSize")
    String SetPointSize();

    @DefaultStringValue("[ <Point>, <Number> ]")
    String SetPointSize_Syntax();

    @DefaultStringValue("SetPointStyle")
    String SetPointStyle();

    @DefaultStringValue("[ <Point>, <Number> ]")
    String SetPointStyle_Syntax();

    @DefaultStringValue("SetSeed")
    String SetSeed();

    @DefaultStringValue("[ <Integer> ]")
    String SetSeed_Syntax();

    @DefaultStringValue("SetTooltipMode")
    String SetTooltipMode();

    @DefaultStringValue("[ <Object>, <Number> ]")
    String SetTooltipMode_Syntax();

    @DefaultStringValue("SetTrace")
    String SetTrace();

    @DefaultStringValue("[ <Object>, <true | false> ]")
    String SetTrace_Syntax();

    @DefaultStringValue("SetValue")
    String SetValue();

    @DefaultStringValue("[ <Boolean>, <0|1> ]\n[ <Object>, <Object> ]\n[ <List>, <Number>, <Object> ]")
    String SetValue_Syntax();

    @DefaultStringValue("SetVisibleInView")
    String SetVisibleInView();

    @DefaultStringValue("[ <Object>, <View Number 1|2>, <Boolean> ]")
    String SetVisibleInView_Syntax();

    @DefaultStringValue("Shear")
    String Shear();

    @DefaultStringValue("[ <Object>, <Line>, <Ratio> ]")
    String Shear_Syntax();

    @DefaultStringValue("ShortestDistance")
    String ShortestDistance();

    @DefaultStringValue("[ <List of Segments>, <Start Point>, <End Point>, <Boolean Weighted> ]")
    String ShortestDistance_Syntax();

    @DefaultStringValue("ShowAxes")
    String ShowAxes();

    @DefaultStringValue("[]\n[ <Boolean> ]\n[ <View>, <Boolean> ]")
    String ShowAxes_Syntax();

    @DefaultStringValue("ShowGrid")
    String ShowGrid();

    @DefaultStringValue("[]\n[ <Boolean> ]\n[ <View>, <Boolean> ]")
    String ShowGrid_Syntax();

    @DefaultStringValue("ShowLabel")
    String ShowLabel();

    @DefaultStringValue("[ <Object>, <Boolean> ]")
    String ShowLabel_Syntax();

    @DefaultStringValue("ShowLayer")
    String ShowLayer();

    @DefaultStringValue("[ <Number> ]")
    String ShowLayer_Syntax();

    @DefaultStringValue("Shuffle")
    String Shuffle();

    @DefaultStringValue("[ <List> ]")
    String Shuffle_Syntax();

    @DefaultStringValue("[ <List> ]")
    String Shuffle_SyntaxCAS();

    @DefaultStringValue("SigmaXX")
    String SigmaXX();

    @DefaultStringValue("[ <List of Points> ]\n[ <List of Numbers> ]")
    String SigmaXX_Syntax();

    @DefaultStringValue("SigmaXY")
    String SigmaXY();

    @DefaultStringValue("[ <List of Points> ]\n[ <List of x-Coordinates>, <List of y-Coordinates> ]")
    String SigmaXY_Syntax();

    @DefaultStringValue("SigmaYY")
    String SigmaYY();

    @DefaultStringValue("[ <List of Points> ]")
    String SigmaYY_Syntax();

    @DefaultStringValue("Simplify")
    String Simplify();

    @DefaultStringValue("[ <Function> ]\n[ <Text> ]")
    String Simplify_Syntax();

    @DefaultStringValue("[ <Function> ]")
    String Simplify_SyntaxCAS();

    @DefaultStringValue("Slider")
    String Slider();

    @DefaultStringValue("[ <Min>, <Max>, <Increment>, <Speed>, <Width>, <Is Angle>, <Horizontal>, <Animating>, <Random> ]")
    String Slider_Syntax();

    @DefaultStringValue("Slope")
    String Slope();

    @DefaultStringValue("[ <Line> ]")
    String Slope_Syntax();

    @DefaultStringValue("SlopeField")
    String SlopeField();

    @DefaultStringValue("[ <f(x, y)> ]\n[ <f(x, y)>, <Number n> ]\n[ <f(x, y)>, <Number n>, <Length Multiplier a> ]\n[ <f(x, y)>, <Number n>, <Length Multiplier a>, <Min x>, <Min y>, <Max x>, <Max y> ]")
    String SlopeField_Syntax();

    @DefaultStringValue("SlowPlot")
    String SlowPlot();

    @DefaultStringValue("[ <Function> ]")
    String SlowPlot_Syntax();

    @DefaultStringValue("Solutions")
    String Solutions();

    @DefaultStringValue("[ <Equation> ]\n[ <Equation>, <Variable> ]\n[ <List of Equations>, <List of Variables> ]")
    String Solutions_SyntaxCAS();

    @DefaultStringValue("Solve")
    String Solve();

    @DefaultStringValue("[ <Equation in x> ]\n[ <Equation>, <Variable> ]\n[ <Equation>, <Variable = starting value> ]\n[ <List of Equations>, <List of Variables> ]")
    String Solve_SyntaxCAS();

    @DefaultStringValue("SolveODE")
    String SolveODE();

    @DefaultStringValue("[ <f'(x, y)>, <Start x>, <Start y>, <End x>, <Step> ]\n[ <y'>, <x'>, <Start x>, <Start y>, <End t>, <Step> ]\n[ <b(x)>, <c(x)>, <f(x)>, <Start x>, <Start y>, <Start y'>, <End x>, <Step> ]")
    String SolveODE_Syntax();

    @DefaultStringValue("[ <Equation> ]\n[ <Equation>, <Dependent Variable>, <Independent Variable> ]")
    String SolveODE_SyntaxCAS();

    @DefaultStringValue("Sort")
    String Sort();

    @DefaultStringValue("[ <List> ]\n[ <Values>, <Keys> ]")
    String Sort_Syntax();

    @DefaultStringValue("Spearman")
    String Spearman();

    @DefaultStringValue("[ <List of Points> ]\n[ <List of Numbers>, <List of Numbers> ]")
    String Spearman_Syntax();

    @DefaultStringValue("StartAnimation")
    String StartAnimation();

    @DefaultStringValue("[ ]\n[ <Boolean> ]\n[ <Slider or Point>, <Slider or Point>, ... ]\n[ <Slider or Point>, <Slider or Point>, ..., <Boolean> ]")
    String StartAnimation_Syntax();

    @DefaultStringValue("StemPlot")
    String StemPlot();

    @DefaultStringValue("[ <List> ]\n[ <List>, <Adjustment -1|0|1> ]")
    String StemPlot_Syntax();

    @DefaultStringValue("Stretch")
    String Stretch();

    @DefaultStringValue("[ <Object>, <Vector> ]\n[ <Object>, <Line>, <Ratio> ]")
    String Stretch_Syntax();

    @DefaultStringValue("Substitute")
    String Substitute();

    @DefaultStringValue("[ <Expression>, <Substitution List> ]\n[ <Expression>, <from>, <to> ]")
    String Substitute_SyntaxCAS();

    @DefaultStringValue("Sum")
    String Sum();

    @DefaultStringValue("[ <List> ]\n[ <List>, <Number of Elements> ]")
    String Sum_Syntax();

    @DefaultStringValue("[ <List> ]\n[ <expression>, <variable>, <start value>, <end value> ]")
    String Sum_SyntaxCAS();

    @DefaultStringValue("SumSquaredErrors")
    String SumSquaredErrors();

    @DefaultStringValue("[ <List of Points>, <Function> ]")
    String SumSquaredErrors_Syntax();

    @DefaultStringValue("SurdText")
    String SurdText();

    @DefaultStringValue("[ <Point> ]\n[ <Number> ]\n[ <Number>, <List> ]")
    String SurdText_Syntax();

    @DefaultStringValue("TDistribution")
    String TDistribution();

    @DefaultStringValue("[ <Degrees of Freedom>, x ]\n[ <Degrees of Freedom>, <Variable Value> ]\n[ <Degrees of Freedom>, x, <Boolean Cumulative> ]")
    String TDistribution_Syntax();

    @DefaultStringValue("[ <Degrees of Freedom>, <Variable Value> ]")
    String TDistribution_SyntaxCAS();

    @DefaultStringValue("TMean2Estimate")
    String TMean2Estimate();

    @DefaultStringValue("[ <List of Sample Data 1>, <List of Sample Data 2>, <Level>, <Boolean Pooled> ]\n[ <Sample Mean 1>, <Sample Standard Deviation 1>, <Sample Size 1>, <Sample Mean 2>, <Sample Standard Deviation 2>, <Sample Size 2>, <Level>, <Boolean Pooled> ]")
    String TMean2Estimate_Syntax();

    @DefaultStringValue("TMeanEstimate")
    String TMeanEstimate();

    @DefaultStringValue("[ <List of Sample Data>, <Level> ]\n[ <Sample Mean>, <Sample Standard Deviation>, <Sample Size>, <Level> ]")
    String TMeanEstimate_Syntax();

    @DefaultStringValue("TTest")
    String TTest();

    @DefaultStringValue("[ <List of Sample Data>, <Hypothesized Mean>, <Tail> ]\n[ <Sample Mean>, <Sample Standard Deviation>, <Sample Size>, <Hypothesized Mean>, <Tail> ]")
    String TTest_Syntax();

    @DefaultStringValue("TTest2")
    String TTest2();

    @DefaultStringValue("[ <List of Sample Data 1>, <List of Sample Data 2>, <Tail>, <Boolean Pooled> ]\n[ <Sample Mean 1>, <Sample Standard Deviation 1>, <Sample Size 1>, <Sample Mean 2>, <Sample Standard Deviation 2>, <Sample Size 2>, <Tail>, <Boolean Pooled> ]")
    String TTest2_Syntax();

    @DefaultStringValue("TTestPaired")
    String TTestPaired();

    @DefaultStringValue("[ <List of Sample Data 1>, <List of Sample Data 2>, <Tail> ]")
    String TTestPaired_Syntax();

    @DefaultStringValue("TableText")
    String TableText();

    @DefaultStringValue("[ <List>, <List>, ... ]\n[ <List>, <List>, ..., <Alignment of Text> ]")
    String TableText_Syntax();

    @DefaultStringValue("Take")
    String Take();

    @DefaultStringValue("[ <List>, <Start Position>, <End Position> ]\n[ <List>, <Start Position> ]\n[ <Text>, <Start Position>, <End Position> ]\n[ <Text>, <Start Position> ]")
    String Take_Syntax();

    @DefaultStringValue("[ <List>, <Start Position>, <End Position> ]")
    String Take_SyntaxCAS();

    @DefaultStringValue("Tangent")
    String Tangent();

    @DefaultStringValue("[ <Point>, <Conic> ]\n[ <Point>, <Function> ]\n[ <Point on Curve>, <Curve> ]\n[ <x-Value>, <Function> ]\n[ <Line>, <Conic> ]\n[ <Circle>, <Circle> ]")
    String Tangent_Syntax();

    @DefaultStringValue("TaylorPolynomial")
    String TaylorSeries();

    @DefaultStringValue("[ <Function>, <x-Value>, <Order Number> ]")
    String TaylorSeries_Syntax();

    @DefaultStringValue("[ <Expression>, <x-Value>, <Order Number> ]\n[ <Expression>, <Variable>, <Variable-Value>, <Order Number> ]")
    String TaylorSeries_SyntaxCAS();

    @DefaultStringValue("Text")
    String Text();

    @DefaultStringValue("[ <Object> ]\n[ <Object>, <Boolean for Substitution of Variables> ]\n[ <Object>, <Point> ]\n[ <Object>, <Point>, <Boolean for Substitution of Variables> ]\n[ <Object>, <Point>, <Boolean for Substitution of Variables>, <Boolean for LaTeX formula> ]")
    String Text_Syntax();

    @DefaultStringValue("TextToUnicode")
    String TextToUnicode();

    @DefaultStringValue("[ \"<Text>\" ]")
    String TextToUnicode_Syntax();

    @DefaultStringValue("InputBox")
    String Textfield();

    @DefaultStringValue("[ ]\n[ <Linked Object> ]")
    String Textfield_Syntax();

    @DefaultStringValue("TiedRank")
    String TiedRank();

    @DefaultStringValue("[ <List> ]")
    String TiedRank_Syntax();

    @DefaultStringValue("ToBase")
    String ToBase();

    @DefaultStringValue("[ <Number>, <Base> ]")
    String ToBase_Syntax();

    @DefaultStringValue("ToComplex")
    String ToComplex();

    @DefaultStringValue("[ <Vector> ]")
    String ToComplex_Syntax();

    @DefaultStringValue("ToExponential")
    String ToExponential();

    @DefaultStringValue("[ <Complex Number> ]")
    String ToExponential_SyntaxCAS();

    @DefaultStringValue("ToPoint")
    String ToPoint();

    @DefaultStringValue("[ <Complex Number> ]")
    String ToPoint_SyntaxCAS();

    @DefaultStringValue("ToPolar")
    String ToPolar();

    @DefaultStringValue("[ <Complex Number> ]\n[ <Vector> ]")
    String ToPolar_Syntax();

    @DefaultStringValue("ToolImage")
    String ToolImage();

    @DefaultStringValue("[ <Number> ]")
    String ToolImage_Syntax();

    @DefaultStringValue("Translate")
    String Translate();

    @DefaultStringValue("[ <Object>, <Vector> ]\n[ <Vector>, <Start Point> ]")
    String Translate_Syntax();

    @DefaultStringValue("Transpose")
    String Transpose();

    @DefaultStringValue("[ <Matrix> ]")
    String Transpose_Syntax();

    @DefaultStringValue("[ <Matrix> ]")
    String Transpose_SyntaxCAS();

    @DefaultStringValue("TrapezoidalSum")
    String TrapezoidalSum();

    @DefaultStringValue("[ <Function>, <Start x-Value>, <End x-Value>, <Number of Trapezoids> ]")
    String TrapezoidalSum_Syntax();

    @DefaultStringValue("TravelingSalesman")
    String TravelingSalesman();

    @DefaultStringValue("[ <List of Points> ]")
    String TravelingSalesman_Syntax();

    @DefaultStringValue("TriangleCenter")
    String TriangleCenter();

    @DefaultStringValue("[ <Point>, <Point>, <Point>, <Number> ]")
    String TriangleCenter_Syntax();

    @DefaultStringValue("TriangleCurve")
    String TriangleCurve();

    @DefaultStringValue("[ <Point>, <Point>, <Point>, <Equation> ]")
    String TriangleCurve_Syntax();

    @DefaultStringValue("Triangular")
    String Triangular();

    @DefaultStringValue("[ <Lower Bound>, <Upper Bound>, <Mode>, x ]\n[ <Lower Bound>, <Upper Bound>, <Mode>, <Variable Value> ]\n[ <Lower Bound>, <Upper Bound>, <Mode>, x, <Boolean Cumulative> ]")
    String Triangular_Syntax();

    @DefaultStringValue("TrigCombine")
    String TrigCombine();

    @DefaultStringValue("[ <Expression> ]\n[ <Expression>, <Target Function> ]")
    String TrigCombine_Syntax();

    @DefaultStringValue("TrigExpand")
    String TrigExpand();

    @DefaultStringValue("[ <Expression> ]\n[ <Expression>, <Target Function> ]")
    String TrigExpand_Syntax();

    @DefaultStringValue("[ <Expression> ]\n[ <Expression>, <Target Function> ]\n[ <Expression>, <Target Function>, <Target Variable> ]\n[ <Expression>, <Target Function>, <Target Variable>, <Target Variable> ]")
    String TrigExpand_SyntaxCAS();

    @DefaultStringValue("TrigSimplify")
    String TrigSimplify();

    @DefaultStringValue("[ <Expression> ]")
    String TrigSimplify_Syntax();

    @DefaultStringValue("Trilinear")
    String Trilinear();

    @DefaultStringValue("[ <Point>, <Point>, <Point>, <Number>, <Number>, <Number> ]")
    String Trilinear_Syntax();

    @DefaultStringValue("InflectionPoint")
    String TurningPoint();

    @DefaultStringValue("[ <Polynomial> ]")
    String TurningPoint_Syntax();

    @DefaultStringValue("UnicodeToLetter")
    String UnicodeToLetter();

    @DefaultStringValue("[ <Integer> ]")
    String UnicodeToLetter_Syntax();

    @DefaultStringValue("UnicodeToText")
    String UnicodeToText();

    @DefaultStringValue("[ <List of Integers> ]")
    String UnicodeToText_Syntax();

    @DefaultStringValue("Uniform")
    String Uniform();

    @DefaultStringValue("[ <Lower Bound>, <Upper Bound>, x ]\n[ <Lower Bound>, <Upper Bound>, <Variable Value> ]\n[ <Lower Bound>, <Upper Bound>, x, <Boolean Cumulative> ]")
    String Uniform_Syntax();

    @DefaultStringValue("Union")
    String Union();

    @DefaultStringValue("[ <List>, <List> ]\n[ <Polygon>, <Polygon> ]")
    String Union_Syntax();

    @DefaultStringValue("Unique")
    String Unique();

    @DefaultStringValue("[ <List> ]")
    String Unique_Syntax();

    @DefaultStringValue("[ <List> ]")
    String Unique_SyntaxCAS();

    @DefaultStringValue("UnitPerpendicularVector")
    String UnitOrthogonalVector();

    @DefaultStringValue("[ <Line> ]\n[ <Segment> ]\n[ <Vector> ]")
    String UnitOrthogonalVector_Syntax();

    @DefaultStringValue("[ <Vector> ]")
    String UnitOrthogonalVector_SyntaxCAS();

    @DefaultStringValue("UnitVector")
    String UnitVector();

    @DefaultStringValue("[ <Vector> ]\n[ <Line> ]\n[ <Segment> ]")
    String UnitVector_Syntax();

    @DefaultStringValue("[ <Vector> ]")
    String UnitVector_SyntaxCAS();

    @DefaultStringValue("UpdateConstruction")
    String UpdateConstruction();

    @DefaultStringValue("[ ]")
    String UpdateConstruction_Syntax();

    @DefaultStringValue("UpperSum")
    String UpperSum();

    @DefaultStringValue("[ <Function>, <Start x-Value>, <End x-Value>, <Number of Rectangles> ]")
    String UpperSum_Syntax();

    @DefaultStringValue("Variance")
    String Variance();

    @DefaultStringValue("[ <List of Numbers> ]")
    String Variance_Syntax();

    @DefaultStringValue("[ <List of Numbers> ]")
    String Variance_SyntaxCAS();

    @DefaultStringValue("Vector")
    String Vector();

    @DefaultStringValue("[ <Point> ]\n[ <Start Point>, <End Point> ]")
    String Vector_Syntax();

    @DefaultStringValue("Vertex")
    String Vertex();

    @DefaultStringValue("[ <Conic> ]\n[ <Inequality> ]\n[ <Polygon> ]\n[ <Polygon>, <Index> ]")
    String Vertex_Syntax();

    @DefaultStringValue("VerticalText")
    String VerticalText();

    @DefaultStringValue("[ <Text> ]")
    String VerticalText_Syntax();

    @DefaultStringValue("Voronoi")
    String Voronoi();

    @DefaultStringValue("[ <List of Points> ]")
    String Voronoi_Syntax();

    @DefaultStringValue("Weibull")
    String Weibull();

    @DefaultStringValue("[ <Shape>, <Scale>, x ]\n[ <Shape>, <Scale>, <Variable Value> ]\n[ <Shape>, <Scale>, x, <Boolean Cumulative> ]")
    String Weibull_Syntax();

    @DefaultStringValue("[ <Shape>, <Scale>, <Variable Value> ]")
    String Weibull_SyntaxCAS();

    @DefaultStringValue("Zip")
    String Zip();

    @DefaultStringValue("[ <Expression>, <Var1>, <List1>, <Var2>, <List2>, ... ]")
    String Zip_Syntax();

    @DefaultStringValue("Zipf")
    String Zipf();

    @DefaultStringValue("[ <Number of Elements>, <Exponent> ]\n[ <Number of Elements>, <Exponent>, <Boolean Cumulative> ]\n[ <Number of Elements>, <Exponent>, <Variable Value>, <Boolean Cumulative> ]")
    String Zipf_Syntax();

    @DefaultStringValue("[ <Number of Elements>, <Exponent>, <Variable Value>, <Boolean Cumulative> ]")
    String Zipf_SyntaxCAS();

    @DefaultStringValue("ZoomIn")
    String ZoomIn();

    @DefaultStringValue("[ <Scale Factor> ]\n[ <Scale Factor>, <Center Point> ]\n[ <Min x>, <Min y>, <Max x>, <Max y> ]")
    String ZoomIn_Syntax();

    @DefaultStringValue("ZoomOut")
    String ZoomOut();

    @DefaultStringValue("[ <Scale Factor> ]\n[ <Scale Factor>, <Center Point> ]")
    String ZoomOut_Syntax();

    @DefaultStringValue("nPr")
    String nPr();

    @DefaultStringValue("[ <Number>, <Number> ]")
    String nPr_Syntax();


}
