#!/bin/sh
# Compiles GeoGebraWeb from command line by using ecj.
# No cleanup is done before compilation by default.

set_bootclasspath () {
 test -r "$BOOTCLASSPATH" || {
  BOOTCLASSPATH="$JAVA_HOME"/jre/lib/rt.jar
  test -r "$BOOTCLASSPATH" || BOOTCLASSPATH="not set"
  }
 }

# 1. Start and loading configuration
test -r autobuild.conf || {
 echo "$0: Cannot find autobuild.conf (make sure you edit autobuild.conf.dist first)"
 echo "Continuing with defaults anyway..."
 }
test -r autobuild.conf && . ./autobuild.conf

# 2. Setting defaults
if [ "$SVNDIR" = "" ]; then
 ORIGDIR=`dirname $0`
 WORKDIR=`pwd`
else
 WORKDIR=`cd $SVNDIR/geogebra/web; pwd`
 fi

DESKTOPDIR=`cd $WORKDIR/../desktop; pwd`

if [ "$JAVA_HOME" = "" ]; then
 JAVA_HOME="not set"
 fi
 
CLEAN=0
GRAMMAR=1
VERBOSE=0
CLASSES=1

BOOTCLASSPATH=`cd $WORKDIR/..; pwd`/java150-rt.jar
set_bootclasspath

# 3. Reading command line arguments
while [ $# -gt 0 ]; do
 case $1 in
  -h | -help | --help)
   echo "This script builds GeoGebraWeb from command line."
   echo
   echo "Usage: $0 [options]"
   echo " Where options can be (defaults in parentheses):"
   echo "  -h, -help, --help         This help"
   echo "  -c, --clean               Do a cleanup first by removing *.class files"
   echo "  -s [dir]                  Use dir for source directory ($WORKDIR)"
   echo "  -b [file]                 Set bootclasspath for ecj ($BOOTCLASSPATH)"
   echo "  -j [dir]                  Java home directory ($JAVA_HOME)"
   echo "  -g [dir]                  GWT home directory ($GWTDIR)"
   echo "  -ng, --no-grammar         Do not compile grammar with javacc"
   echo "  -nc, --no-classes         Do not (re)compile classes"
   echo "  -v, --verbose             Be verbose whenever possible"
   exit 0
   ;;

  -c | --clean)
   CLEAN=1
   ;;

  -s)
   shift
   WORKDIR="$1"
   ;;

  -g)
   shift
   GWTDIR="$1"
   ;;

  -b)
   shift
   BOOTCLASSPATH="$1"
   set_bootclasspath

   ;;

  -j)
   shift
   JAVA_HOME="$1"
   test -x $JAVA_HOME/bin/java || {
    echo "Cannot find $JAVA_HOME/bin/java, is Java installed?"
    exit 4
    }
   if [ "$BOOTCLASSPATH" = "not set" ]; then
    set_bootclasspath
    fi
   ;;

  -ng | --no-grammar)
   GRAMMAR=0
   ;;
   
  -nc | --no-classes)
   CLASSES=0
   ;;
   
  -v | --verbose)
   VERBOSE=1
   ;;

  *)
   echo "Unknown parameter: $1. Use \"$0 -h\" for help."
   exit 1
   ;;

  esac
 shift
 done

# 4. Initial settings and checks
if [ "$JAVA_HOME" = "not set" ]; then
 echo "Java home is not set. Consider using -j followed by your selection of an item from this list:"
 export JVM_DIR=/usr/lib/jvm
 ls -1 $JVM_DIR | awk '{print "'$JVM_DIR'/" $0}'
 exit 2
 fi

if [ "$BOOTCLASSPATH" = "not set" ]; then
 echo "Bootclasspath is not set. Consult a Java guru to find it on your machine."
 exit 3
 fi

if [ "$GWTDIR" = "" ]; then
 echo "GWTDIR is not set"
 exit 4
 fi

cd $WORKDIR

umask 0002 # trying to ensure g+w rights for all created files automatically

# 5. Setting global variables
export JAVA_HOME
export JDK_HOME=$JAVA_HOME
export JAVACMD=$JAVA_HOME/bin/java
export ANT_OPTS="-Xmx1024m"
export GWTDIR

# 6. Building

if [ "$VERBOSE" = 1 ]; then
 ANT="ant -v"
else
 ANT="ant"
 fi

# 6/1. Cleanup on demand
if [ $CLEAN = 1 ]; then
 cd $DESKTOPDIR
 $ANT delete-classes
 cd $WORKDIR
 fi

# 6/2. Compiling grammar
if [ $GRAMMAR = 1 ]; then
 cd $DESKTOPDIR
 $ANT compile-grammar-cl
 cd $WORKDIR
 fi

# 6/2. Setting classpath for ecj (required for Java 5)

CP=""
for i in $GWTDIR/{gwt-dev*,gwt-user}.jar war/WEB-INF/lib/*.jar; do
 CP=$CP:$i
 done
CP=$CP:war/WEB-INF/classes

# 6/3. Creating *.class files
if [ $CLASSES = 1 ]; then
 echo "$0: (Re)creating class files"
 
 $JAVACMD $ANT_OPTS -jar $DESKTOPDIR/lib/build/ecj-3.6.2.jar -1.5 -source 1.5 -target 1.5 -classpath $CP -bootclasspath $BOOTCLASSPATH\
  -time -proceedOnError -g . > .ecjlog 2>&1
 tail -1 .ecjlog
 echo ", see .ecjlog for more details" # .ecjlog has no \n before EOF

 fi

# 7. Invoking ant build
$ANT
