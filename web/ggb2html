#!/bin/sh
# Yes! This script will create a GeoGebraWeb HTML file from your .ggb file!
# @author Zoltan Kovacs <zoltan@geogebra.org>

# 0. Functions and setting defaults
verbose () {
 if [ $VERBOSE = 1 ]; then
  echo $*
  fi
 }

VERBOSE=0
SHOWRESETICON=0
POSSIBLESOURCEDIRS="web"
POSSIBLEOUTDIRS="war ."
 
# 1. Reading command line arguments
while [ $# -gt 0 ]; do
 case $1 in
  -h | -help | --help)
   echo "This tool converts a GGB file to HTML for GeoGebraWeb."
   echo
   echo "Usage: $0 [options]"
   echo " Where options can be:"
   echo "  -h, -help, --help   This help"
   echo "  -i [file]           Defines input file"
   echo "  -od [directory]     Defines output directory"
   echo "  -o [file]           Defines output file (relative to output directory)"
   echo "  -sd [directory]     Source directory for GeoGebraWeb (relative to output directory)"
   echo "  -t [title]          Add title"
   echo "  -sri                Show reset icon"
   echo "  -v, --verbose       Be verbose"
   echo
   echo "Example: $0 -i myfile.ggb -o web/myfile.html"
   exit 0
   ;;

  -i)
   shift
   IN="$1"
   ;;

  -o)
   shift
   OUT="$1"
   ;;

  -od)
   shift
   OUTDIR="$1"
   ;;

  -sd)
   shift
   SOURCEDIR="$1"
   ;;
   
  -t)
   shift
   TITLE="$1"
   ;;
  
  -sri)
   shift
   SHOWRESETICON=1
   ;;

  -v | --verbose)
   VERBOSE=1
   ;;
   
  *)
   echo "Unknown parameter: $1. Use \"$0 -h\" for help."
   exit 1
   ;;

  esac
 shift
 done

# 2. Testing and other settings
if [ "$IN" = "" ]; then
 echo "Input file missing, please run $0 -h for help"
 exit 21
 fi

test -r "$IN" || {
 echo "The input file $IN is missing"
 exit 22
 }

file "$IN" | grep --silent "Zip archive data" || {
 echo "The input file $IN does not seem to be a .ggb file"
 exit 23
 }

if [ "$TITLE" = "" ]; then
 TITLE=`basename $IN .ggb`
 verbose "Title will be set to $TITLE"
 fi

if [ "$OUTDIR" = "" ]; then
 OUTDIROK=0
 for i in $POSSIBLEOUTDIRS; do
  if [ $OUTDIROK = 0 ]; then
   test -d $i && {
    OUTDIROK=1
    OUTDIR=$i
    
    verbose "Output will be written into directory $OUTDIR"
    }
   fi
  done
 fi

if [ "$OUT" = "" ]; then
 OUT=`basename $IN .ggb`.html
 verbose "Output file name will be $OUT"
 fi

if [ "$SOURCEDIR" = "" ]; then
 SOURCEDIROK=0
 for i in $POSSIBLESOURCEDIRS; do
  if [ $SOURCEDIROK = 0 ]; then
   test -r $OUTDIR/$i/web.nocache.js && {
    SOURCEOK=1
    SOURCEDIR=$i
    verbose "web.nocache.js will be used from directory ($OUTDIR/)$i"
    }
   fi
  done
 if [ $SOURCEOK = 0 ]; then
  echo "No web.nocache.js found in the following places: ($OUTDIR/)$POSSIBLESOURCEDIRS"
  echo "Please set it manually"
  exit 24
  fi
 fi

test -r $OUTDIR/$SOURCEDIR/web.nocache.js || {
 echo "No web.nocache.js file in ($OUTDIR/)$SOURCEDIR, please double check"
 exit 25
 }

# 3. Creating first part of the output:
OUTFILE=$OUTDIR/$OUT
echo "<!DOCTYPE html><html><head><meta charset=\"utf-8\" />
<title>$TITLE</title>
<script type=\"text/javascript\" language=\"javascript\" src=\"$SOURCEDIR/web.nocache.js\"></script></head>
<article class=\"geogebraweb\"" > $OUTFILE

# Parameters:
if [ $SHOWRESETICON = 1 ]; then
 echo "data-param-showResetIcon=\"true\"" >> $OUTFILE
 fi

# Encoding .ggb file:
echo -n "data-param-ggbbase64=\"" >> $OUTFILE
base64 -w 0 $IN >> $OUTFILE

# Closing:
echo -n "\"></article></body></html>" >> $OUTFILE

# 4. Finish!
verbose "Output file $OUTFILE seems successfully generated"
