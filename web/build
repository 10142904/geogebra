#!/bin/sh
# Compiles GeoGebraWeb via command line.
# @author Zoltan Kovacs <zoltan@geogebra.org>
# Make sure that you run this script from its directory.
# 1. Setting up environment variables
#Functions first
#Cleanup: Removing links not to break eclipse
cleanup() {
    echo "Cleaning up..."
    ${WEBDIR_LINK_TARGET?" is not set: nothing to clean up"}
        cd $WEBDIR_LINK_TARGET
        for i in *; do
                if test -L $i; then
                    rm -rf $i;
                    echo "cleanup: removing link: $i"
                fi
            done
}

speccomp() {
echo "$0: Preparing specifing compilation settings for $1"
cd $WEBDIR
PROJECT=$1
PLC=`echo $PROJECT | awk '{print tolower($1)}'`
cd ../$PLC/src/geogebra
cat $PROJECT.gwt.xml-var | sed s/"\${useragents}"/"$USERAGENTS"/g \
 | sed s/"<!-- \$linker -->"/"$XS"/g > $PROJECT.gwt.xml
}

trap "cleanup" EXIT 2 9 15

GWTDIR=../gwt-2.4.0 # Override it if needed by using autobuild.conf
test -r autobuild.conf && . ./autobuild.conf && echo "$0: Using autobuild.conf for overriding defaults"

# 2. Setting defaults
if [ "$SVNDIR" = "" ]; then
 ORIGDIR=`dirname $0`
 WORKDIR=`cd $ORIGDIR; pwd`
else
 WORKDIR=`cd $SVNDIR/geogebra/web; pwd`
 fi
echo "using $GWTDIR for get GWT jars\n"
export GWTDIR
cd $WORKDIR
WEBDIR=`pwd`

VERBOSE=0
USERAGENTS=gecko1_8,safari,ie9,opera
INSTALLDIR=""
XS=""
STYLE=OBFUSCATED

# 3. Reading command line arguments
while [ $# -gt 0 ]; do
 case $1 in
  -h | -help | --help)
   echo "This script builds and installs GeoGebraWeb."
   echo
   echo "Usage: $0 [options]"
   echo " Where options can be (defaults in parentheses):"
   echo "  -h, -help, --help   This help"
   echo "  -u [useragents]     Comma separated list of user agents to compile ($USERAGENTS)"
   echo "  -i [directory]      If set, installs GeoGebraWeb into the given directory"
   echo "  -x                  XS compilation"
   echo "  -s [style]          Compilation style: OBFUSCATED, PRETTY or DETAILED ($STYLE)"
   echo "  -g [directory]      Use GWT SDK from the given directory ($GWTDIR)"
   echo "  -v, --verbose       Be verbose whenever possible"
   exit 0
   ;;

  -u)
   shift
   USERAGENTS="$1"
   echo "Compiling for $1"
   ;;

  -i)
   shift
   INSTALLDIR="$1"
   ;;

  -x)
   XS="<add-linker name=\\\"xs\\\"\/>"
   echo "Compiling with XS (cross site)"
   ;;

  -s)
   shift
   STYLE="$1"
   echo "Compiling with $STYLE"
   ;;
   
  -g)
   shift
   GWTDIR="$1"
   test -d $GWTDIR || {
    echo "No GWT SDK directory exists at $GWTDIR"
    exit 1
    }
   ;;

  -v | --verbose)
   VERBOSE=1
   ;;

  *)
   echo "Unknown parameter: $1. Use \"$0 -h\" for help."
   exit 1
   ;;

  esac
 shift
 done

if [ "$VERBOSE" = 1 ]; then
 ANT="ant -v"
else
 ANT="ant"
 fi

MYARGS="<arg line=\\\"-style $STYLE\\\"\/>"

# 2. (Re)creating parser
echo "$0: (Re)creating parser"
cd ../desktop
$ANT compile-grammar-cl || exit 2

# 3. Creating symlinks to common
echo "$0: Creating symlinks to common"
cd ../common
COMMONDIR=`pwd`
COMMONDIR_LINK_SOURCE=$COMMONDIR/src/geogebra
WEBDIR_LINK_TARGET=$WEBDIR/src/geogebra
cd $COMMONDIR_LINK_SOURCE
for i in *; do
 cd $WEBDIR_LINK_TARGET
 test -L $i || ln -s $COMMONDIR_LINK_SOURCE/$i
 done

# 4. Preparing specific compilation

speccomp Common
speccomp Web

# 5. Compiling web
echo "$0: Compiling web"
cd ../..
cat build.xml | sed s/"<!-- \$myargs -->"/"$MYARGS"/g > mybuild.xml
$ANT -f mybuild.xml clean build || exit 4

# 6. Done!
if [ "$INSTALLDIR" = "" ]; then
 echo "GeoGebraWeb compilation finished. Insert this URL into your browser to test it:"
 echo "file:///$WEBDIR/war/Web.html"
else
 echo "Trying to (re)create $INSTALLDIR..."
 mkdir -p $INSTALLDIR || exit 6
 cp -a $WEBDIR/war/* $INSTALLDIR
 for i in .svn WEB-INF; do
  rm -fR $INSTALLDIR/$i
  done
 echo "GeoGebraWeb compilation finished. Insert this URL into your browser to test it:"
 echo "file:///$INSTALLDIR/Web.html"
 fi


exit 0;

