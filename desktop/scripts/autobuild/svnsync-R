#!/bin/sh
# This program is a simple workaround to synchronize the remote SVN
# directory with the current contents of the working directory.
# No input (currently), the SVN commands will be executed automatically.
# It is a recursive version, but it cannot handle spaces in file names yet.

# @author Zoltan Kovacs <zoltan@geogebra.org>

MYWD=`pwd`
echo "cd $MYWD"

MYDIRNAME=`dirname $0`
MYFULLPATH=`cd $MYDIRNAME; pwd`/`basename $0`

# 1. Creating temporary files for contents
REMOTE_CONTENTS=`tempfile`
LOCAL_CONTENTS=`tempfile`
DIFFFILE=`tempfile`
TO_REMOVE=`tempfile`
TO_ADD=`tempfile`
SVN_COMMANDS=`tempfile`

# 2. Download and sort the SVN remote files:
svn ls | sed s/"\/\$"// | sort > $REMOTE_CONTENTS

# 3. Create file for local contents:
ls -1 --color=no | sort > $LOCAL_CONTENTS

# 4. Diffing and sorting out files:
diff $REMOTE_CONTENTS $LOCAL_CONTENTS > $DIFFFILE
cat $DIFFFILE | grep ^"<" > $TO_REMOVE
cat $DIFFFILE | grep ^">"  | awk '{print substr($0,3)}' > $TO_ADD

# 5. Outputting the required SVN commands
if [ -s $TO_REMOVE ]; then
 echo -n "svn remove" > $SVN_COMMANDS
 cat $TO_REMOVE | awk '{printf(" %s",substr($0,3))}' >> $SVN_COMMANDS
 echo >> $SVN_COMMANDS
 fi
if [ -s $TO_ADD ]; then
 echo -n "svn add" >> $SVN_COMMANDS
 cat $TO_ADD | awk '{printf(" %s",$0)}' >> $SVN_COMMANDS
 echo >> $SVN_COMMANDS
 fi

cat $SVN_COMMANDS
sh $SVN_COMMANDS

# 6. If a subdirectory should be added, then dive into it...
cat $TO_ADD | awk '{runstr="test -d \"" $0 "\" && (cd \"" $0 "\"; '$MYFULLPATH')" ; system(runstr);}'

# 7. Cleanup:
rm -f $REMOTE_CONTENTS $LOCAL_CONTENTS $DIFFFILE $TO_DELETE $TO_ADD $SVN_COMMANDS
