#!/bin/bash
#---------------------------------------------
# Script to install the GTK+ Thumbnail Creator for GeoGebra files
#---------------------------------------------

#---------------------------------------------
# Used environment variables:
#
# INSTALL=<path of install macro> # If unset, './install-sh' will be used. (Distributors may want to set their own install macro.)
#
# CHMOD=<path of chmod macro> # If unset, 'chmod' will be used. (Distributors may want to set their own chmod macro.)
#
# BINDIR=<path for executable binary files> # If unset, 'usr/bin' will be used.
#
# DATADIR=<path for data files> # If unset, '/usr/share' will be used.
#
# CREATE_UNINSTALLER=<boolean> # If unset, 'false' will be used. (Distributors normally have their own uninstaller.)
#
# VERBOSE_MODE=<boolean> # If unset, 'false' will be used.

#---------------------------------------------
# If $INSTALL not set, use './install-sh'.

if [ -z "$INSTALL" ]; then
	INSTALL="./install-sh"
fi

#---------------------------------------------
# If $CHMOD not set, use 'chmod'.

if [ -z "$CHMOD" ]; then
	CHMOD="chmod"
fi

#---------------------------------------------
# If $BINDIR not set, use '/usr/bin'.

if [ -z "$BINDIR" ]; then
	BINDIR="/usr/bin"
fi

#---------------------------------------------
# If $DATADIR not set, use '/usr/share'.

if [ -z "$DATADIR" ]; then
	DATADIR="/usr/share"
fi

#---------------------------------------------
# If $CREATE_UNINSTALLER not set, use 'false'.

if [ -z "$CREATE_UNINSTALLER" ]; then
	CREATE_UNINSTALLER="false"
fi

#---------------------------------------------
# If $VERBOSE_MODE not set, use 'false'.

if [ -z "$VERBOSE_MODE" ]; then
	VERBOSE_MODE='false'
fi

#---------------------------------------------
# Install everything.

"$INSTALL" -d -m 755 "$BINDIR"
"$INSTALL" -m 644 "geogebra-thumbnail-gtk/ggthumb" "$BINDIR"
"$CHMOD" 755 "$BINDIR/ggthumb"
"$INSTALL" -d -m 755 "$DATADIR"
"$INSTALL" -d -m 755 "$DATADIR/thumbnailers"
"$INSTALL" -m 644 "geogebra-thumbnail-gtk/geogebra.thumbnailer" "$DATADIR/thumbnailers"

# Create uninstall script, if $CREATE_UNINSTALLER is not set 'false':
if [ "$CREATE_UNINSTALLER" != "false" ]; then
	cat > "$BINDIR/uninstall-geogebra-thumbnail-gtk" << EOF
#!/bin/bash
#---------------------------------------------
# Script to uninstall the GTK+ Thumbnail Creator for GeoGebra files
#---------------------------------------------

# Define usage function:
func_usage()
{
cat << _USAGE
Usage: uninstall-geogebra-thumbnail-gtk [Options]

Uninstall the GTK+ Thumbnail Creator for GeoGebra files

Options:
  --help         Print this help message
  --force        Uninstall without asking questions
_USAGE
}

# Check for options:
FORCE="false"
for i in "\$@"; do
	case "\$i" in
	--help | --hel | --he | --h )
		func_usage; exit 0 ;;
	esac
	if [ "\$i" = '--force' ]; then
		FORCE="true"
	fi
done

# Ask to continue, if option --force is not used:
if [ "\$FORCE" = "false" ]; then
	KDIALOG_possible="false"
	QDBUS_possible="false"
	ZENITY_possible="false"
	XDIALOG_possible="false"
	if [ "\$UID" != "0" ]; then
		KDIALOG_possible="true"
		QDBUS_possible="false"
		ZENITY_possible="false"
		XDIALOG_possible="false"
		type -P kdialog &>/dev/null || KDIALOG_possible="false"
		if [ "\$KDIALOG_possible" = "true" ]; then
			QDBUS_possible="true"
			type -P qdbus &>/dev/null || QDBUS_possible="false"
		else
			ZENITY_possible="true"
			type -P zenity &>/dev/null || ZENITY_possible="false"
			if [ "\$ZENITY_possible" = "false" ]; then
				XDIALOG_possible="true"
				type -P Xdialog &>/dev/null || XDIALOG_possible="false"
			fi
		fi
	fi
	ANSWER=1
	if [ "\$KDIALOG_possible" = "true" ]; then
		kdialog --caption "GTK+ Thumbnail Creator for GeoGebra files" --warningcontinuecancel "This will uninstall the GTK+ Thumbnail Creator for GeoGebra files."
		ANSWER=\$?
	elif [ "\$ZENITY_possible" = "true" ]; then
		zenity --title="GTK+ Thumbnail Creator for GeoGebra files" --warning --text="This will uninstall the GTK+ Thumbnail Creator for GeoGebra files."
		ANSWER=\$?
	elif [ "\$XDIALOG_possible" = "true" ]; then
		Xdialog --title "GTK+ Thumbnail Creator for GeoGebra files" --yesno "This will uninstall the GTK+ Thumbnail Creator for GeoGebra files.\n\nDo you want to continue?" 0 0
		ANSWER=\$?
	else
		echo "This will uninstall the GTK+ Thumbnail Creator for GeoGebra files."
		tput bold
		read -p "Do you want to continue? [y/n]: "
		tput sgr0
		case "\$REPLY" in
		y | Y | yes | Yes | YES )
			ANSWER=0 ;;
		esac
	fi
	if [ \$ANSWER != 0 ]; then
		exit 0
	fi
fi

# Uninstall files and show progressbar during installation, if possible and option --force is not used:
if [ "\$KDIALOG_possible" = "true" -a "\$QDBUS_possible" = "true" -a "\$FORCE" = "false" ]; then
	DBUSREF=\`kdialog --caption "GTK+ Thumbnail Creator for GeoGebra files" --progressbar "Uninstalling the GTK+ Thumbnail Creator for GeoGebra files." 1\`
fi
if [ -w "$BINDIR/ggthumb" ]; then
	rm -f "$BINDIR/ggthumb"
fi
if [ -w "$DATADIR/thumbnailers/geogebra.thumbnailer" ]; then
	rm -f "$DATADIR/thumbnailers/geogebra.thumbnailer"
fi
if [ "\$KDIALOG_possible" = "true" -a "\$QDBUS_possible" = "true" -a "\$FORCE" = "false" ]; then
	qdbus \$DBUSREF Set "" value 1 >/dev/null
	qdbus \$DBUSREF setLabelText "Uninstallation completed." >/dev/null
	qdbus \$DBUSREF close >/dev/null
fi

# Selfdestruction:
if [ -w "$BINDIR/uninstall-geogebra-thumbnail-gtk" ]; then
	rm "$BINDIR/uninstall-geogebra-thumbnail-gtk"
fi
EOF
	"$CHMOD" 755 "$BINDIR/uninstall-geogebra-thumbnail-gtk"
fi

# List pathes of installed files and of files included in installed
# directories, if $VERBOSE_MODE is not set 'false':
if [ "$VERBOSE_MODE" != "false" ]; then
	echo "`tput smul`Files of package 'geogebra-thumbnail-gtk'`tput sgr0`"
	if [ -e "$BINDIR/ggthumb" ]; then
		echo "$BINDIR/ggthumb"
	fi
	if [ -e "$BINDIR/uninstall-geogebra-thumbnail-gtk" ]; then
		echo "$BINDIR/uninstall-geogebra-thumbnail-gtk"
	fi
	if [ -e "$DATADIR/thumbnailers/geogebra.thumbnailer" ]; then
		echo "$DATADIR/thumbnailers/geogebra.thumbnailer"
	fi
fi
