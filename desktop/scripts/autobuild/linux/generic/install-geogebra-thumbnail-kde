#!/bin/bash
#---------------------------------------------
# Script to install the KDE Thumbnail Creator for GeoGebra files
#---------------------------------------------

#---------------------------------------------
# Used environment variables:
#
# ARCH=[<32>|<64>] # If unset, '32 (32bit) will be used.
#
# INSTALL=<path of install macro> # If unset, './install-sh' will be used. (Distributors may want to set their own install macro.)
#
# CHMOD=<path of chmod macro> # If unset, 'chmod' will be used. (Distributors may want to set their own chmod macro.)
#
# BINDIR=<path for executable binary files> # If unset, 'usr/bin' will be used.
#
# DOCDIR=<path for doc files> # If unset, '/usr/share/doc' will be used.
#
# KDEDATADIR=<path for KDE data files> # If unset, '/usr/share' will be used.
#
# KDELIBDIR=<path for KDE libraries> # If unset, '/usr/lib' will be used.
#
# CREATE_UNINSTALLER=<boolean> # If unset, 'false' will be used. (Distributors normally have their own uninstaller.)
#
# VERBOSE_MODE=<boolean> # If unset, 'false' will be used.

#---------------------------------------------
# If $ARCH not set, use '32'.

if [ -z "$ARCH" ]; then
	ARCH='32'
fi

#---------------------------------------------
# If $INSTALL not set, use './install-sh'.

if [ -z "$INSTALL" ]; then
	INSTALL='./install-sh'
fi

#---------------------------------------------
# If $CHMOD not set, use 'chmod'.

if [ -z "$CHMOD" ]; then
	CHMOD='chmod'
fi

#---------------------------------------------
# If $BINDIR not set, use '/usr/bin'.

if [ -z "$BINDIR" ]; then
	BINDIR='/usr/bin'
fi

#---------------------------------------------
# If $DOCDIR not set, use '/usr/share/doc'.

if [ -z "$DOCDIR" ]; then
	DOCDIR='/usr/share/doc'
fi

#---------------------------------------------
# If $KDEDATADIR not set, use '/usr/share'.

if [ -z "$KDEDATADIR" ]; then
	KDEDATADIR='/usr/share'
fi

#---------------------------------------------
# If $KDELIBDIR not set, use '/usr/lib'.

if [ -z "$KDELIBDIR" ]; then
	KDELIBDIR='/usr/lib'
fi

#---------------------------------------------
# If $CREATE_UNINSTALLER not set, use 'false'.

if [ -z "$CREATE_UNINSTALLER" ]; then
	CREATE_UNINSTALLER='false'
fi

#---------------------------------------------
# If $VERBOSE_MODE not set, use 'false'.

if [ -z "$VERBOSE_MODE" ]; then
	VERBOSE_MODE='false'
fi

#---------------------------------------------
# Install everything.

"$INSTALL" -d -m 755 "$KDELIBDIR"
"$INSTALL" -d -m 755 "$KDELIBDIR/kde4"
if [ "$ARCH" = "64" ]; then
	"$INSTALL" -m 644 "geogebra-thumbnail-kde/lib64/geogebrathumbnail.so" "$KDELIBDIR/kde4"
else
	"$INSTALL" -m 644 "geogebra-thumbnail-kde/lib32/geogebrathumbnail.so" "$KDELIBDIR/kde4"
fi
"$CHMOD" 755 "$KDELIBDIR/kde4/geogebrathumbnail.so"
"$INSTALL" -d -m 755 "$KDEDATADIR"
"$INSTALL" -d -m 755 "$KDEDATADIR/kde4"
"$INSTALL" -d -m 755 "$KDEDATADIR/kde4/services"
"$INSTALL" -m 644 "geogebra-thumbnail-kde/geogebrathumbnail.desktop" "$KDEDATADIR/kde4/services"
"$INSTALL" -d -m 755 "$DOCDIR"
"$INSTALL" -d -m 755 "$DOCDIR/packages"
"$INSTALL" -d -m 755 "$DOCDIR/packages/geogebra-thumbnail-kde"
"$INSTALL" -m 644 "geogebra-thumbnail-kde/GeoGebraThumbnail/LICENSE" "$DOCDIR/packages/geogebra-thumbnail-kde"

# Create uninstall script, if $CREATE_UNINSTALLER is not set 'false':
if [ "$CREATE_UNINSTALLER" != "false" ]; then
	cat > "$BINDIR/uninstall-geogebra-thumbnail-kde" << EOF
#!/bin/bash
#---------------------------------------------
# Script to uninstall the KDE Thumbnail Creator for GeoGebra files
#---------------------------------------------

# Define usage function:
func_usage()
{
cat << _USAGE
Usage: uninstall-geogebra-thumbnail-kde [Options]

Uninstall the KDE Thumbnail Creator for GeoGebra files

Options:
  --help         Print this help message
  --force        Uninstall without asking questions
_USAGE
}

# Check for options:
FORCE="false"
for i in "\$@"; do
	case "\$i" in
	--help | --hel | --he | --h )
		func_usage; exit 0 ;;
	esac
	if [ "\$i" = '--force' ]; then
		FORCE="true"
	fi
done

# Ask to continue, if option --force is not used:
if [ "\$FORCE" = "false" ]; then
	KDIALOG_possible="false"
	QDBUS_possible="false"
	ZENITY_possible="false"
	XDIALOG_possible="false"
	if [ "\$UID" != "0" ]; then
		KDIALOG_possible="true"
		QDBUS_possible="false"
		ZENITY_possible="false"
		XDIALOG_possible="false"
		type -P kdialog &>/dev/null || KDIALOG_possible="false"
		if [ "\$KDIALOG_possible" = "true" ]; then
			QDBUS_possible="true"
			type -P qdbus &>/dev/null || QDBUS_possible="false"
		else
			ZENITY_possible="true"
			type -P zenity &>/dev/null || ZENITY_possible="false"
			if [ "\$ZENITY_possible" = "false" ]; then
				XDIALOG_possible="true"
				type -P Xdialog &>/dev/null || XDIALOG_possible="false"
			fi
		fi
	fi
	ANSWER=1
	if [ "\$KDIALOG_possible" = "true" ]; then
		kdialog --caption "KDE Thumbnail Creator for GeoGebra files" --warningcontinuecancel "This will uninstall the KDE Thumbnail Creator for GeoGebra files."
		ANSWER=\$?
	elif [ "\$ZENITY_possible" = "true" ]; then
		zenity --title="KDE Thumbnail Creator for GeoGebra files" --warning --text="This will uninstall the KDE Thumbnail Creator for GeoGebra files."
		ANSWER=\$?
	elif [ "\$XDIALOG_possible" = "true" ]; then
		Xdialog --title "KDE Thumbnail Creator for GeoGebra files" --yesno "This will uninstall the KDE Thumbnail Creator for GeoGebra files.\n\nDo you want to continue?" 0 0
		ANSWER=\$?
	else
		echo "This will uninstall the KDE Thumbnail Creator for GeoGebra files."
		tput bold
		read -p "Do you want to continue? [y/n]: "
		tput sgr0
		case "\$REPLY" in
		y | Y | yes | Yes | YES )
			ANSWER=0 ;;
		esac
	fi
	if [ \$ANSWER != 0 ]; then
		exit 0
	fi
fi

# Uninstall files and show progressbar during installation, if possible and option --force is not used:
if [ "\$KDIALOG_possible" = "true" -a "\$QDBUS_possible" = "true" -a "\$FORCE" = "false" ]; then
	DBUSREF=\`kdialog --caption "KDE Thumbnail Creator for GeoGebra files" --progressbar "Uninstalling the KDE Thumbnail Creator for GeoGebra files." 1\`
fi
if [ -w "$KDELIBDIR/kde4/geogebrathumbnail.so" ]; then
	rm -f "$KDELIBDIR/kde4/geogebrathumbnail.so"
fi
if [ -w "$KDEDATADIR/kde4/services/geogebrathumbnail.desktop" ]; then
	rm -f "$KDEDATADIR/kde4/services/geogebrathumbnail.desktop"
fi
if [ -w "$DOCDIR/packages/geogebra-thumbnail-kde/LICENSE" ]; then
	rm -f "$DOCDIR/packages/geogebra-thumbnail-kde/LICENSE"
fi
rmdir --ignore-fail-on-non-empty "$DOCDIR/packages/geogebra-thumbnail-kde"
if [ "\$KDIALOG_possible" = "true" -a "\$QDBUS_possible" = "true" -a "\$FORCE" = "false" ]; then
	qdbus \$DBUSREF Set "" value 1 >/dev/null
	qdbus \$DBUSREF setLabelText "Uninstallation completed." >/dev/null
	qdbus \$DBUSREF close >/dev/null
fi

# Selfdestruction:
if [ -w "$BINDIR/uninstall-geogebra-thumbnail-kde" ]; then
	rm "$BINDIR/uninstall-geogebra-thumbnail-kde"
fi
EOF
	"$CHMOD" 755 "$BINDIR/uninstall-geogebra-thumbnail-kde"
fi

# List pathes of installed files and of files included in installed
# directories, if $VERBOSE_MODE is not set 'false':
if [ "$VERBOSE_MODE" != "false" ]; then
	echo "`tput smul`Files of package 'geogebra-thumbnail-kde'`tput sgr0`"
	if [ -e "$BINDIR/uninstall-geogebra-thumbnail-kde" ]; then
		echo "$BINDIR/uninstall-geogebra-thumbnail-kde"
	fi
	if [ -e "$KDELIBDIR/kde4/geogebrathumbnail.so" ]; then
		echo "$KDELIBDIR/kde4/geogebrathumbnail.so"
	fi
	if [ -e "$KDEDATADIR/kde4/services/geogebrathumbnail.desktop" ]; then
		echo "$KDEDATADIR/kde4/services/geogebrathumbnail.desktop"
	fi
	if [ -e "$DOCDIR/packages/geogebra-thumbnail-kde/LICENSE" ]; then
		echo "$DOCDIR/packages/geogebra-thumbnail-kde/LICENSE"
	fi
fi
