ANOVA.Syntax=[ <Liste>, <Liste>, ... ]
AffineRatio=AfinOran\u0131
AffineRatio.Syntax=[ <Nokta>, <Nokta>, <Nokta> ]
Angle=Aç\u0131
Angle.Syntax=[ <Say\u0131> ]\n[ <Vektör> ]\n[ <Nokta> ]\n[ <Konik> ]\n[ <Çokgen> ]\n[ <Vektör>, <Vektör> ]\n[ <Do\u011fru>, <Do\u011fru> ]\n[ <Nokta>, <Nokta>, <Nokta> ]\n[ <Nokta>, <Nokta>, <Aç\u0131> ]
AngularBisector=Aç\u0131Ortay
AngularBisector.Syntax=[ <Do\u011fru>, <Do\u011fru> ]\n[ <Nokta>, <Nokta>, <Nokta> ]
Append=SonunaEkle
Append.Syntax=[ <Liste>, <Nesne> ]\n[ <Nesne>, <Liste> ]
ApplyMatrix=MatrisUygula
ApplyMatrix.Syntax=[ <Matris>, <Nesne> ]
Arc=Yay
Arc.Syntax=[ <Konik>, <Nokta>, <Nokta> ]\n[ <Konik>, <Say\u0131>, <Say\u0131> ]
AreCollinear=Do\u011frusalM\u0131
AreCollinear.Syntax=[ <Nokta>, <Nokta>, <Nokta> ]
AreConcurrent=E\u015fZamanl\u0131M\u0131
AreConcurrent.Syntax=[ <Do\u011fru>, <Do\u011fru>, <Do\u011fru> ]
AreConcyclic=E\u015fÇemberselMi
AreConcyclic.Syntax=[ <Nokta>, <Nokta>, <Nokta>, <Nokta> ]
AreEqual=E\u015fitMi
AreEqual.Syntax=[ <Nesne>, <Nesne> ]
AreParallel=ParalelMi
AreParallel.Syntax=[ <Do\u011fru>, <Do\u011fru> ]
ArePerpendicular=DikMi
ArePerpendicular.Syntax=[ <Do\u011fru>, <Do\u011fru> ]
Area=Alan
Area.Syntax=[ <Konik> ]\n[ <Nokta>, ..., <Nokta> ]
Asymptote=Asimtot
Asymptote.Syntax=[ <Konik> ]
AttachCopyToView=KopyaEkle
AttachCopyToView.Syntax=[ <Nesne>, <Görünüm 0|1|2> ]\n[ <Nesne>, <Görünüm 0|1|2>, <Nokta 1>, <Nokta 2>, <Ekran Nokta 1>, <Ekran Nokta 2> ]
Axes=Eksenler
Axes.Syntax=[ <Konik> ]
Axes.Syntax3D=[ <Konisel> ]\n[ <\u0130kinci dereceden> ]
AxisStepX=XEkseniAd\u0131m\u0131
AxisStepY=YEkseniAd\u0131m\u0131
BarChart=SütunGrafi\u011fi
BarChart.Syntax=[ <Veri Listesi>, <S\u0131kl\u0131k Listesi> ]\n[ <Ham Veri Listesi>, <Sütun Geni\u015fli\u011fi> ]\n[ <Veri Listesi>, <S\u0131kl\u0131k Listesi>, <Sütun Geni\u015fli\u011fi> ]\n[ <Ba\u015flang\u0131ç De\u011feri>, <Biti\u015f De\u011feri>, <Yükseklikler Listesi> ]\n[ <Ba\u015flang\u0131ç De\u011feri>, <Biti\u015f De\u011feri>, <\u0130fade>, <De\u011fi\u015fken>, <Say\u0131dan>, <Say\u0131ya> ]\n[ <Ba\u015flang\u0131ç De\u011feri>, <Biti\u015f De\u011feri>, <\u0130fade>, <De\u011fi\u015fken>, <Say\u0131dan>, <Say\u0131ya>, <Aral\u0131k Geni\u015fli\u011fi> ]
BarCode=BarKod
BarCode.Syntax=[ ]\n[ <Resim> ]\n[ <Metin veya Say\u0131>, "<Biçim (opsiyonel)>", "<Hata Düzeltme (opsiyonel)>", <Geni\u015flik (opsiyonel)>, <Yükseklik (opsiyonel)> ]
Barycenter=KütleMerkezi
Barycenter.Syntax=[ <Nokta Listesi>, <A\u011f\u0131rl\u0131k Listesi> ]
Bernoulli=Bernolli
Bernoulli.Syntax=[ <\u0130htimal>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
Binomial=BinomKatsay\u0131s\u0131
Binomial.Syntax=[ <Say\u0131 n>, <Say\u0131 r> ]
Binomial.SyntaxCAS=[ <Say\u0131>, <Say\u0131> ]
BinomialDist=Binom
BinomialDist.Syntax=[ <Deneme Say\u0131s\u0131>, <Ba\u015far\u0131 \u0130htimali> ]\n[ <Deneme Say\u0131s\u0131>, <Ba\u015far\u0131 \u0130htimali>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]\n[ <Deneme Say\u0131s\u0131>, <Ba\u015far\u0131 \u0130htimali>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
BinomialDist.SyntaxCAS=[ <Deneme Say\u0131s\u0131>, <Ba\u015far\u0131 \u0130htimali>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
Bottom=Alt
BoxPlot=KutuÇizim
BoxPlot.Syntax=[ <yBa\u015flang\u0131ç>, <yÖlçek>, <Ham Veri Listesi> ]\n[ <yBa\u015flang\u0131ç>, <yÖlçek>, <Ham Veri Listesi>, <S\u0131nama D\u0131\u015farda kalan> ]\n[ <yBa\u015flang\u0131ç>, <yÖlçek>, <Veri Listesi>, <Frekans Listesi>, <S\u0131nama D\u0131\u015farda kalan> ]\n[ <yBa\u015flang\u0131ç>, <yÖlçek>, <Ba\u015flang\u0131ç De\u011feri>, <Q1>, <Ortalama>, <Q3>, <Biti\u015f De\u011feri> ]
Button=Dü\u011fme
Button.Syntax=[ ]\n[ <Ba\u015fl\u0131k> ]
CFactor=CÇarpan
CFactor.SyntaxCAS=[ <\u0130fade> ]\n[ <\u0130fade>, <De\u011fi\u015fken> ]
CIFactor=CIFaktör
CIFactor.SyntaxCAS=[ <\u0130fade> ]\n[ <\u0130fade>, <De\u011fi\u015fken> ]
CSolutions=CÇözümler
CSolutions.SyntaxCAS=[ <Denklem> ]\n[ <Denklem>, <De\u011fi\u015fken> ]
CSolve=CÇözüm
CSolve.SyntaxCAS=[ <Denklem> ]\n[ <Denklem>, <De\u011fi\u015fken> ]
Cauchy.Syntax=[ <Medyan>, <Ölçek>, x ]\n[ <Medyan>, <Ölçek>, <De\u011fi\u015fken De\u011feri> ]\n[ <Medyan>, <Ölçek>, x, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
Cauchy.SyntaxCAS=[ <Medyan>, <Ölçek>, <De\u011fi\u015fken De\u011feri> ]
Cell=Hücre
Cell.Syntax=[ <Sütun>, <Sat\u0131r> ]
CellRange=HücreAral\u0131\u011f\u0131
CellRange.Syntax=[ <Ba\u015flang\u0131ç Hücresi>, <Biti\u015f Hücresi> ]
Center=Merkez
Center.Syntax=[ <Konik> ]
CenterView=MerkezGörünüm
CenterView.Syntax=[ <Merkez Nokta> ]
Centroid=A\u011f\u0131rl\u0131kMerkezi
Centroid.Syntax=[ <Çokgen> ]
Checkbox=\u0130\u015faretKutusu
Checkbox.Syntax=[ ]\n[ <Ba\u015fl\u0131k> ]\n[ <Liste> ]\n[ <Ba\u015fl\u0131k>, <Liste> ]
ChiSquared=KiKare
ChiSquared.Syntax=[ <Serbestlik Derecesi>, x ]\n[ <Serbestlik Derecesi>, <De\u011fi\u015fken De\u011feri> ]\n[ <Serbestlik Derecesi>, x, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
ChiSquared.SyntaxCAS=[ <Serbestlik Derecesi>, <De\u011fi\u015fken> ]
ChiSquaredTest=ChiSquaredTesti
ChiSquaredTest.Syntax=[ <Matris> ]\n[ <Liste>, <Liste> ]\n[ <Matris>, <Matris> ]
Circle=Çember
Circle.Syntax=[ <Nokta>, <Say\u0131> ]\n[ <Nokta>, <Do\u011fru Parças\u0131> ]\n[ <Nokta>, <Nokta> ]\n[ <Nokta>, <Nokta>, <Nokta> ]
Circle.Syntax3D=[ <Point>, <Radius Number> ]\n[ <Point>, <Segment> ]\n[ <Nokta>, <Nokta> ]\n[ <Do\u011fru>, <Nokta> ]\n[ <Nokta>, <Nokta>, <Nokta> ]\n[ <Nokta>, <Yar\u0131çap>, <Yön> ]\n[ <Nokta>, <Nokta>, <Yön> ]
CircleArc=ÇemberselYay
CircleArc.Syntax=[ <Nokta>, <Nokta>, <Nokta> ]
CircleSector=DaireselDilim
CircleSector.Syntax=[ <Nokta>, <Nokta>, <Nokta> ]
CircumcircleArc=\u0130çÇemberselYay
CircumcircleArc.Syntax=[ <Nokta>, <Nokta>, <Nokta> ]
CircumcircleSector=\u0130çDaireselDilim
CircumcircleSector.Syntax=[ <Nokta>, <Nokta>, <Nokta> ]
Circumference=Çevre
Circumference.Syntax=[ <Konik> ]
Classes=Aral\u0131klar
Classes.Syntax=[ <Veri Listesi>, <Aral\u0131k Say\u0131s\u0131> ]\n[ <Veri Listesi>, <Ba\u015flang\u0131ç>, <Aral\u0131k Geni\u015fli\u011fi> ]
ClosestPoint=EnYak\u0131nNokta
ClosestPoint.Syntax=[ <Yol>, <Nokta> ]\n[ <Bölge>, <Nokta> ]\n[ <Do\u011fru>, <Do\u011fru> ]
Coefficients=Katsay\u0131lar
Coefficients.Syntax=[ <Polinom> ]\n[ <Konik> ]
Coefficients.SyntaxCAS=[ <Polinom> ]\n[ <Polinom>, <De\u011fi\u015fken> ]
Column=Sütun
Column.Syntax=[ <Hücre> ]
ColumnName=SütunAd\u0131
ColumnName.Syntax=[ <Hücre> ]
Command=Komut
CommonDenominator=OrtakPayda
CommonDenominator.Syntax=[ <\u0130fade>, <\u0130fade> ]
CompetitionRank=Rank
CompetitionRank.Syntax=[ <Liste> ]
CompleteSquare=TamKare
CompleteSquare.Syntax=[ <\u0130kinci Derece Fonksiyon> ]
ComplexRoot=Karma\u015f\u0131kKök
ComplexRoot.Syntax=[ <Polinom> ]
Cone=Koni
Cone.Syntax=[ <Çember>, <Yükseklik> ]\n[ <Nokta>, <Nokta>, <Yar\u0131çap> ]
Conic=Konik
Conic.Syntax=[ <Nokta1>, <Nokta2>, <Nokta3>, <Nokta4>, <Nokta5> ]
ConstructionStep=\u0130n\u015faAd\u0131m\u0131
ConstructionStep.Syntax=[ <Nesne> ]
ContingencyTable=CrossTab
ContingencyTable.Syntax=[ <Metin Listesi>, <Metin Listesi> ]\n[ <Metin Listesi>, <Metin Listesi>, <Seçenekler> ]\n[ <Ham De\u011ferler Listesi>, <Sütun De\u011ferler Listesi>, <Frekans Tablosu> ]\n[ <Ham De\u011ferler Listesi>, <Sütun De\u011ferler Listesi>, <Frekans Tablosu>, <Seçenekler> ]
ContinuedFraction=SürekliKesirler
ContinuedFraction.Syntax=[ <Say\u0131> ]\n[ <Say\u0131>, <Seviye> ]\n[ <Say\u0131>, <Seviye>, <K\u0131sayol do\u011fru|yanl\u0131\u015f> ]
ContourPlot=KonturÇizim
ConvexHull=D\u0131\u015fbükeyZarf
ConvexHull.Syntax=[ <Nokta Listesi> ]
CopyFreeObject=SerbestNesneyiKopyala
CopyFreeObject.Syntax=[ <Nesne> ]
Corner=Kö\u015fe
Corner.Syntax=[ <Resim>, <Say\u0131> ]
CountIf=E\u011ferSay
CountIf.Syntax=[ <\u015eart>, <Liste> ]\n[ <\u015eart>, <De\u011fi\u015fken>, <Liste> ]
Covariance=Kovaryans
Covariance.Syntax=[ <Say\u0131 Listesi>, <Say\u0131 Listesi> ]
Cross=Çapraz
Cross.SyntaxCAS=[ <Vektör>, <Vektör> ]
CrossRatio=KartezyenOran
CrossRatio.Syntax=[ <Nokta>, <Nokta>, <Nokta>, <Nokta> ]
Cube=Küp
Cube.Syntax=[ <Nokta>, <Nokta> ]\n[ <Nokta>, <Nokta>, <Yön> ]
Cubic=Kübik
Cubic.Syntax=[ <Nokta>, <Nokta>, <Nokta>, <Say\u0131> ]
Curvature=E\u011frilik
Curvature.Syntax=[ <Nokta>, <\u0130\u015flev> ]\n[ <Nokta>, <E\u011fri> ]
CurvatureVector=E\u011frilikVektörü
CurvatureVector.Syntax=[ <Nokta>, <\u0130\u015flev> ]\n[ <Nokta>, <E\u011fri> ]
CurveCartesian=E\u011fri
CurveCartesian.Syntax=[ <ifade>, <ifade>, <de\u011fi\u015fken>, <ba\u015flang\u0131ç>, <biti\u015f> ]
CurveCartesian.Syntax3D=[ <\u0130fade>, <\u0130fade>, <Parametre De\u011fi\u015fkeni>, <Ba\u015flang\u0131ç De\u011feri>, <Biti\u015f De\u011feri> ]\n[ <\u0130fade>, <\u0130fade>, <\u0130fade>, <Parametre De\u011fi\u015fkeni>, <Ba\u015flang\u0131ç De\u011feri>, <Biti\u015f De\u011feri> ]
Cylinder=Silindir
Cylinder.Syntax=[ <Çember>, <Yükseklik> ]\n[ <Nokta>, <Nokta>, <Yar\u0131çap> ]
Defined=Tan\u0131ml\u0131m\u0131
Defined.Syntax=[ <Nesne> ]
Degree=Derece
Degree.Syntax=[ <Polinom> ]
Degree.SyntaxCAS=[ <Polinom> ]\n[ <Polinom>, <De\u011fi\u015fken> ]
DelauneyTriangulation=DelaunayÜçgenlemesi
DelauneyTriangulation.Syntax=[ <Nokta Listesi> ]
Delete=Sil
Delete.Syntax=[ <Nesne> ]
Denominator=Payda
Denominator.Syntax=[ <\u0130\u015flev> ]
Denominator.SyntaxCAS=[ <\u0130\u015flev> ]
DensityPlot=Yo\u011funlukÇizim
Derivative=Türev
Derivative.Syntax=[ <\u0130\u015flev> ]\n[ <E\u011fri> ]\n[ <\u0130\u015flev>, <Say\u0131> ]\n[ <E\u011fri>, <Say\u0131> ]
Derivative.SyntaxCAS=[ <\u0130fade> ]
Determinant.Syntax=[ <Matris> ]
Diameter=Çap
Diameter.Syntax=[ <Vektör>, <Konik> ]\n[ <Do\u011fru>, <Konik> ]
Dilate=Geni\u015flet
Dilate.Syntax=[ <Nokta>, <Say\u0131>, <Nokta> ]\n[ <Do\u011fru>, <Say\u0131>, <Nokta> ]\n[ <Konik>, <Say\u0131>, <Nokta> ]\n[ <Çokgen>, <Say\u0131>, <Nokta> ]\n[ <Resim>, <Say\u0131>, <Nokta> ]
Dimension=Boyut
Dimension.Syntax=[ <Vektör> ]
Direction=Yön
Direction.Syntax=[ <Do\u011fru> ]
Directrix=Do\u011frultman
Directrix.Syntax=[ <Konik> ]
Distance=Uzakl\u0131k
Distance.Syntax=[ <Nokta>, <Nokta> ]\n[ <Nokta>, <Do\u011fru> ]\n[ <Do\u011fru>, <Nokta> ]
Div=Böl
Div.Syntax=[ <Say\u0131>, <Say\u0131> ]
Division=Bölüm
Division.Syntax=[ <Bölünen Say\u0131>, <Bölen Say\u0131> ]\n[ <Bölünen Polinom>, <Bölen Polinom> ]
Divisors=Bölenler
Divisors.Syntax=[ <Say\u0131> ]
DivisorsList=BölenlerListesi
DivisorsList.Syntax=[ <Say\u0131> ]
DivisorsSum=BölenlerToplam\u0131
DivisorsSum.Syntax=[ <Say\u0131> ]
Dodecahedron=OnikiYüzlü
Dodecahedron.Syntax=[ <Nokta>, <Nokta> ]\n[ <Nokta>, <Nokta>, <Yön> ]
Dot=Noktasal
Dot.SyntaxCAS=[ <Vektör>, <Vektör> ]
DotPlot=NoktaÇiz
DotPlot.Syntax=[ <Ham Veri Listesi> ]
DynamicCoordinates=DinamikKoordinatlar
DynamicCoordinates.Syntax=[ <Nokta>, <Say\u0131>, <Say\u0131> ]
Eccentricity=D\u0131\u015fmerkezlilik
Eccentricity.Syntax=[ <Konik> ]
Element=Ö\u011fe
Element.Syntax=[ <Liste>, <Ö\u011fenin Pozisyonu> ]\n[ <Matris>, <Sat\u0131r>, <Sütun> ]\n[ <Liste>, <Index1>, <Index2>, ... ]
Element.SyntaxCAS=[ <Liste>, <Ö\u011fenin Pozisyonu> ]\n[ <Matris>, <Sat\u0131r>, <Sütun> ]
Ellipse=Elips
Ellipse.Syntax=[ <Nokta>, <Nokta>, <Say\u0131> ]\n[ <Nokta>, <Nokta>, <Do\u011fru Parças\u0131> ]
Ends=Biti\u015fler
Erlang.Syntax=[ <\u015eekil>, <Oran>, x ]\n[ <\u015eekil>, <Oran>, <De\u011fi\u015fken De\u011feri> ]\n[ <\u015eekil>, <Oran>, x, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
Evaluate=Hesapla
Excentricity=D\u0131\u015fmerkezlik
Excentricity.Syntax=[ <Konik> ]
Execute=Çal\u0131\u015ft\u0131r
Execute.Syntax=[ <Metinlerin Listesi> ]\n[ <Metinlerin Listesi>, <Parametre>, <Parametre>, ... ]
Expand=\u0130fadeyiAç
Expand.Syntax=[ <\u0130\u015flev> ]
Exponential=Üstel
Exponential.Syntax=[ <Lamda>, x ]\n[ <Lamda>, <De\u011fi\u015fken De\u011feri> ]\n[ <Lamda>, x, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
Exponential.SyntaxCAS=[ <Lamda>, <De\u011fi\u015fken De\u011feri> ]
Extremum=UçNokta
Extremum.Syntax=[ <Polinom> ]
FDistribution=FDa\u011f\u0131l\u0131m\u0131
FDistribution.Syntax=[ <Pay Serbestlik Derecesi>, <Payda Serbestlik Derecesi>, x ]\n[ <Pay Serbestlik Derecesi>, <Payda Serbestlik Derecesi>, <De\u011fi\u015fken De\u011feri> ]\n[ <Pay Serbestlik Derecesi>, <Payda Serbestlik Derecesi>, x, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
FDistribution.SyntaxCAS=[ <Pay Serbestlik Derecesi>, <Payda Serbestlik Derecesi>, <De\u011fi\u015fken De\u011feri> ]
Factor=Çarpan
Factor.Syntax=[ <Polinom> ]
Factor.SyntaxCAS=[ <Polinom> ]
Factors=Çarpanlar
Factors.Syntax=[ <Polinom> ]
FillCells=HücreleriDoldur
FillCells.Syntax=[ <HücreAral\u0131\u011f\u0131>, <Nesne> ]\n[ <Hücre>, <Liste> ]\n[ <Hücre>, <Matris> ]
FillColumn=SütunDoldur
FillColumn.Syntax=[ <Sütun>, <Liste> ]
FillRow=Sat\u0131rDoldur
FillRow.Syntax=[ <Sat\u0131r>, <Liste> ]
First=\u0130lk
First.Syntax=[ <Liste> ]\n[ <Liste>, <Ö\u011fe Say\u0131s\u0131> ]
First.SyntaxCAS=[ <Liste> ]\n[ <Liste>, <Ö\u011fe Say\u0131s\u0131> ]
FirstAxis=\u0130lkEksen
FirstAxis.Syntax=[ <Konik> ]
FirstAxisLength=\u0130lkEksenUzunlu\u011fu
FirstAxisLength.Syntax=[ <Konik> ]
Fit=Yakla\u015ft\u0131r
Fit.Syntax=[ <Nokta Listesi>, <\u0130\u015flev Listesi> ]\n[ <Nokta Listesi>, <\u0130\u015flev> ]
FitExp=ÜstelYakla\u015ft\u0131r
FitExp.Syntax=[ <Nokta Listesi> ]
FitGrowth=BüyümeYakla\u015ft\u0131r
FitGrowth.Syntax=[ <Nokta Listesi> ]
FitLineX=Yakla\u015ft\u0131rDo\u011fruX
FitLineX.Syntax=[ <Nokta Listesi> ]
FitLineY=Yakla\u015ft\u0131rDo\u011fru
FitLineY.Syntax=[ <Nokta Listesi> ]
FitLog=Yakla\u015ft\u0131rLog
FitLog.Syntax=[ <Nokta Listesi> ]
FitLogistic=Yakla\u015ft\u0131rLojistik
FitLogistic.Syntax=[ <Nokta Listesi> ]
FitPoly=Yakla\u015ft\u0131rPolinom
FitPoly.Syntax=[ <Nokta Listesi>, <Polinom Derecesi> ]
FitPow=Yakla\u015ft\u0131rÜs
FitPow.Syntax=[ <Nokta Listesi> ]
FitSin=Yakla\u015ft\u0131rSin
FitSin.Syntax=[ <Nokta Listesi> ]
Flatten=Yass\u0131la\u015ft\u0131r
Flatten.Syntax=[ <Liste> ]
Focus=Odak
Focus.Syntax=[ <Konik> ]
FractionText=KesirMetni
FractionText.Syntax=[ <Say\u0131> ]\n[ <Nokta> ]
Frequency=Frekans
Frequency.Syntax=[ <Ham Veri Listesi> ]\n[ <Mant\u0131ksal Y\u0131\u011f\u0131lma>, <Ham Veri Listesi> ]\n[ <S\u0131n\u0131f S\u0131n\u0131rlar\u0131 Listesi>, <Ham Veri Listesi> ]\n[ <Metin Listesi>, <Metin Listesi> ]\n[ <Mant\u0131ksal Y\u0131\u011f\u0131lma>, <Aral\u0131k S\u0131n\u0131rlar\u0131 Listesi>, <Ham Veri Listesi> ]\n[ <Aral\u0131k S\u0131n\u0131rlar\u0131 Listesi>, <Ham Veri Listesi>, <Yo\u011funluk Kulan>, <Yo\u011funluk Ölçek Faktörü (opsiyonel)> ]\n[ <Mant\u0131ksal Y\u0131\u011f\u0131lma>, <Aral\u0131k  S\u0131n\u0131rlar\u0131 Listesi>, <Ham Veri Listesi>, <Yo\u011funluk Kulan>, <Yo\u011funluk Ölçek Faktörü (opsiyonel)> ]
FrequencyPolygon=FrekansÇokgeni
FrequencyPolygon.Syntax=[ <Aral\u0131k S\u0131n\u0131rlar\u0131 Listesi>, <Yükseklikler Listesi> ]\n[ <Aral\u0131k S\u0131n\u0131rlar\u0131 Listesi>, <Ham Veri Listesi>, <Yo\u011funluk Kullan\u0131m -Mant\u0131ksal>, <Yo\u011funluk Ölçek Faktörü> (opsiyonel) ]\n[ <Mant\u0131ksal Y\u0131\u011f\u0131lma>, <Aral\u0131k S\u0131n\u0131rlar\u0131 Listesi>, <Ham Veri Listesi>, <Yo\u011funluk Kullan\u0131m -Mant\u0131ksal>, <Yo\u011funluk Ölçek Faktörü> (opsiyonell) ]
FrequencyTable=FrekansTablosu
FrequencyTable.Syntax=[ <Ham Veri Listesi> ]\n[ <Aral\u0131k S\u0131n\u0131rlar\u0131 Listes>, <Yükseklikler Listesi> ]\n[ <Aral\u0131k S\u0131n\u0131rlar\u0131 Listes>, <Ham Veri Listesi>, <Yo\u011funluk Kullan- Mant\u0131ksal>, <Yo\u011funluk Ölçek Faktörü> (opsiyonel) ]\n[ <Mant\u0131ksal Y\u0131\u011f\u0131lma>, <Aral\u0131k S\u0131n\u0131rlar\u0131 Listes>, <Ham Veri Listesi>, <Yo\u011funluk Kullan- Mant\u0131ksal>, <Yo\u011funluk Ölçek Faktörü> (opsiyonel) ]
FromBase=Tabandan
FromBase.Syntax=[ "<Metin olarak Say\u0131>", <Taban> ]
Function=\u0130\u015flev
Function.Syntax=[ <Say\u0131 Listesi> ]\n[ <Fonksiyon>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri> ]
Function.Syntax3D=[ <Fonksiyon>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri> ]\n[ <\u0130fade>, <Parametre De\u011fi\u015fken 1>, <Ba\u015flang\u0131ç De\u011feri>, <Biti\u015f De\u011feri>, <Parametre De\u011fi\u015fken 2>, <Ba\u015flang\u0131ç De\u011feri>, <Biti\u015f De\u011feri> ]
GCD=EBOB
GCD.Syntax=[ <Say\u0131 Listesi> ]\n[ <Say\u0131>, <Say\u0131> ]
GCD.SyntaxCAS=[ <Say\u0131 Listesi> ]\n[ <Polinom Listesi> ]\n[ <Say\u0131>, <Say\u0131> ]\n[ <Polinom>, <Polinom> ]
Gamma.Syntax=[ <Alfa>, <Beta>, x ]\n[ <Alfa>, <Beta>, <De\u011fi\u015fken De\u011feri> ]\n[ <Alfa>, <Beta>, x, <Mant\u0131ksal- Y\u0131\u011f\u0131lma> ]
Gamma.SyntaxCAS=[ <Alfa>, <Beta>, <De\u011fi\u015fken De\u011feri> ]
GeometricMean=GeometrikOrta
GeometricMean.Syntax=[ <Say\u0131 Listesi> ]
GetTime=ZamanGöster
GetTime.Syntax=[ ]\n[ "<Biçim>" ]
Groebner.SyntaxCAS=[ <Polinom Listesi> ]\n[ <Polinom Listesi>, <De\u011fi\u015fken Listesi> ]\n[ <Polinom Listesi>, <De\u011fi\u015fken Listesi>, <De\u011fi\u015fken S\u0131ralama Tipi> ]
HarmonicMean=HarmonikOrta
HarmonicMean.Syntax=[ <Say\u0131 Listesi> ]
Height=Yükseklik
Height.Syntax=[ <Koni> ]\n[ <Silindir> ]\n[ <Çokyüzlü> ]
HideLayer=KatmanSakla
HideLayer.Syntax=[ <Say\u0131> ]
Histogram.Syntax=[ <S\u0131n\u0131f S\u0131n\u0131rlar\u0131 Listesi>, <Yükseklikler Listesi> ]\n[ <S\u0131n\u0131f S\u0131n\u0131rlar\u0131 Listesi>, <Ham Veri Listesi> ]
HistogramRight=HistogramSa\u011fda
HistogramRight.Syntax=[ <Aral\u0131k S\u0131n\u0131rlar\u0131 Listesi>, <Yükseklikler Listesi> ]\n[ <Aral\u0131k S\u0131n\u0131rlar\u0131 Listesi>, <Ham Veri Listesi>, <Yo\u011funluk Kullan>, <Yo\u011funluk Ölçek Faktörü (opsiyonel)> ]\n[ <Mant\u0131ksal- Y\u0131\u011f\u0131lma>, <Aral\u0131k S\u0131n\u0131rlar\u0131 Listesi>, <Ham Veri Listesi>, <Yo\u011funluk Kullan>, <Yo\u011funluk Ölçek Faktörü (opsiyonel)> ]
Hull=Zarf
Hull.Syntax=[ <Noktalar Listesi>, <Yüzdesi> ]
HyperGeometric=HiperGeometri
HyperGeometric.Syntax=[ <Nüfus Büyüklü\u011fü>, <Ba\u015far\u0131lar\u0131n Say\u0131s\u0131>, <Örneklem Büyüklü\u011fü> ]\n[ <Nüfus Büyüklü\u011fü>, <Ba\u015far\u0131lar\u0131n Say\u0131s\u0131>, <Örneklem Büyüklü\u011fü>, <Mant\u0131ksal-Y\u0131\u011f\u0131lma> ]\n[ <Nüfus Büyüklü\u011fü>, <Ba\u015far\u0131lar\u0131n Say\u0131s\u0131>, <Örneklem Büyüklü\u011fü>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal-Y\u0131\u011f\u0131lma> ]
HyperGeometric.SyntaxCAS=[ <Nüfus Büyüklü\u011fü>, <Ba\u015far\u0131lar\u0131n Say\u0131s\u0131>, <Örneklem Büyüklü\u011fü>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal-Y\u0131\u011f\u0131lma> ]
Hyperbola=Hiperbol
Hyperbola.Syntax=[ <Nokta>, <Nokta>, <Say\u0131> ]\n[ <Nokta>, <Nokta>, <Do\u011fru Parças\u0131> ]
IFactor=IFaktör
IFactor.Syntax=[ <Polinom> ]
IFactor.SyntaxCAS=[ <\u0130fade> ]\n[ <\u0130fade>, <De\u011fi\u015fken> ]
Icosahedron=Düzgün20Yüzlü
Icosahedron.Syntax=[ <Nokta>, <Nokta> ]\n[ <Nokta>, <Nokta>, <Yön> ]
Identity=Özde\u015flik
Identity.Syntax=[ <Say\u0131> ]
If=E\u011fer
If.Syntax=[ <\u015eart>, <Do\u011fruysa> ]\n[ <\u015eart>, <Do\u011fruysa>, <Do\u011fru De\u011filse> ]
ImplicitCurve=Kapal\u0131E\u011fri
ImplicitCurve.Syntax=[ <Noktalar Listesi> ]
ImplicitDerivative=Kapal\u0131Türev
ImplicitDerivative.SyntaxCAS=[ <f(x, y)> ]\n[ <\u0130fade>, <Ba\u011f\u0131ml\u0131 De\u011fi\u015fken>, <Ba\u011f\u0131ms\u0131z De\u011fi\u015fken> ]
Incircle=Çemberde
Incircle.Syntax=[ <Nokta>, <Nokta>, <Nokta> ]
IndexOf=Endeksi
IndexOf.Syntax=[ <Nesne>, <Liste> ]\n[ <Metin>, <Metin> ]\n[ <Nesnet>, <Liste>, <Ba\u015flang\u0131ç Endeksi> ]\n[ <Metin>, <Metin>, <Ba\u015flang\u0131ç Endeksi> ]
InfiniteCone=SonsuzKonik
InfiniteCone.Syntax=[ <Nokta>, <Vektör>, <Aç\u0131> ]\n[ <Nokta>, <Nokta>, <Aç\u0131> ]\n[ <Nokta>, <Do\u011fru>, <Aç\u0131> ]
InfiniteCylinder=SonsuzSilindir
InfiniteCylinder.Syntax=[ <Do\u011fru>, <Yar\u0131çap> ]\n[ <Nokta>, <Vektör>, <Yar\u0131çap> ]\n[ <Nokta>, <Nokta>, <Yar\u0131çap> ]
Insert=ArayaSok
Insert.Syntax=[ <Liste>, <Liste>, <Yer> ]\n[ <Nesne>, <Liste>, <Yer> ]
Integral=\u0130ntegral
Integral.Syntax=[ <\u0130\u015flev> ]\n[ <\u0130\u015flev>, <De\u011fi\u015fken>> ]\n[ <\u0130\u015flev>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri> ]\n[ <\u0130\u015flev>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri>, <Mant\u0131ksal De\u011ferlendirme> ]
Integral.SyntaxCAS=[ <Fonksion> ]\n[ <Fonksion>, <De\u011fi\u015fken> ]\n[ <Fonksion>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri> ]\n[ <Fonksion>, <De\u011fi\u015fken>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri> ]
IntegralBetween=Aras\u0131ndaki\u0130ntegral
IntegralBetween.Syntax=[ <Fonksiyon>, <Fonksiyon>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri> ]\n[ <Fonksiyon>, <Fonksiyon>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri>, <Mant\u0131ksal De\u011fer bulma> ]
IntegralBetween.SyntaxCAS=[ <Fonksiyon>, <Fonksiyon>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri> ]\n[ <Fonksiyon>, <Fonksiyon>, <De\u011fi\u015fken<, <Ba\u015flang\u0131ç De\u011feri>, <Biti\u015f De\u011feri> ]
Intersect=Kesi\u015ftir
Intersect.Syntax=[ <Nesne>, <Nesne> ]\n[ <Nesne>, <Nesne>, <Say\u0131> ]\n[ <Nesne>, <Nesne>, <Nokta> ]
Intersect.SyntaxCAS=[ <Fonksiyon>, <Fonksiyon> ]
IntersectPath=Yollar\u0131Kesi\u015ftir
IntersectPath.Syntax=[ <Do\u011fru>, <Çokgen> ]\n[ <Do\u011fru>, <Konik> ]
IntersectPath.Syntax3D=[ <Do\u011fru>, <Çokgen> ]\n[ <Do\u011fru>, <Konik> ]\n[ <Düzlem>, <Çokgen> ]\n[ <Düzlem>, <\u0130kinci dereceden> ]
IntersectRegion=BölgeyiKesi\u015ftir
IntersectRegion.Syntax=[ <Çokgen>, <Çokgen> ]
IntersectRegion.Syntax3D=[ <Çokgen>, <Çokgen> ]\n[ <Çokyüzlü>, <Düzlem> ]
Intersection=Kesi\u015fim
Intersection.Syntax=[ <Liste>, <Liste> ]
InverseBinomial=TersBinom
InverseBinomial.Syntax=[ <Deneme Say\u0131s\u0131>, <Olas\u0131l\u0131k Ba\u015far\u0131s\u0131>, <Olas\u0131l\u0131k> ]
InverseCauchy=TersCauchy
InverseCauchy.Syntax=[ <Medyan>, <Ölçek>, <Olas\u0131l\u0131k> ]
InverseChiSquared=TersKiKare
InverseChiSquared.Syntax=[ <Serbestlik Derecesi>, <Olas\u0131l\u0131k> ]
InverseExponential=TersÜstel
InverseExponential.Syntax=[ <Lamda>, <Olas\u0131l\u0131k> ]
InverseFDistribution=TersFDa\u011f\u0131l\u0131m\u0131
InverseFDistribution.Syntax=[ <Pay Serbestlik Derecesi>, <Payda Serbestlik Derecesi>, <Olas\u0131l\u0131k> ]
InverseGamma=TersGama
InverseGamma.Syntax=[ <Alfa>, <Beta>, <Olas\u0131l\u0131k> ]
InverseHyperGeometric=TersHiperGeometrik
InverseHyperGeometric.Syntax=[ <Nüfus Büyüklü\u011fü>, <Ba\u015far\u0131 Say\u0131s\u0131>, <Örneklem Büyüklü\u011fü>, <Olas\u0131l\u0131k> ]
InverseLogNormal=TersLogNormal
InverseLogNormal.Syntax=[ <Ortalama>, <Standart Sapma>, <Olas\u0131l\u0131k> ]
InverseLogistic=TersLojistik
InverseLogistic.Syntax=[ <Ortalama>, <Ölçek>, <Olas\u0131l\u0131k> ]
InverseNormal=TersNormal
InverseNormal.Syntax=[ <Ortalama>, <Standard Sapma>, <Olas\u0131l\u0131k> ]
InversePascal=TersPascal
InversePascal.Syntax=[ <Ba\u015far\u0131 Say\u0131s\u0131>, <Ba\u015far\u0131 Olas\u0131l\u0131\u011f\u0131>, <Olas\u0131l\u0131k> ]
InversePoisson=TersPoisson
InversePoisson.Syntax=[ <Ortalama>, <Olas\u0131l\u0131k> ]
InverseTDistribution=TersTDa\u011f\u0131l\u0131m\u0131
InverseTDistribution.Syntax=[ <Serbestlik Derecesi>, <Olas\u0131l\u0131k> ]
InverseWeibull=TersWeibull
InverseWeibull.Syntax=[ <\u015eekil>, <Ölçek>, <Olas\u0131l\u0131k> ]
InverseZipf=TersZipf
InverseZipf.Syntax=[ <Ö\u011fe Say\u0131s\u0131>, <Üs>, <Olas\u0131l\u0131k> ]
Invert=TersiniAl
Invert.Syntax=[ <Matris> ]\n[ <Fonksiyon> ]
IsInRegion=Bölgedemi
IsInRegion.Syntax=[ <Nokta>, <Bölge> ]
IsInteger=Tamsay\u0131m\u0131
IsInteger.Syntax=[ <Say\u0131> ]
IsPrime=Asalm\u0131
IsPrime.Syntax=[ <Say\u0131> ]
Iteration=Döngü
Iteration.Syntax=[ <\u0130\u015flev>, <ba\u015flang\u0131ç-de\u011fer>, <Say\u0131 n> ]
IterationList=DöngüListesi
IterationList.Syntax=[ <\u0130\u015flev>, <ba\u015flang\u0131ç-de\u011fer>, <Say\u0131 n> ]
Join=Birle\u015ftir
Join.Syntax=[ <Liste Listesi> ]\n[ <Liste>, <Liste>, ... ]
KeepIf=Do\u011fruysaTut
KeepIf.Syntax=[ <\u015eart>, <Liste> ]\n[ <\u015eart>, <De\u011fi\u015fken>, <Liste> ]
LCM=EKOK
LCM.Syntax=[ <Say\u0131 Listesi> ]\n[ <Say\u0131>, <Say\u0131> ]
LCM.SyntaxCAS=[ <Say\u0131 Listesi> ]\n[ <Polinom Listesi> ]\n[ <Say\u0131>, <Say\u0131> ]\n[ <Polinom>, <Polinom> ]
LaTeX=LaTeX
LaTeX.Syntax=[ <Nesne> ]\n[ <Nesne>, <De\u011fi\u015fkenlerin de\u011fi\u015ftirilmesi için do\u011fru yanl\u0131\u015f s\u0131nama de\u011feri> ]
Last=Son
Last.Syntax=[ <Liste> ]\n[ <Liste>, <Ö\u011fe Say\u0131s\u0131> ]
Last.SyntaxCAS=[ <Liste> ]\n[ <Liste>, <Ö\u011fe Say\u0131s\u0131> ]
LeftSide=SolTaraf
LeftSide.Syntax=[ <Denklem> ]
LeftSide.SyntaxCAS=[ <Denklem> ]\n[ <Denklem Listesi> ]\n[ <Denklem Listesi>, <\u0130ndis> ]
LeftSum=SolToplam
LeftSum.Syntax=[ <\u0130\u015flev>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri>, <Dikdörtgen Say\u0131s\u0131> ]
Length=Uzunluk
Length.Syntax=[ <Vektör> ]\n[ <Nokta> ]\n[ <Metin> ]\n[ <Yertan\u0131m> ]\n[ <\u0130\u015flev>, <Say\u0131>, <Say\u0131> ]\n[ <\u0130\u015flev>, <Nokta>, <Nokta> ]\n[ <E\u011fri>, <Say\u0131>, <Say\u0131> ]\n[ <E\u011fri>, <Nokta>, <Nokta> ]
Length.SyntaxCAS=[ <\u0130\u015flev>, <x-ba\u015flang\u0131ç>, <x-biti\u015f> ]\n[ <E\u011fri>, <x-ba\u015flang\u0131ç>, <x-biti\u015f> ]\n[ <\u0130\u015flev>, <De\u011fi\u015fken>, <Ba\u015flang\u0131ç Noktas\u0131>, <Biti\u015f Noktas\u0131> ]\n[ <E\u011fri>, <De\u011fi\u015fken>, <Ba\u015flang\u0131ç Noktas\u0131>, <Biti\u015f Noktas\u0131> ]
LetterToUnicode=HarfdenUniCode
LetterToUnicode.Syntax=[ <Metin> ]
Limit.Syntax=[ <\u0130\u015flev>, <Say\u0131> ]
Limit.SyntaxCAS=[ <\u0130fade>, <De\u011fi\u015fken>, <De\u011fer> ]
LimitAbove=ÜsttenLimit
LimitAbove.Syntax=[ <\u0130\u015flev>, <De\u011fer> ]
LimitAbove.SyntaxCAS=[ <\u0130fade>, <De\u011fi\u015fken>, <De\u011fer> ]
LimitBelow=AlttanLimit
LimitBelow.Syntax=[ <\u0130\u015flev>, <De\u011fer> ]
LimitBelow.SyntaxCAS=[ <\u0130fade>, <De\u011fi\u015fken>, <De\u011fer> ]
Line=Do\u011fru
Line.Syntax=[ <Nokta>, <Nokta> ]\n[ <Nokta>, <Do\u011fru> ]\n[ <Nokta>, <Vektör> ]
LineBisector=KenarDikmeOrtay
LineBisector.Syntax=[ <Do\u011fru Parças\u0131> ]\n[ <Nokta>, <Nokta> ]
Locus=Yertan\u0131m
Locus.Syntax=[ <Yer tan\u0131m do\u011frusu olu\u015fturan nokta>, <Nokta> ]\n[ <Yer tan\u0131m do\u011frusu olu\u015fturan nokta>, <Kayd\u0131raç> ]\n[ <E\u011fim sahas\u0131>, <Nokta> ]\n[ <f(x, y)>, <Nokta> ]
LocusEquation=YerTan\u0131mDenklemi
LocusEquation.Syntax=[ <YerTan\u0131m> ]\n[ <YerTan\u0131m Noktas\u0131>, <Hareket eden Nokta> ]
LogNormal.Syntax=[ <Ortalama>, <Standart Sapma>, x ]\n[ <Ortalama>, <Standart Sapma>, <De\u011fi\u015fken De\u011feri> ]\n[ <Ortalama>, <Standart Sapma>, x, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
Logistic=Lojistik
Logistic.Syntax=[ <Ortalama>, <Ölçek>, x ]\n[ <Ortalama>, <Ölçek>, <De\u011fi\u015fken De\u011feri> ]\n[ <Ortalama>, <Ölçek>, x, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
LowerSum=AltToplam
LowerSum.Syntax=[ <\u0130\u015flev>, <Say\u0131>, <Say\u0131>, <Say\u0131> ]
MatrixPlot=MatrisÇizim
MatrixRank=MatrisRank
MatrixRank.Syntax=[ <Matris> ]
Max=EnBüyük
Max.Syntax=[ <Aral\u0131k> ]\n[ <Liste> ]\n[ <Say\u0131>, <Say\u0131> ]\n[ <Veri Listesi>, <Frekans Listesi> ]\n[ <\u0130\u015flev>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri> ]
Max.SyntaxCAS=[ <Liste> ]\n[ <Say\u0131>, <Say\u0131> ]
Maximize=EnBüyü\u011fünüAl
Maximize.Syntax=[ <Ba\u011f\u0131ml\u0131 Sya\u0131s\u0131>, <Serbest Say\u0131s\u0131> ]
Mean=Ortalama
Mean.Syntax=[ <Ham Veri Listesi> ]\n[ <Say\u0131 Listesi>, <Frekans Listesi> ]
Mean.SyntaxCAS=[ <Say\u0131 Listesi> ]
MeanX=OrtalamaX
MeanX.Syntax=[ <Nokta Listesi> ]
MeanY=OrtalamaY
MeanY.Syntax=[ <Nokta Listesi> ]
Median=Ortanca
Median.Syntax=[ <Ham Veri Listesi> ]\n[ <Say\u0131 Listesi>, <Frekans Listesi> ]
Median.SyntaxCAS=[ <Say\u0131 Listesi> ]
Midpoint=OrtaNokta
Midpoint.Syntax=[ <Do\u011fru Parças\u0131> ]\n[ <Konik> ]\n[ <Nokta>, <Nokta> ]
Min=EnKüçük
Min.Syntax=[ <Aral\u0131k> ]\n[ <Liste> ]\n[ <Say\u0131>, <Say\u0131> ]\n[ <Veri Listesi>, <Frekans Listesi> ]\n[ <\u0130\u015flev>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri> ]
Min.SyntaxCAS=[ <Liste> ]\n[ <Say\u0131>, <Say\u0131> ]
Minimize=EnKüçü\u011fünüAl
Minimize.Syntax=[ <Ba\u011f\u0131ml\u0131 Say\u0131s\u0131>, <Serbest Say\u0131s\u0131> ]
MinimumSpanningTree=EnKüçükDolanmaA\u011fac\u0131
MinimumSpanningTree.Syntax=[ <Nokta Listesi> ]
Mirror=Yans\u0131ma
Mirror.Syntax=[ <Nokta>, <Nokta> ]\n[ <Do\u011fru>, <Nokta> ]\n[ <Konik>, <Nokta> ]\n[ <Çokgen>, <Nokta> ]\n[ <Resim>, <Nokta> ]\n[ <Nokta>, <Do\u011fru> ]\n[ <Do\u011fru>, <Do\u011fru> ]\n[ <Konik>, <Do\u011fru> ]\n[ <Çokgen>, <Do\u011fru> ]\n[ <Resim>, <Do\u011fru> ]\n[ <Nokta>, <Çember> ]
Mirror.Syntax3D=[ <Nesne>, <Nokta> ]\n[ <Nesne>, <Do\u011fru> ]\n[ <Nesne>, <Düzlem> ]\n[ <Nesne>, <Çember> ]
MixedNumber=TamKesir
MixedNumber.SyntaxCAS=[ <\u0130fade> ]
Mod=Kalan
Mod.Syntax=[ <Say\u0131>, <Say\u0131> ]
Mode=Mod
Mode.Syntax=[ <Say\u0131 Listesi> ]
NIntegral=S\u0130ntegral
NIntegral.SyntaxCAS=[ <\u0130\u015flev>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri> ]\n[ <\u0130\u015flev>, <De\u011fi\u015fken>, <Ba\u015flang\u0131ç de\u011fi\u015fken-De\u011feri>, <Biti\u015f de\u011fi\u015fken-De\u011feri> ]
NSolutions=SÇözümler
NSolutions.SyntaxCAS=[ <Denklem> ]
NSolve=SÇözüm
NSolve.SyntaxCAS=[ <Denklem> ]\n[ <Denklem>, <de\u011fi\u015fken> ]\n[ <Denklem>, <de\u011fi\u015fken=ba\u015flang\u0131ç de\u011feri> ]\n[ <Denklem Listesi>, <de\u011fi\u015fken listesi> ]
NSolveODE=NÇözODE
NSolveODE.Syntax=[ <Türev Listesi>, <Ba\u015flang\u0131ç x-koordinat\u0131>, <Ba\u015flang\u0131ç y-koordinat listesi>, <Son x-koordinat\u0131> ]
Name=Ad
Name.Syntax=[ <Nesne> ]
NextPrime=SonrakiAsal
NextPrime.Syntax=[ <Say\u0131> ]
Normal.Syntax=[ <Ortalama>, <Standard Sapma>, <De\u011fi\u015fken De\u011feri> ]
Normal.SyntaxCAS=[ <Ortalama>, <Standart Sapma>, <De\u011fi\u015fken De\u011feri> ]
NormalQuantilePlot=NormalS\u0131kl\u0131kÇizim
NormalQuantilePlot.Syntax=[ <Veri Listesi> ]
Numerator=Pay
Numerator.Syntax=[ <\u0130\u015flev> ]
Numerator.SyntaxCAS=[ <\u0130fade> ]
Numeric=Say\u0131sal
Numeric.SyntaxCAS=[ <\u0130fade> ]\n[ <\u0130fade>, <hassas basamak say\u0131s\u0131> ]
Object=Nesne
Object.Syntax=[ <Nesnenin Metin olarak Ad\u0131> ]
Octahedron=SekizYüzlü
Octahedron.Syntax=[ <Nokta>, <Nokta> ]\n[ <Nokta>, <Nokta>, <Yön> ]
Ordinal=S\u0131rasal
Ordinal.Syntax=[ <Tamsay\u0131> ]
OrdinalRank=S\u0131rasalRank
OrdinalRank.Syntax=[ <Liste> ]
OrthogonalLine=DikDo\u011fru
OrthogonalLine.Syntax=[ <Nokta>, <Do\u011fru> ]\n[ <Nokta>, <Vektör> ]
OrthogonalLine.Syntax3D=[ <Nokta>, <Do\u011fru> ]\n[ <Nokta>, <Do\u011fru Parças\u0131> ]\n[ <Nokta>, <Vektör> ]\n[ <Nokta>, <Düzlem> ]\n[ <Do\u011fru>, <Do\u011fru> ]\n[ <Nokta>, <Do\u011fru>, <Do\u011fru> ]\n[ <Nokta>, <Vektör>, <Vektör> ]\n[ <Nokta>, <Do\u011fru>, <Ba\u011flam> ]
OrthogonalVector=DikVektör
OrthogonalVector.Syntax=[ <Do\u011fru> ]\n[ <Vektör> ]
OrthogonalVector.SyntaxCAS=[ <Vektör> ]
OsculatingCircle=Yap\u0131\u015f\u0131kÇember
OsculatingCircle.Syntax=[ <Nokta>, <\u0130\u015flev> ]\n[ <Nokta>, <E\u011fri> ]
PMCC=PMCC
PMCC.Syntax=[ <Nokta Listesi> ]\n[ <x Koordinat Listesi>, <y Koordinat Listesi> ]
Pan=Yüz
Parabola=Parabol
Parabola.Syntax=[ <Nokta>, <Do\u011fru> ]
Parameter=Parametre
Parameter.Syntax=[ <Konik> ]
ParametricDerivative=ParametrikTürev
ParametricDerivative.Syntax=[ <E\u011fri> ]
ParseToFunction=\u0130\u015fleveDöndür
ParseToFunction.Syntax=[ <\u0130\u015flev>, <Metin> ]
ParseToNumber=Say\u0131yaDöndür
ParseToNumber.Syntax=[ <Say\u0131>, <Metin> ]
PartialFractions=K\u0131smiKesirler
PartialFractions.Syntax=[ <\u0130\u015flev> ]
PartialFractions.SyntaxCAS=[ <Fonksiyon> ]\n[ <Fonksiyon>, <De\u011fi\u015fken> ]
Pascal.Syntax=[ <Ba\u015far\u0131 Say\u0131s\u0131>, <Ba\u015far\u0131 Olas\u0131l\u0131\u011f\u0131> ]\n[ <Ba\u015far\u0131 Say\u0131s\u0131>, <Ba\u015far\u0131 Olas\u0131l\u0131\u011f\u0131>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]\n[ <Ba\u015far\u0131 Say\u0131s\u0131>, <Ba\u015far\u0131 Olas\u0131l\u0131\u011f\u0131>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
Pascal.SyntaxCAS=[ <Ba\u015far\u0131 Say\u0131s\u0131>, <Ba\u015far\u0131 Olas\u0131l\u0131\u011f\u0131>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
PathParameter=YolParametresi
PathParameter.Syntax=[ <Yoldaki Nokta> ]
Percentile=Yüzdelik
Percentile.Syntax=[ <Say\u0131 Listesi>, <Yüzde> ]
Perimeter=Çevre
Perimeter.Syntax=[ <Çokgen> ]\n[ <Konik> ]
PerpendicularPlane=DikDüzlem
PerpendicularPlane.Syntax=[ <Nokta>, <Do\u011fru> ]\n[ <Nokta>, <Vektör> ]
Plane=Düzlem
Plane.Syntax=[ <Nokta>, <Düzlem> ]\n[ <Nokta>, <Do\u011fru> ]\n[ <Nokta>, <Nokta>, <Nokta> ]
PlaneBisector=DüzlemDikme
PlaySound=SesÇal
PlaySound.Syntax=[ <Dosya> ]\n[ <Mant\u0131ksal Çal> ]\n[ <Note Sequence>, <Çalg\u0131> ]\n[ <Note>, <Süre>, <Çalg\u0131> ]\n[ <\u0130\u015flev>, <Min De\u011fer>, <Max De\u011fer> ]\n[ <\u0130\u015flev>, <Min De\u011fer>, <Max De\u011fer>, <Örnek H\u0131z>, <Örnek Derinlik> ]
Point=Nokta
Point.Syntax=[ <Do\u011fru> ]\n[ <Konik> ]\n[ <\u0130\u015flev> ]\n[ <Vektör> ]\n[ <Nokta>, <Vektör> ]
PointIn=Nokta\u0130çinde
PointIn.Syntax=[ <Bölge> ]
PointList=NoktaListesi
PointList.Syntax=[ <Liste> ]
Poisson.Syntax=[ <Ortalama> ]\n[ <Ortalama>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]\n[ <Ortalama>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
Poisson.SyntaxCAS=[ <Ortalama>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
Polar=Kutupsal
Polar.Syntax=[ <Nokta>, <Konik> ]
PolyLine=ÇokluDo\u011fru
PolyLine.Syntax=[ <Nokta Listesi> ]\n[ <Nokta>, ..., <Nokta> ]
Polygon=Çokgen
Polygon.Syntax=[ <Nokta>, ..., <Nokta> ]\n[ <Nokta>, <Nokta>, <Say\u0131> ]
Polyhedron=ÇokYüzlü
Polyhedron.Syntax=[ <Nokta>, <Nokta>, ... ]
Polynomial=Polinom
Polynomial.Syntax=[ <\u0130\u015flev> ]
Polynomial.SyntaxCAS=[ <\u0130\u015flev> ]\n[ <\u0130\u015flev>, <De\u011fi\u015fken> ]
PreviousPrime=ÖncekiAsal
PreviousPrime.Syntax=[ <Say\u0131> ]
PrimeFactors=AsalÇarpanlar
PrimeFactors.Syntax=[ <Say\u0131> ]
Prism=Prizma
Prism.Syntax=[ <Çokgen>, <Nokta> ]\n[ <Çokgen>, <Yükseklik de\u011feri> ]\n[ <Nokta>, <Nokta>, ... ]
Product=Çarp\u0131m
Product.Syntax=[ <Ham Veri Listesi> ]\n[ <Say\u0131 Listesi>, <Ö\u011fe Listesi> ]\n[ <Say\u0131 Listesi>, <Frekans Listesi> ]
Product.SyntaxCAS=[ <\u0130fade Listesi> ]\n[ <\u0130fade>, <De\u011fi\u015fken>, <Ba\u015flang\u0131ç indisi>, <Biti\u015f indisi> ]
Prove=\u0130spatla
Prove.Syntax=[ <Mant\u0131ksal \u0130fade> ]
ProveDetails=Ayr\u0131nt\u0131l\u0131\u0130spatla
ProveDetails.Syntax=[ <Mant\u0131ksal \u0130fade> ]
Pyramid=Piramit
Pyramid.Syntax=[ <Çokgen>, <Nokta> ]\n[ <Çokgen>, <Yükseklik> ]\n[ <Nokta>, <Nokta>, <Nokta>, <Nokta>, ... ]
Q1.Syntax=[ <Ham Veri Listesi> ]\n[ <Say\u0131 Listesi>, <Frekans Listesi> ]
Q3.Syntax=[ <Ham Veri Listesi> ]\n[ <Say\u0131 Listesi>, <Frekans Listesi> ]
QuadricSide=Kenar
QuadricSide.Syntax=[ <\u0130kinci Dereceden> ]
RSquare=RKare
RSquare.Syntax=[ <Nokta Listesi>, <\u0130\u015flev> ]
Radius=Yar\u0131çap
Radius.Syntax=[ <Konik> ]
Random=Rastgele
Random.Syntax=[ <Minimum Tam say\u0131>, <Maksimum Tam say\u0131> ]\n[ <Minimum Tam say\u0131>, <Maksimum Tam say\u0131>, <Mant\u0131ksal Sabit> ]
Random.SyntaxCAS=[ <Minimum Tam say\u0131>, <Maksimum Tam say\u0131> ]
RandomBinomial=RastgeleBinom
RandomBinomial.Syntax=[ <Deneme Say\u0131s\u0131>, <Olas\u0131l\u0131k> ]
RandomElement=RastgeleÖ\u011fe
RandomElement.Syntax=[ <Liste> ]
RandomNormal=RastgeleNormal
RandomNormal.Syntax=[ <Ortalama>, <Standard Sapma> ]
RandomPoisson=RastgelePoisson
RandomPoisson.Syntax=[ <Ortalama> ]
RandomPolynomial=RastgelePolinom
RandomPolynomial.Syntax=[ <Derece>, <Katsay\u0131lar için minimum>, <Katsay\u0131lar için maksimum> ]
RandomPolynomial.SyntaxCAS=[ <Derece>, <Minimum for Coefficients>, <Maximum for Coefficients> ]\n[ <De\u011fi\u015fken>, <Derece>, <Minimum for Coefficients>, <Maximum for Coefficients> ]
RandomUniform=RastgeleTekDüze
Rationalize=RasyonelYap
Rationalize.SyntaxCAS=[ <Say\u0131> ]
Ray=I\u015f\u0131n
Ray.Syntax=[ <Nokta>, <Nokta> ]\n[ <Nokta>, <Vektör> ]
RectangleSum=DikdörtgenToplam
RectangleSum.Syntax=[ <\u0130\u015flev>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri>, <Dikdörtgen Say\u0131s\u0131>, <Dikdörtgen ga\u015flang\u0131ç pozisyonu> ]
ReducedRowEchelonForm=\u0130ndirgenmi\u015fSat\u0131rE\u015felonBiçimi
ReducedRowEchelonForm.Syntax=[ <Matris> ]
Relation=Ba\u011f\u0131nt\u0131
Relation.Syntax=[ <Nesne>, <Nesne> ]
RemoveUndefined=Tan\u0131ms\u0131zsaKald\u0131r
RemoveUndefined.Syntax=[ <Liste> ]
Rename=Ad\u0131n\u0131De\u011fi\u015ftir
Rename.Syntax=[ <Nesne>, <Ad> ]
ResidualPlot=Art\u0131kÇizim
ResidualPlot.Syntax=[ <Nokta Listesi>, <\u0130\u015flev> ]
Reverse=TersineHareket
Reverse.Syntax=[ <Liste> ]
RightSide=Sa\u011fTaraf
RightSide.Syntax=[ <Denklem> ]
RightSide.SyntaxCAS=[ <Denklem> ]\n[ <Denklem Listesi> ]\n[ <Denklem Listesi>, <\u0130ndis> ]
RigidPolygon=BükülmezÇokgen
RigidPolygon.Syntax=[ <Çokgen> ]\n[ <Çokgen>, <Ba\u015flang\u0131ç x>, <Ba\u015flang\u0131ç y> ]\n[ <Serbest Nokta>, ..., <Serbest Nokta> ]
Root=Kök
Root.Syntax=[ <Polinom> ]\n[ <\u0130\u015flev>, <Say\u0131> ]\n[ <\u0130\u015flev>, <Say\u0131>, <Say\u0131> ]
Root.SyntaxCAS=[ <Polinom> ]
RootList=KökListesi
RootList.Syntax=[ <Liste> ]
RootMeanSquare=KökOrtalamaKare
RootMeanSquare.Syntax=[ <Say\u0131 Listesi> ]
Roots=Kökler
Roots.Syntax=[ <\u0130\u015flev>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri> ]
Rotate=Döndür
Rotate.Syntax=[ <Nokta>, <Aç\u0131> ]\n[ <Vektör>, <Aç\u0131> ]\n[ <Do\u011fru>, <Aç\u0131> ]\n[ <Konik>, <Aç\u0131> ]\n[ <Çokgen>, <Aç\u0131> ]\n[ <Resim>, <Aç\u0131> ]\n[ <Nokta>, <Aç\u0131>, <Nokta> ]\n[ <Do\u011fru>, <Aç\u0131>, <Nokta> ]\n[ <Konik>, <Aç\u0131>, <Nokta> ]\n[ <Çokgen>, <Aç\u0131>, <Nokta> ]\n[ <Resim>, <Aç\u0131>, <Nokta> ]
Rotate.Syntax3D=[ <Nesne>, <Aç\u0131> ]\n[ <Nesne>, <Aç\u0131>, <Nokta> ]\n[ <Nesne>, <Aç\u0131>, <Dönme Ekseni> ]\n[ <Nesne>, <Aç\u0131>, <Eksendeki Nokta>, <Eksen Yönü veya Düzlem> ]
RotateText=MetniDöndür
RotateText.Syntax=[ <Metin>, <Aç\u0131> ]
Row=Sat\u0131r
Row.Syntax=[ <Hücre> ]
RunClickScript=T\u0131klamabeti\u011fiÇal\u0131\u015ft\u0131r
RunClickScript.Syntax=[ <Nesne> ]
RunUpdateScript=GüncellemeBeti\u011fiÇal\u0131\u015ft\u0131r
RunUpdateScript.Syntax=[ <Nesne> ]
SD=SS
SD.Syntax=[ <Ham Veri Listesi> ]\n[ <Say\u0131 Listesi>, <Frekans Listesi> ]
SDX=SSX
SDX.Syntax=[ <Say\u0131 Listesi> ]
SDY=SSY
SDY.Syntax=[ <Say\u0131 Listesi> ]
SXX=SXX
SXX.Syntax=[ <Nokta Listesi> ]\n[ <Say\u0131 Listesi>, <Say\u0131 Listesi> ]
SXY=SXY
SXY.Syntax=[ <Nokta Listesi> ]\n[ <Say\u0131 Listesi>, <Say\u0131 Listesi> ]
SYY=SYY
SYY.Syntax=[ <Nokta Listesi> ]\n[ <Say\u0131 Listesi>, <Say\u0131 Listesi> ]
Sample=Örneklem
Sample.Syntax=[ <Liste>, <Büyüklük> ]\n[ <Liste>, <Büyüklük>, <De\u011fi\u015fiklikler ile> ]
SampleSD=ÖrneklemSS
SampleSD.Syntax=[ <Ham Veri Listesi> ]\n[ <Say\u0131 Listesi>, <Frekans Listesi> ]
SampleSD.SyntaxCAS=[ <Say\u0131 Listesi> ]
SampleSDX=ÖrneklemSSX
SampleSDX.Syntax=[ <Nokta Listesi> ]
SampleSDY=ÖrneklemSSY
SampleSDY.Syntax=[ <Nokta Listesi> ]
SampleVariance=ÖrneklemVaryans
SampleVariance.Syntax=[ <Ham Veri Listesi> ]\n[ <Say\u0131 Listesi>, <Frekans Listesi> ]
SampleVariance.SyntaxCAS=[ <Say\u0131 Listesi> ]
ScientificText=BilimselMetin
ScientificText.Syntax=[ <Say\u0131> ]\n[ <Say\u0131>, <Duyarl\u0131l\u0131k> ]
SecondAxis=\u0130kinciEksen
SecondAxis.Syntax=[ <Konik> ]
SecondAxisLength=\u0130kinciEksenUzunlu\u011fu
SecondAxisLength.Syntax=[ <Konik> ]
Sector=Dilim
Sector.Syntax=[ <Konik>, <Nokta>, <Nokta> ]\n[ <Konik>, <Say\u0131>, <Say\u0131> ]
Segment=Do\u011fruParças\u0131
Segment.Syntax=[ <Nokta>, <Nokta> ]\n[ <Nokta>, <Say\u0131> ]
SelectObjects=NesneleriSeç
SelectObjects.Syntax=[ ]\n[ <Nesne>, <Nesne>, ... ]
SelectedElement=SeçiliÖ\u011fe
SelectedElement.Syntax=[ <Liste> ]
SelectedIndex=SeçiliEndeks
SelectedIndex.Syntax=[ <Liste> ]
Semicircle=Yar\u0131mÇember
Semicircle.Syntax=[ <Nokta>, <Nokta> ]
Sequence=Dizi
Sequence.Syntax=[ <ifade>, <de\u011fi\u015fken>, <ba\u015flang\u0131ç>, <biti\u015f> ]\n[ <ifade>, <de\u011fi\u015fken>, <ba\u015flang\u0131ç>, <biti\u015f>, <art\u0131\u015f> ]
SetActiveView=EtkinGörünümAyarla
SetActiveView.Syntax=[ <Görünüm No 1|2> ]
SetAxesRatio=EksenOranAyarla
SetAxesRatio.Syntax=[ <Say\u0131>, <Say\u0131> ]
SetAxesRatio.Syntax3D=[ <Say\u0131>, <Say\u0131> ]\n[ <Say\u0131>, <Say\u0131>, <Say\u0131> ]
SetBackgroundColor=ArkaplanRengiAyarla
SetBackgroundColor.Syntax=[ <Nesne>, "<Renk>" ]\n[ <Nesne>, <K\u0131rm\u0131z\u0131>, <Ye\u015fil>, <Mavi> ]
SetCaption=Ba\u015fl\u0131kAyarla
SetCaption.Syntax=[ <Nesne>, <Metin> ]
SetColor=RenkAyarla
SetColor.Syntax=[ <Nesne>, "<Renk>" ]\n[ <Nesne>, <K\u0131rm\u0131z\u0131>, <Ye\u015fil>, <Mavi> ]
SetConditionToShowObject=NesneyiGösterme\u015eart\u0131Ayarla
SetConditionToShowObject.Syntax=[ <Nesne>, <\u015eart> ]
SetCoords=KoordinatAyarla
SetCoords.Syntax=[ <Nokta>, <x>, <y> ]
SetDynamicColor=DinamikRenkAyarla
SetDynamicColor.Syntax=[ <Nesne>, <K\u0131rm\u0131z\u0131>, <Ye\u015fil>, <Mavi> ]
SetFilling=DolguAyarla
SetFilling.Syntax=[ <Nesne>, <Say\u0131> ]
SetFixed=Sabitle
SetFixed.Syntax=[ <Nesne>, <do\u011fru | yanl\u0131\u015f> ]
SetLabelMode=EtiketModuAyarla
SetLabelMode.Syntax=[ <Nesne>, <Say\u0131> ]
SetLayer=KatmanAyarla
SetLayer.Syntax=[ <Nesne>, <Katman> ]
SetLineStyle=Do\u011fruSitiliAyarla
SetLineStyle.Syntax=[ <Do\u011fru>, <Say\u0131> ]
SetLineThickness=Do\u011fruKal\u0131nl\u0131kAyarla
SetLineThickness.Syntax=[ <Do\u011fru>, <Say\u0131> ]
SetPointSize=NoktaBüyüklükAyarla
SetPointSize.Syntax=[ <Nokta>, <Say\u0131> ]
SetPointStyle=NoktaSitiliAyarla
SetPointStyle.Syntax=[ <Nokta>, <Say\u0131> ]
SetSeed=TohumAyarla
SetSeed.Syntax=[ <Tamsay\u0131> ]
SetTooltipMode=Araç\u0130pucuDurumuAyarla
SetTooltipMode.Syntax=[ <Nesne>, <Say\u0131> ]
SetTrace=\u0130zAyarla
SetTrace.Syntax=[ <Nesne>, <do\u011fru | yanl\u0131\u015f> ]
SetValue=De\u011feriVer
SetValue.Syntax=[ <Mant\u0131ksal>, <0|1> ]\n[ <Nesne>, <Nesne> ]\n[ <Liste>, <Say\u0131>, <Nesne> ]
SetViewDirection=GörünümYönAyarla
SetViewDirection.Syntax=[ <Yön> ]
SetVisibleInView=GörünebilirlikAyarla
SetVisibleInView.Syntax=[ <Nesne>, <Görünüm No 1|2>, <Mant\u0131ksal> ]
Shear=Kayk\u0131l
Shear.Syntax=[ <Nesne>, <Do\u011fru>, <Oran> ]
ShortestDistance=EnK\u0131saMesafe
ShortestDistance.Syntax=[ <Yol>, <Nokta> ]\n[ <Do\u011fru Parças\u0131 Listesi>, <Ba\u015flang\u0131ç Noktas\u0131>, <Biti\u015f Noktas\u0131>, <Boolean A\u011f\u0131rl\u0131\u011f\u0131> ]
ShowAxes=EksenleriGöster
ShowAxes.Syntax=[ ]\n[ <Mant\u0131ksal> ]\n[ <Görünüm>, <Mant\u0131ksal> ]
ShowGrid=GridGöster
ShowGrid.Syntax=[ ]\n[ <Mant\u0131ksal> ]\n[ <Görünüm>, <Mant\u0131ksal> ]
ShowLabel=EtiketGöster
ShowLabel.Syntax=[ <Nesne>, <Mant\u0131ksal> ]
ShowLayer=KatmanGöster
ShowLayer.Syntax=[ <Say\u0131> ]
Shuffle=Kar\u0131\u015ft\u0131r
Shuffle.Syntax=[ <Liste> ]
SigmaXX.Syntax=[ <Nokta Listesi> ]\n[ <Ham Veri Listesi> ]\n[ <Say\u0131 Listesi>, <Frekans Listesi> ]
SigmaXY.Syntax=[ <Nokta Listesi> ]\n[ <x-Koordinat Listesi>, <y-Koordinat Listesi> ]
SigmaYY.Syntax=[ <Nokta Listesi> ]
Simplify=Sadele\u015ftir
Simplify.Syntax=[ <\u0130\u015flev> ]
Simplify.SyntaxCAS=[ <\u0130\u015flev> ]
Slider=Sürgü
Slider.Syntax=[ <En küçük>, <En büyük>, <Art\u0131\u015f>, <H\u0131z>, <Geni\u015flik>, <Aç\u0131 m\u0131>, <Yatay>, <Hareketli>, <Rastgele> ]
Slope=E\u011fim
Slope.Syntax=[ <Do\u011fru> ]\n[ <\u0130\u015flev> ]
SlopeField=E\u011fimSahas\u0131
SlopeField.Syntax=[ <f(x, y)> ]\n[ <f(x, y)>, <Say\u0131 n> ]\n[ <f(x, y)>, <Say\u0131 n>, <Uzunluk Çarpan a> ]\n[ <f(x, y)>, <Say\u0131 n>, <Uzunluk Çarpan a>, <Min x>, <Min y>, <Max x>, <Max y> ]
SlowPlot=Yava\u015fÇizim
SlowPlot.Syntax=[ <\u0130\u015flev> ]
Solutions=Çözümler
Solutions.SyntaxCAS=[ <Denklem> ]\n[ <Denklem>, <De\u011fi\u015fken> ]
Solve=Çöz
Solve.SyntaxCAS=[ <x cinsinden Denklem> ]\n[ <Denklem>, <De\u011fi\u015fken> ]\n[ <Denklem Listesi>, <De\u011fi\u015fken Listesi> ]
SolveODE=ÇözDD
SolveODE.Syntax=[ <f'(x, y)> ]\n[ <f'(x, y)>, <f üzerindeki Nokta> ]\n[ <f'(x, y)>, <Ba\u015flang\u0131ç x>, <Ba\u015flang\u0131ç y>, <Biti\u015f x>, <Ad\u0131m> ]\n[ <y'>, <x'>, <Ba\u015flang\u0131ç x>, <Ba\u015flang\u0131ç y>, <Biti\u015f t>, <Ad\u0131m> ]\n[ <b(x)>, <c(x)>, <f(x)>, <Ba\u015flang\u0131ç x>, <Ba\u015flang\u0131ç y>, <Ba\u015flang\u0131ç y'>, <Biti\u015f x>, <Ad\u0131m> ]
SolveODE.SyntaxCAS=[ <Denklem> ]\n[ <Denklem>, <f üzerindeki nokta(lar)> ]\n[ <Denklem>, <f üzerindeki nokta(lar)>, <f üzerindeki nokta(lar)> ]\n[ <Denklem>, <Ba\u011f\u0131ml\u0131 de\u011fi\u015fken>, <Ba\u011f\u0131ms\u0131z de\u011fi\u015fken>, <f üzerindeki nokta(lar)> ]\n[ <Denklem>, <Ba\u011f\u0131ml\u0131 de\u011fi\u015fken>, <Ba\u011f\u0131ms\u0131z de\u011fi\u015fken>, <f üzerindeki nokta(lar)>, <f üzerindeki nokta(lar)> ]
Sort=S\u0131rala
Sort.Syntax=[ <Liste> ]\n[ <De\u011ferler>, <Anahtarlar> ]
Spearman.Syntax=[ <Nokta Listesi> ]\n[ <Say\u0131 Listesi>, <Say\u0131 Listesi> ]
Sphere=Küre
Sphere.Syntax=[ <Nokta>, <Yar\u0131çap> ]
Spline=Çubuk
Spline.Syntax=[ <Nokta Listesi> ]\n[ <Nokta Listesi>, <S\u0131ra \u2265 3> ]
StartAnimation=AnimasyonBa\u015flat
StartAnimation.Syntax=[ ]\n[ <Mant\u0131ksal> ]\n[ <Kayd\u0131raç veya Nokta>, <Kayd\u0131raç veya Nokta>, ... ]\n[ <Kayd\u0131raç veya Nokta>, <Kayd\u0131raç veya Nokta>, ..., <Mant\u0131ksal> ]
StemPlot=GövdeÇizim
StemPlot.Syntax=[ <Liste> ]\n[ <Liste>, <Düzenleme -1|0|1> ]
StepGraph=GrafikAd\u0131m\u0131
StepGraph.Syntax=[ <Nokta Listesi> ]\n[ <Nokta Listesi>, <Mant\u0131ksal Birle\u015fim> ]\n[ <x-coordinat Listesi>, <y-coordinat Listesi> ]\n[ <Nokta Listesi>, <Mant\u0131ksal Birle\u015fim>, <Nokta sitili> ]\n[ <x-coordinat Listesi>, <y-coordinat Listesi>, <Mant\u0131ksal Birle\u015fim> ]\n[ <x-coordinat Listesi>, <y-coordinat Listesi>, <Mant\u0131ksal Birle\u015fim>, <Nokta sitili> ]
StickGraph=StickGrafik
StickGraph.Syntax=[ <Nokta Listesi> ]\n[ <Nokta Listesi>, <Mant\u0131ksal Yatay> ]\n[ <x-koordinat Listesi>, <y-koordinat  Listesi> ]\n[ <x-koordinat Listesi>, <y-koordinat  Listesi>, <Mant\u0131ksal Yatay> ]
Stretch=Uzat
Stretch.Syntax=[ <Nesne>, <Vektör> ]\n[ <Nesne>, <Do\u011fru>, <Oran> ]
Substitute=YerineKoy
Substitute.SyntaxCAS=[ <ifade>, <ba\u015flang\u0131ç>, <biti\u015f> ]
Sum=Toplam
Sum.Syntax=[ <Liste> ]\n[ <Liste>, <Ö\u011fe Say\u0131s\u0131> ]\n[ <Liste>, <Frekans Listesi> ]
Sum.SyntaxCAS=[ <Liste> ]\n[ <ifade>, <de\u011fi\u015fken>, <ba\u015flang\u0131ç de\u011feri>, <biti\u015f de\u011feri> ]
SumSquaredErrors=ToplamKareHatalar\u0131
SumSquaredErrors.Syntax=[ <Noktalar Listesi>, <\u0130\u015flev> ]
SurdText=SurdMetni
SurdText.Syntax=[ <Nokta> ]\n[ <Say\u0131> ]\n[ <Say\u0131>, <Liste> ]
Surface=Yüzey
Surface.Syntax=[ <\u0130fade>, <\u0130fade>, <\u0130fade>, <Parametre De\u011fi\u015fkeni 1>, <Ba\u015flang\u0131ç De\u011feri>, <Biti\u015f De\u011feri>, <Parametre De\u011fi\u015fkeni 2>, <Ba\u015flang\u0131ç De\u011feri>, <Biti\u015f De\u011feri> ]
TDistribution=TDa\u011f\u0131l\u0131m\u0131
TDistribution.Syntax=[ <Serbestlik Derecesi>, x ]\n[ <Serbestlik Derecesi>, <Mant\u0131ksal De\u011fer> ]\n[ <Serbestlik Derecesi>, x, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
TDistribution.SyntaxCAS=[ <Serbestlik Derecesi>, <De\u011fi\u015fken De\u011feri> ]
TMean2Estimate=TOrtalama2Tahmin
TMean2Estimate.Syntax=[ <Orneklem Veri Listesi 1>, <Orneklem Veri Listesi 2>, <Seviye>, <Mant\u0131ksal Havuz> ]\n[ <Örneklem Ortalama 1>, <Örneklem Standart Sapma 1>, <Örneklem Büyüklü\u011fü 1>, <Örneklem Ortalama 2>, <Örneklem Standart Sapma 2>, <Örneklem Büyüklü\u011fü 2>, <Seviye>, <Mant\u0131ksal Havuz> ]
TMeanEstimate=TOrtalamaTahmin
TMeanEstimate.Syntax=[ <Örneklem Veri Listesi>, <Seviye> ]\n[ <Örneklem Ortalama>, <Örneklem Standart Sapma>, <Örneklem Büyüklü\u011fü>, <Seviye> ]
TTest=TTesti
TTest.Syntax=[ <Örneklem Veri Listesi>, <Hipotezlenen Ortalama>, <Kuyruk> ]\n[ <Örneklem Ortalama>, <Örneklem Standart Sapma>, <Örneklem Büyüklü\u011fü>, <Hipotezlenen Ortalama>, <Kuyruk> ]
TTest2=TTesti2
TTest2.Syntax=[ <Örneklem Veri Listesi 1>, <Örneklem Veri Listesi 2>, <Kuyruk>, <Mant\u0131ksal Havuz> ]\n[ <Örneklem Ortalama 1>, <Örneklem Standart Sapma 1>, <Örneklem Büyüklü\u011fü 1>, <Örneklem Ortalama 2>, <Örneklem Standart Sapma 2>, <Örneklem Büyüklü\u011fü 2>, <Kuyruk>, <Mant\u0131ksal Havuz> ]
TTestPaired=TTestÇiftli
TTestPaired.Syntax=[ <Örneklem Veri Listesi 1>, <Örneklem Veri Listesi 2>, <Kuyruk> ]
TableText=TabloMetni
TableText.Syntax=[ <Liste>, <Liste>, ... ]\n[ <Liste>, <Liste>, ..., <Metin Hizalamas\u0131> ]
Take=Al
Take.Syntax=[ <Liste>, <Ba\u015flang\u0131ç Yeri> ]\n[ <Metin>, <Ba\u015flang\u0131ç Yeri> ]\n[ <Liste>, <Ba\u015flang\u0131ç Yeri>, <Biti\u015f Yeri> ]\n[ <Metin>, <Ba\u015flang\u0131ç Yeri>, <Biti\u015f Yeri> ]
Take.SyntaxCAS=[ <Liste>, <Ba\u015flang\u0131ç Pozisyonu>, <Biti\u015f Pozisyonu> ]
Tangent=Te\u011fet
Tangent.Syntax=[ <Nokta>, <Konik> ]\n[ <Do\u011fru>, <Konik> ]\n[ <Say\u0131>, <\u0130\u015flev> ]\n[ <Nokta>, <\u0130\u015flev> ]\n[ <Nokta>, <E\u011fri> ]
TaylorSeries=TaylorPolinomu
TaylorSeries.Syntax=[ <\u0130\u015flev>, <Say\u0131>, <Say\u0131> ]
TaylorSeries.SyntaxCAS=[ <\u0130\u015flev>, <Say\u0131>, <Say\u0131> ]\n[ <\u0130\u015flev>, <De\u011fi\u015fken>, <De\u011fi\u015fken-De\u011feri>, <S\u0131ra Nosu> ]
Tetrahedron=DörtYüzlü
Tetrahedron.Syntax=[ <Nokta>, <Nokta> ]\n[ <Nokta>, <Nokta>, <Yön> ]
Text=Metin
Text.Syntax=[ <Nesne> ]\n[ <Nesne>, <De\u011fi\u015fkenlerin de\u011fi\u015ftirilmesi için do\u011fru yanl\u0131\u015f s\u0131nama de\u011feri> ]
TextToUnicode=MetindenUniCode
TextToUnicode.Syntax=[ <Metin> ]
Textfield=MetinAlan\u0131
Textfield.Syntax=[ ]\n[ <Ba\u011fl\u0131 Nesne> ]
TiedRank=Ba\u011fl\u0131S\u0131ras\u0131
TiedRank.Syntax=[ <Liste> ]
ToBase=Tabana
ToBase.Syntax=[ <Say\u0131>, <Taban> ]
ToComplex=Karma\u015f\u0131kSay\u0131ya
ToComplex.Syntax=[ <Vektör> ]
ToExponential=Üsse
ToExponential.SyntaxCAS=[ <Karma\u015f\u0131k Say\u0131> ]
ToPoint=Noktaya
ToPoint.Syntax=[ <Karma\u015f\u0131k Say\u0131> ]
ToPolar=Kutupsala
ToPolar.Syntax=[ <Karma\u015f\u0131k Say\u0131> ]\n[ <Vektör> ]
ToolImage=AraçResmi
ToolImage.Syntax=[ <Say\u0131> ]
Top=Üst
Translate=Ötele
Translate.Syntax=[ <Nokta>, <Vektör> ]\n[ <Do\u011fru>, <Vektör> ]\n[ <Konik>, <Vektör> ]\n[ <\u0130\u015flev>, <Vektör> ]\n[ <Nokta>, <Vektör> ]\n[ <Çokgen>, <Vektör> ]\n[ <Resim>, <Vektör> ]\n[ <Vektör>, <Nokta> ]
Transpose=Transpoz
Transpose.Syntax=[ <Matris> ]
TrapezoidalSum=ÇokgenselAlanToplam
TrapezoidalSum.Syntax=[ <\u0130\u015flev>, <Ba\u015flang\u0131ç x de\u011feri>, <Biti\u015f x de\u011feei> ]
TravelingSalesman=GeziciSat\u0131\u015fEleman\u0131
TravelingSalesman.Syntax=[ <Noktalar Listesi> ]
TriangleCenter=ÜçgenMerkezi
TriangleCenter.Syntax=[ <Nokta>, <Nokta>, <Nokta>, <Nokta> ]
TriangleCurve=ÜçgenE\u011fri
TriangleCurve.Syntax=[ <Nokta>, <Nokta>, <Nokta>, <Denklem> ]
Triangular=Üçgensel
Triangular.Syntax=[ <Alt S\u0131n\u0131r>, <Üst S\u0131n\u0131r>, <Durum>, x ]\n[ <Alt S\u0131n\u0131r>, <Üst S\u0131n\u0131r>, <Durum>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]\n[ <Alt S\u0131n\u0131r>, <Üst S\u0131n\u0131r>, <Durum>, x, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
TrigCombine=TrigBirle\u015ftir
TrigCombine.Syntax=[ <\u0130fade> ]\n[ <\u0130fade>, <Hedef Fonksiyon> ]
TrigExpand=TrigGeni\u015flet
TrigExpand.Syntax=[ <\u0130fade> ]\n[ <\u0130fade>, <Hedef Fonksiyon> ]
TrigExpand.SyntaxCAS=[ <\u0130fade> ]\n[ <\u0130fade>, <Hedef Fonksiyon> ]\n[ <\u0130fade>, <Hedef Fonksiyon>, <Hedef De\u011fi\u015fken> ]\n[ <\u0130fade>, <Hedef Fonksiyon>, <Hedef De\u011fi\u015fken>, <Hedef De\u011fi\u015fken> ]
TrigSimplify=TrigBasitle\u015ftir
TrigSimplify.Syntax=[ <\u0130fade> ]
Trilinear=ÜçlüDo\u011frusal
Trilinear.Syntax=[ <Nokta>, <Nokta>, <Nokta>, <Say\u0131>, <Say\u0131>, <Say\u0131> ]
TurningPoint=DönmeNoktas\u0131
TurningPoint.Syntax=[ <Polinom> ]
Turtle=Kaplumba\u011fa
Turtle.Syntax=[ ]
TurtleBack=Kaplumba\u011faGeri
TurtleBack.Syntax=[ <Kaplumba\u011fa>, <Mesafe> ]
TurtleForward=Kaplumba\u011fa\u0130leri
TurtleForward.Syntax=[ <Kaplumba\u011fa>, <Mesafe> ]
TurtleLeft=Kaplumba\u011faSol
TurtleLeft.Syntax=[ <Kaplumba\u011fa>, <Aç\u0131> ]
TurtleRight=Kaplumba\u011faSa\u011f
TurtleRight.Syntax=[ <Kaplumba\u011fa>, <Aç\u0131> ]
UnicodeToLetter=UniCodeHarfi
UnicodeToLetter.Syntax=[ <Tamsay\u0131> ]
UnicodeToText=UniCodedanHarfe
UnicodeToText.Syntax=[ <Tamsay\u0131 Listesi> ]
Uniform=Ayn\u0131Tarz
Uniform.Syntax=[ <Alt S\u0131n\u0131r>, <Üst S\u0131n\u0131r>, x ]\n[ <Alt S\u0131n\u0131r>, <Üst S\u0131n\u0131>, <De\u011fi\u015fken De\u011feri> ]\n[ <Alt S\u0131n\u0131r>, <Üst S\u0131n\u0131>, x, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
Union=Birle\u015fim
Union.Syntax=[ <Liste>, <Liste> ]
Unique=E\u015fsiz
Unique.Syntax=[ <Liste> ]
UnitOrthogonalVector=BirimDikVektör
UnitOrthogonalVector.Syntax=[ <Do\u011fru> ]\n[ <Vektör> ]
UnitOrthogonalVector.Syntax3D=[ <Do\u011fru> ]\n[ <Do\u011fru Parças\u0131> ]\n[ <Vektör> ]\n[ <Uzay> ]
UnitOrthogonalVector.SyntaxCAS=[ <Vektör> ]
UnitVector=BirimVektör
UnitVector.Syntax=[ <Vektör> ]\n[ <Do\u011fru> ]
UnitVector.SyntaxCAS=[ <Vektör> ]
UpdateConstruction=Yap\u0131y\u0131Güncelle
UpdateConstruction.Syntax=[ ]\n[ <Kaç kere> ]
UpperSum=ÜstToplam
UpperSum.Syntax=[ <\u0130\u015flev>, <Say\u0131>, <Say\u0131>, <Say\u0131> ]
Variance=Varyans
Variance.Syntax=[ <Ham Veri Listesi> ]\n[ <Say\u0131 Listesi>, <Frekans Listesi> ]
Variance.SyntaxCAS=[ <Say\u0131 Listesi> ]
Vector=Vektör
Vector.Syntax=[ <Nokta> ]\n[ <Nokta>, <Nokta> ]
Vertex=TepeNoktas\u0131
Vertex.Syntax=[ <Konik> ]\n[ <E\u015fitsizlik> ]\n[ <Çokgen> ]\n[ <Çokgen>, <\u0130ndis> ]
VerticalText=Dü\u015feyMetin
VerticalText.Syntax=[ <Metin> ]\n[ <Metin>, <Nokta> ]
Volume=Hacim
Volume.Syntax=[ <Nesne> ]
Voronoi.Syntax=[ <Nokta Listesi> ]
Weibull.Syntax=[ <\u015eekil>, <Ölçek>, x ]\n[ <\u015eekil>, <Ölçek>, <De\u011fi\u015fken De\u011feri> ]\n[ <\u015eekil>, <Ölçek>, x, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
Weibull.SyntaxCAS=[ <\u015eekil>, <Ölçek>, <De\u011fi\u015fken De\u011feri> ]
ZMean2Estimate=ZOrtalama2Tahmin
ZMean2Estimate.Syntax=[ <Örneklem 1 Veri Listesi>, <Örneklem 2 Veri Listesi>, <\u03c31>, <\u03c32>, <Seviye> ]\n[ <Örneklem 1 Ortalama>, <\u03c31>, <Örneklem 1 Büyüklük>, <Örneklem 2 Ortalama>, <\u03c32>, <Örneklem 1 Büyüklük>, <Seviye> ]
ZMean2Test=ZOrtalama2Testi
ZMean2Test.Syntax=[ <Örneklem 1 Veri Listesi>, <\u03c31>, <Örneklem 2 Veri Listesi>, <\u03c32>, <Kuyruk> ]\n[ <Örneklem 1 Ortalama>, <\u03c31>, <Örneklem 1 Büyüklük>, <Örneklem 2 Ortalama>, <\u03c32>, <Örneklem 2 Büyüklük>, <Kuyruk> ]
ZMeanEstimate=ZOrtalamaTahmin
ZMeanEstimate.Syntax=[ <Örneklem Veri Listesi>, <\u03c3>, <Seviye> ]\n[ <Örneklem Ortalamas\u0131>, <\u03c3>, <Örneklem Büyüklü\u011fü>, <Seviye> ]
ZMeanTest=ZOrtalamaTesti
ZMeanTest.Syntax=[ <Örneklem Veri Listesi>, <\u03c3>, <Varsay\u0131lan Ortalama>, <Kuyruk> ]\n[ <Örneklem Ortalamas\u0131>, <\u03c3>, <Örneklem Büyüklü\u011fü>, <Varsay\u0131lan Ortalama>, <Kuyruk> ]
ZProportion2Estimate=ZOran2Tahmini
ZProportion2Estimate.Syntax=[ <Örneklem Oran\u0131 1>, <Örneklem Büyüklü\u011fü 1>, <Örneklem Oran\u0131 2>, <Örneklem Büyüklü\u011fü 2>, <Seviye> ]
ZProportion2Test=ZOran2Testi
ZProportion2Test.Syntax=[ <Örneklem Oran\u0131 1>, <Örneklem Büyüklü\u011fü 1>, <Örneklem Oran\u0131 2>, <Örneklem Büyüklü\u011fü 2>, <Kuyruk> ]
ZProportionEstimate=ZOranTahmini
ZProportionEstimate.Syntax=[ <Örneklem Oran\u0131>, <Örneklem Büyüklü\u011fü>, <Seviye> ]
ZProportionTest=ZOranTesti
ZProportionTest.Syntax=[ <Örneklem Oran\u0131>, <Örneklem Büyüklü\u011fü>, <Hipotez Oran\u0131>, <Kuyruk> ]
Zip.Syntax=[ <\u0130fade>, <De\u011fi\u015fken1>, <Liste1>, <De\u011fi\u015fken2>, <Liste2>, ... ]
Zipf.Syntax=[ <Ö\u011fe Say\u0131s\u0131>, <Üs> ]\n[ <Ö\u011fe Say\u0131s\u0131>, <Üs>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]\n[ <Ö\u011fe Say\u0131s\u0131>, <Üs>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
Zipf.SyntaxCAS=[ <Ö\u011fe Say\u0131s\u0131>, <Üs>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
ZoomIn=Yak\u0131nla\u015ft\u0131r
ZoomIn.Syntax=[ <Ölçek Faktörü> ]\n[ <Ölçek Faktörü>, <Merkez Nokta> ]\n[ <Min x>, <Min y>, <Max x>, <Max y> ]
ZoomOut=Uzakla\u015ft\u0131r
ZoomOut.Syntax=[ <Ölçek Faktörü> ]\n[ <Ölçek Faktörü>, <Merkez Nokta> ]
nPr.Syntax=[ <Say\u0131>, <Say\u0131> ]