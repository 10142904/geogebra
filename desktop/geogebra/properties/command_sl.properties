ANOVA.Syntax=[ <seznam>, <seznam>, ... ]
AffineRatio=DelitvenoRazmerje
AffineRatio.Syntax=[ <to\u010dka>, <to\u010dka>, <to\u010dka> ]
Angle=Kot
Angle.Syntax=[ <objekt> ]\n[ <vektor>, <vektor> ]\n[ <premica>, <premica> ]\n[ <to\u010dka>, <to\u010dka (vrh)>, <to\u010dka> ]\n[ <to\u010dka>, <to\u010dka (vrh)>, <kot> ]
AngularBisector=SimetralaKota
AngularBisector.Syntax=[ <premica>, <premica> ]\n[ <to\u010dka>, <to\u010dka>, <to\u010dka> ]
Append=Dodaj
Append.Syntax=[ <seznam>, <objekt> ]\n[ <objekt>, <seznam> ]
ApplyMatrix=UporabiMatriko
ApplyMatrix.Syntax=[ <matrika>, <objekt> ]
Arc=Lok
Arc.Syntax=[ <kro\u017enica>, <to\u010dka>, <to\u010dka> ]\n[ <sto\u017enica>, <to\u010dka>, <to\u010dka> ]\n[ <kro\u017enica>, <parameter>, <parameter> ]\n[ <sto\u017enica>, <parameter>, <parameter> ]
AreCollinear=SoKolinearne
AreCollinear.Syntax=[ <to\u010dka>, <to\u010dka>, <to\u010dka> ]
AreConcurrent=\u0160opPremic
AreConcurrent.Syntax=[ <premica>, <premica>, <premica> ]
AreConcyclic=SoKoncikli\u010dne
AreConcyclic.Syntax=[ <to\u010dka>, <to\u010dka>, <to\u010dka>, <to\u010dka> ]
AreEqual=Ekvivalenca
AreEqual.Syntax=[ <objekt>, <objekt> ]
AreParallel=Vzporednost
AreParallel.Syntax=[ <premica>, <premica> ]
ArePerpendicular=StaPravokotni
ArePerpendicular.Syntax=[ <premica>, <premica> ]
Area=Plo\u0161\u010dina
Area.Syntax=[ <sto\u017enica> ]\n[ <to\u010dka>, ..., <to\u010dka> ]
Asymptote=Asimptota
Asymptote.Syntax=[ <sto\u017enica> ]\n[ <funkcija> ]
AttachCopyToView=Prilo\u017eiKopirano
AttachCopyToView.Syntax=[ <objekt>, <pogled 0|1|2> ]\n[ <objekt>, <pogled 0|1|2>, <to\u010dka 1>, <to\u010dka 2>, <to\u010dka na ekranu 1>, <to\u010dka na ekranu 2> ]
Axes=OsiSto\u017enice
Axes.Syntax=[ <sto\u017enica> ]
AxisStepX=EnotaOsiX
AxisStepY=EnotaOsiY
BarChart=Stolp\u010dniDiagram
BarChart.Syntax=[ <seznam podatkov>, <seznam frekvenc> ]\n[ <seznam vrstic s podatki>, <\u0161irina stolpca> ]\n[ <seznam podatkov>, <seznam frekvenc>, <\u0161irina stolpca> ]\n[ <za\u010detna vrednost>, <kon\u010dna vrednost>, <seznam vi\u0161in> ]\n[ <za\u010detna vrednost>, <kon\u010dna vrednost>, <izraz>, <spremenljivka>, <od \u0161tevila>, <do \u0161tevila> ]\n[ <za\u010detna vrednost>, <kon\u010dna vrednost>, <izraz>, <spremenljivka>, <od \u0161tevila>, <do \u0161tevila>, <\u0161irina koraka> ]
BarCode=\u010crtnaKoda
BarCode.Syntax=[ ]\n[ <Slika> ]\n[ <tekst ali \u0161tevilo>, "<Format (neobvezno)>", "<Popravljanje napak (neobvezno)>", <\u0160irina (neobvezno)>, <Vi\u0161ina (neobvezno)> ]
Barycenter=MasnoSredi\u0161\u010de
Barycenter.Syntax=[ <seznam to\u010dk>, <seznam \u0161tevil> ]
Bernoulli=BernoullijevaPorazdelitev
Bernoulli.Syntax=[ <verjetnost>, <logi\u010dna vrednost zbirno> ]
Binomial=BinomskiKoeficient
Binomial.Syntax=[ <\u0161tevilo>, <\u0161tevilo> ]
Binomial.SyntaxCAS=[ <\u0161tevilo>, <\u0161tevilo> ]
BinomialDist=BinomskaPorazdelitev
BinomialDist.Syntax=[ <\u0161tevilo poskusov>, <verjetnost poskusa> ]\n[ <\u0161tevilo poskusov>, <verjetnost poskusa>, <logi\u010dna vrednost zbirno> ]\n[ <\u0161tevilo poskusov>, <verjetnost poskusa>, <vrednost spremenljivke>, <logi\u010dna vrednost zbirno> ]
BinomialDist.SyntaxCAS=[ <\u0160tevilo uspe\u0161nih>, <Verjetnost uspe\u0161nih>, x, <logi\u010dna vrednost zbirno> ]
Bottom=Spodaj
BoxPlot=BorzniDiagram
BoxPlot.Syntax=[ <odmik y>, <pove\u010dava y>, <seznam vrstic s podatki> ]\n[ <odmik y>, <pove\u010dava y>, <seznam vrstic s podatki>, <logi\u010dna vrednost> ]\n[ <odmik y>, <pove\u010dava y>, <seznam vrstic s podatki>, <seznam frekvenc>, <logi\u010dna vrednost> ]\n[ <odmik y>, <pove\u010dava y>, <za\u010detna vrednost>, <Q1>, <mediana>, <Q3>, <kon\u010dna vednost> ]
Button=Gumb
Button.Syntax=[ ]\n[ <napis> ]
CFactor=CFaktor
CFactor.SyntaxCAS=[ <Izraz> ]\n[ <Izraz>, <spremenljivka> ]
CSolutions=CRe\u0161itve
CSolutions.SyntaxCAS=[ <Ena\u010dba> ]\n[ <Ena\u010dba>, <spremenljivka> ]
CSolve=CRe\u0161i
CSolve.SyntaxCAS=[ <Ena\u010dba> ]\n[ <Ena\u010dba>, <spremenljivka> ]
Cauchy=CauchyjevaPorazdelitev
Cauchy.Syntax=[ <Mediana>, <lestvica>, <vrednost spremenljivke> ]\n[ <Mediana>, <lestvica>, x ]\n[ <Mediana>, <lestvica>, x, <logi\u010dna vrednost zbirno> ]
Cauchy.SyntaxCAS=[ <Mediana>, <lestvica>, x ]
Cell=Celica
Cell.Syntax=[ <stolpec>, <vrstica> ]
CellRange=Celice
CellRange.Syntax=[ <za\u010detna>, <kon\u010dna> ]
Center=Sredi\u0161\u010de
Center.Syntax=[ <sto\u017enica> ]
CenterView=Sredi\u0161\u010dePogleda
CenterView.Syntax=[ <sredi\u0161\u010dna to\u010dka> ]
Centroid=Te\u017ei\u0161\u010de
Centroid.Syntax=[ <mnogokotnik> ]
Checkbox=PotrditveniKvadratek
Checkbox.Syntax=[ ]\n[ <Naslov> ]\n[ <Seznam> ]\n[ <Naslov>, <seznam> ]
ChiSquared=HiKvadrat
ChiSquared.Syntax=[ <Prostostne stopnje>, x ]\n[ <Prostostne stopnje>, x, <logi\u010dna vrednost zbirno> ]\n[ <Prostostne stopnje>, x, <vrednost spremenljivke> ]
ChiSquared.SyntaxCAS=[ <Prostostne stopnje>, <spremeljivka> ]
ChiSquaredTest=TestHiKvadrat
ChiSquaredTest.Syntax=[ <matrika> ]\n[ <seznam>, <seznam> ]\n[ <matrika>, <matrika> ]
Circle=Kro\u017enica
Circle.Syntax=[ <sredi\u0161\u010de>, <polmer> ]\n[ <sredi\u0161\u010de>, <daljica> ]\n[ <sredi\u0161\u010de>, <to\u010dka> ]\n[ <to\u010dka>, <to\u010dka>, <to\u010dka> ]
Circle.Syntax3D=[ <to\u010dka>, <polmer> ]\n[ <to\u010dka>, <daljica> ]\n[ <to\u010dka>, <to\u010dka> ]\n[ <premica>, <to\u010dka> ]\n[ <to\u010dka>, <to\u010dka>, <to\u010dka> ]\n[ <to\u010dka>, <polmer>, <smer> ]\n[ <to\u010dka>, <to\u010dka>, <smer> ]
CircleArc=Kro\u017eniLok
CircleArc.Syntax=[ <sredi\u0161\u010de>, <to\u010dka>, <to\u010dka> ]
CircleSector=Kro\u017eniIzsek
CircleSector.Syntax=[ <sredi\u0161\u010de>, <to\u010dka>, <to\u010dka> ]
CircumcircleArc=ObodniLok
CircumcircleArc.Syntax=[ <to\u010dka>, <to\u010dka>, <to\u010dka> ]
CircumcircleSector=ObodniIzsek
CircumcircleSector.Syntax=[ <to\u010dka>, <to\u010dka>, <to\u010dka> ]
Circumference=Obseg
Circumference.Syntax=[ <sto\u017enica> ]
Classes=Razredi
Classes.Syntax=[ <seznam>, <\u0161tevilo razredov> ]\n[ <seznam>, <za\u010detek>, <\u0161irina razreda> ]
ClosestPoint=Najbli\u017ejaTo\u010dka
ClosestPoint.Syntax=[ <pot>, <to\u010dka> ]\n[ <obmo\u010dje>, <to\u010dka> ]\n[ <premica>, <premica> ]
Coefficients=Koeficienti
Coefficients.Syntax=[ <polinom> ]\n[ <sto\u017enica> ]
Coefficients.SyntaxCAS=[ <polinom> ]\n[ <polinom>, <spremenljivka> ]
Column=Stolpec
Column.Syntax=[ <celica tabele> ]
ColumnName=ImeStolpca
ColumnName.Syntax=[ <celica tabele> ]
Command=Ukaz
CommonDenominator=SkupniImenovalec
CommonDenominator.Syntax=[ <Izraz>, <izraz> ]
CompetitionRank=Ran\u017eirnaVrsta
CompetitionRank.Syntax=[ <seznam> ]
CompleteSquare=PopolniKvadrat
CompleteSquare.Syntax=[ <Kvadratna funkcija> ]
ComplexRoot=KompleksniKoren
ComplexRoot.Syntax=[ <polinom> ]
Cone=Sto\u017eec
Cone.Syntax=[ <Krog>, <Vi\u0161ina> ]\n[ <To\u010dka>, <To\u010dka>, <Smer> ]
Conic=Sto\u017enica
Conic.Syntax=[ <to\u010dka>, <to\u010dka>, <to\u010dka>, <to\u010dka>, <to\u010dka> ]\n[ <\u0161tevilo>, <\u0161tevilo>, <\u0161tevilo>, <\u0161tevilo>, <\u0161tevilo>, <\u0161tevilo> ]
ConstructionStep=KonstrukcijskiKorak
ConstructionStep.Syntax=[ ]\n[ <objekt> ]
ContingencyTable=Zdru\u017eiTabelo
ContingencyTable.Syntax=[ <tekst kot seznam>, <tekst kot seznam> ]\n[ <tekst kot seznam>, <tekst kot seznam>, <mo\u017enosti> ]\n[ <seznam vrstic z vrednostmi>, <seznam stolpcev z vrednostmi>, <frekven\u010dna tabela> ]\n[ <seznam vrstic z vrednostmi>, <seznam stolpcev z vrednostmi>, <frekven\u010dna tabela>, <mo\u017enosti> ]
ContinuedFraction=Veri\u017eniUlomek
ContinuedFraction.Syntax=[ <\u0161tevilo> ]\n[ <\u0161tevilo>, <plast> ]\n[ <\u0161tevilo>, <plast>, <okraj\u0161ava res|ni res> ]
ConvexHull=KonveksnaOgrinja\u010da
ConvexHull.Syntax=[ <seznam to\u010dk> ]
CopyFreeObject=KopiranjeProstegaObjekta
CopyFreeObject.Syntax=[ <Objekt> ]
Corner=Vogal
Corner.Syntax=[ <\u0161tevilka vogala> ]\n[ <slika>, <\u0161tevilka vogala> ]\n[ <tekst>, <\u0161tevilka vogala> ]\n[ <grafi\u010dni pogled>, <\u0161tevilka vogala> ]
CountIf=\u0160tejSPogojem
CountIf.Syntax=[ <pogoj>, <seznam> ]\n[ <pogoj>, <spremenljivka>, <seznam> ]
Covariance=Kovarianca
Covariance.Syntax=[ <Seznam to\u010dk> ]\n[ <Seznam>, <seznam> ]
Cross=VektorskiProdukt
Cross.SyntaxCAS=[ <vektor>, <vektor> ]
CrossRatio=Kri\u017enoRazmerje
CrossRatio.Syntax=[ <to\u010dka>, <to\u010dka>, <to\u010dka>, <to\u010dka> ]
Cube=Kocka
Cube.Syntax=[ <To\u010dka>, <To\u010dka> ]\n[ <To\u010dka>, <To\u010dka>, <Smer> ]
Cubic=Kubi\u010dni
Cubic.Syntax=[ <to\u010dka>, <to\u010dka>, <to\u010dka>, <\u0161tevilo> ]
Curvature=Ukrivljenost
Curvature.Syntax=[ <to\u010dka>, <funkcija> ]\n[ <to\u010dka>, <krivulja> ]
CurvatureVector=VektorUkrivljenosti
CurvatureVector.Syntax=[ <to\u010dka>, <funkcija> ]\n[ <to\u010dka>, <krivulja> ]
CurveCartesian=Krivulja
CurveCartesian.Syntax=[ <izraz>, <izraz>, <parameter>, <od>, <do> ]
CurveCartesian.Syntax3D=[ <izraz>, <izraz>, <parameter>, <od>, <do> ]\n[ <izraz>, <izraz>, <izraz>, <parameter>, <od>, <do> ]
Cylinder=Valj
Cylinder.Syntax=[ <Krog>, <Vi\u0161ina> ]\n[ <To\u010dka>, <To\u010dka>, <Polmer> ]
Defined=JeDefinirano
Defined.Syntax=[ <objekt> ]
Degree=Stopnja
Degree.Syntax=[ <polinom> ]
Degree.SyntaxCAS=[ <polinom> ]\n[ <polinom>, <spremenljivka> ]
DelauneyTriangulation=DelaunayevaTriangulacija
DelauneyTriangulation.Syntax=[ <seznam to\u010dk> ]
Delete=Bri\u0161i
Delete.Syntax=[ <objekt> ]
Denominator=Imenovalec
Denominator.Syntax=[ <Funkcija> ]
Denominator.SyntaxCAS=[ <Izraz> ]
Derivative=Odvod
Derivative.Syntax=[ <funkcija> ]\n[ <krivulja> ]\n[ <funkcija>, <\u0161tevilo> ]\n[ <krivulja>, <\u0161tevilo> ]
Derivative.SyntaxCAS=[ <izraz> ]
Determinant=Determinanta
Determinant.Syntax=[ <matrika> ]
Diameter=Premer
Diameter.Syntax=[ <vektor>, <sto\u017enica> ]\n[ <premica>, <sto\u017enica> ]
Dilate=Razteg
Dilate.Syntax=[ <objekt>, <faktor raztega> ]\n[ <objekt>, <faktor raztega>, <sredi\u0161\u010de raztega> ]
Dimension=Razse\u017enost
Dimension.Syntax=[ <vektor> ]
Direction=Smer
Direction.Syntax=[ <premica> ]
Directrix=Vodnica
Directrix.Syntax=[ <sto\u017enica> ]
Distance=Razdalja
Distance.Syntax=[ <to\u010dka>, <objekt> ]\n[ <premica>, <premica> ]
Div=Koli\u010dnik
Div.Syntax=[ <deljenec>, <delitelj> ]
Division=Deljenje
Division.Syntax=[ <deljenec>, <delitelj> ]\n[ <deljenec polinom>, <delitelj polinom> ]
Divisors=Delitelji
Divisors.Syntax=[ <\u0161tevilo> ]
DivisorsList=SeznamDeliteljev
DivisorsList.Syntax=[ <\u0161tevilo> ]
DivisorsSum=VsotaDeliteljev
DivisorsSum.Syntax=[ <\u0161tevilo> ]
Dodecahedron=Dodekaeder
Dodecahedron.Syntax=[ <To\u010dka>, <To\u010dka> ]\n[ <To\u010dka>, <To\u010dka>, <Smer> ]
Dot=Pika
Dot.SyntaxCAS=[ <vektor>, <vektor> ]
DotPlot=To\u010dkovniDiagram
DotPlot.Syntax=[ <seznam vrstic s podatki> ]
DynamicCoordinates=OdvisnaTo\u010dka
DynamicCoordinates.Syntax=[ <to\u010dka>, <\u0161tevilo>, <\u0161tevilo> ]
Eccentricity=Numeri\u010dnaEkscentri\u010dnost
Eccentricity.Syntax=[ <sto\u017enica> ]
Element.Syntax=[ <seznam>, <mesto elementa> ]\n[ <matrika>, <stolpec>, <vrstica> ]
Element.SyntaxCAS=[ <seznam>, <mesto elementa> ]\n[ <matrika>, <stolpec>, <vrstica> ]\n[ <seznam>, <indeks 1>, <indeks 2>, ... ]
Ellipse=Elipsa
Ellipse.Syntax=[ <gori\u0161\u010de>, <gori\u0161\u010de>, <dol\u017eina glavne osi> ]\n[ <gori\u0161\u010de>, <gori\u0161\u010de>, <daljica> ]\n[ <to\u010dka>, <to\u010dka>, <to\u010dka> ]
Ends=Temena
Erlang=ErlangovaPorazdelitev
Erlang.Syntax=[ <Shape>, <Rate>, x ]\n[ <Shape>, <Rate>, <Variable Value> ]\n[ <Shape>, <Rate>, x, <logi\u010dna vrednost Cumulative> ]
Excentricity=LinearnaEkscentri\u010dnost
Excentricity.Syntax=[ <sto\u017enica> ]
Execute=Izvedi
Execute.Syntax=[ <tekst> ]\n[ <tekst>, <parameter>, <parameter>, ... ]
Expand=Raz\u0161iri
Expand.Syntax=[ <funkcija> ]
Exponential=ExponentnaPorazdelitev
Exponential.Syntax=[ <lambda>, x ]\n[ <lambda>, <vrednost spremenljivke> ]\n[ <lambda>, x, <logi\u010dna vrednost zbirno> ]
Exponential.SyntaxCAS=[ <lambda>, <vrednost spremenljivke> ]
Extremum=Ekstrem
Extremum.Syntax=[ <polinom> ]
FDistribution=FPorazdelitev
FDistribution.Syntax=[ <\u0161tevilo prostostnih stopenj v \u0161tevcu>, <\u0161tevilo prostostnih stopenj v imenovalcu>, x ]\n[ <\u0161tevilo prostostnih stopenj v \u0161tevcu>, <\u0161tevilo prostostnih stopenj v imenovalcu>, x, <logi\u010dna vrednost zbirno> ]\n[ <\u0161tevilo prostostnih stopenj v \u0161tevcu>, <\u0161tevilo prostostnih stopenj v imenovalcu>, x, <vrednost spremenljivke> ]
FDistribution.SyntaxCAS=[ <\u0161tevilo prostostnih stopenj v \u0161tevcu>, <\u0161tevilo prostostnih stopenj v imenovalcu>, x, <vrednost spremenljivke> ]
Factor=Faktoriziraj
Factor.Syntax=[ <polinom> ]
Factor.SyntaxCAS=[ <polinom> ]\n[ <izraz>, <spremenljivka> ]
Factors=Faktorizacija
Factors.Syntax=[ <polinom> ]
FillCells=ZapolniCelice
FillCells.Syntax=[ <celice>, <objekt> ]\n[ <celica>, <seznam> ]\n[ <celica>, <matrika> ]
FillColumn=ZapolniStolpec
FillColumn.Syntax=[ <stolpec>, <seznam> ]
FillRow=ZapolniVrstico
FillRow.Syntax=[ <vrstica>, <seznam> ]
First=PrviElement
First.Syntax=[ <seznam> ]\n[ <tekst> ]\n[ <sled> ]\n[ <seznam>, <\u0161tevilo elementov> ]\n[ <tekst>, <\u0161tevilo elementov> ]\n[ <sled>, <\u0161tevilo elementov> ]
First.SyntaxCAS=[ <seznam> ]\n[ <seznam>, <\u0161tevilo elementov> ]
FirstAxis=GlavnaOs
FirstAxis.Syntax=[ <sto\u017enica> ]
FirstAxisLength=Dol\u017einaGlavnePolosi
FirstAxisLength.Syntax=[ <sto\u017enica> ]
Fit=Trendna\u010crta
Fit.Syntax=[ <seznam to\u010dk>, <seznam funkcij> ]\n[ <seznam to\u010dk>, <funkcija> ]
FitExp=EksponentnaTrendna\u010crta
FitExp.Syntax=[ <seznam to\u010dk> ]
FitGrowth=TrendRasti
FitGrowth.Syntax=[ <seznam to\u010dk> ]
FitLineX=LinearnaTrendna\u010crtaX
FitLineX.Syntax=[ <seznam to\u010dk> ]
FitLineY=LinearnaTrendna\u010crtaY
FitLineY.Syntax=[ <seznam to\u010dk> ]
FitLog=LogaritemskaTrendna\u010crta
FitLog.Syntax=[ <seznam to\u010dk> ]
FitLogistic=Logisti\u010dniTrend
FitLogistic.Syntax=[ <seznam to\u010dk> ]
FitPoly=PolinomskaTrendna\u010crta
FitPoly.Syntax=[ <seznam to\u010dk> ]
FitPow=Poten\u010dnaTrendna\u010crta
FitPow.Syntax=[ <seznam to\u010dk> ]
FitSin=SinusnaTrendna\u010crta
FitSin.Syntax=[ <seznam to\u010dk> ]
Flatten=Splo\u0161\u010diSeznam
Flatten.Syntax=[ <seznam> ]
Focus=Gori\u0161\u010de
Focus.Syntax=[ <sto\u017enica> ]
FractionText=ZapisUlomka
FractionText.Syntax=[ <\u0161tevilo> ]\n[ <to\u010dka> ]
Frequency=Frekvenca
Frequency.Syntax=[ <seznam vrstic s podatki> ]\n[ <logi\u010dna vrednost>, <seznam vrstic s podatki> ]\n[ <seznam mej razredov>, <seznam vrstic s podatki> ]\n[ <seznam kot tekst>, <seznam kot tekst> ]\n[ <logi\u010dna vrednost>, <seznam mej razredov>, <seznam vrstic s podatki> ]\n[ <seznam mej razredov>, <seznam vrstic s podatki>, <gostota>, <faktor stopnje gostote (neobvezno)> ]\n[ <logi\u010dna vrednost>, <seznam mej razredov>, <seznam vrstic s podatki>, <gostota>, <faktor stopnje gostote  (neobvezno)> ]
FrequencyPolygon=Frekven\u010dniPoligon
FrequencyPolygon.Syntax=[ <seznam mej frekven\u010dnih razredov>, <seznam velikosti> ]\n[ <seznam mej frekven\u010dnih razredov>, <seznam vrstic s podatki>, <logi\u010dna vrednost uporaba gostote>, <faktor gostote (neobvezno)> ]\n[ <logi\u010dna vrednost zbirno>, <seznam mej frekven\u010dnih razredov>, <seznam vrstic s podatki>, <logi\u010dna vrednost uporaba gostote>, <faktor gosotote (neobvezno)> ]
FrequencyTable=Frekven\u010dnaTabela
FrequencyTable.Syntax=[ <vrstice s podatki> ]\n[ <zbirno>, <vrstice s podatki> ]\n[ <seznam mej frekven\u010dnih razredov>, <seznam velikosti> ]\n[ <seznam mej frekven\u010dnih razredov>, <vrstice s podatki>, <logi\u010dna vrednost uporaba gostote>, <faktor gostote> (neobvezno) ]\n[ <logi\u010dna vrednost zbirno>, <seznam mej frekven\u010dnih razredov>, <vrstice s podatki>, <logi\u010dna vrednost uporaba gostote>, <faktor gostote> (neobvezno) ]
FromBase=IzOsnove
FromBase.Syntax=[ "<\u0161tevilo kot tekst>", <osnova> ]
Function=Funkcija
Function.Syntax=[ <seznam \u0161tevil> ]\n[ <funkcija>, <za\u010detna vrednost x-a>, <kon\u010dna vrednost x-a> ]
Function.Syntax3D=[ <Funkcija>, <Za\u010detna vrednost x>, <Kon\u010dna vrednost x> ]\n[ <Izraz>, <Parameter spremenljivka 1>, <Za\u010detna vrednost>, <Kon\u010dna vrednost>, <Parameter spremenljivka 2>, <Za\u010detna vrednost>, <Kon\u010dna vrednost> ]
GCD=NSD
GCD.Syntax=[ <seznam> ]\n[ <\u0161tevilo>, <\u0161tevilo> ]
GCD.SyntaxCAS=[ <seznam> ]\n[ <seznam \u0161tevil> ]\n[ <seznam polinomov> ]\n[ <\u0161tevilo>, <\u0161tevilo> ]
Gamma=Gama
Gamma.Syntax=[ <alfa>, <beta>, x ]\n[ <alfa>, <beta>, <vrednost spremenljivke> ]\n[ <alfa>, <beta>, x, <logi\u010dna vrednost zbirno> ]
Gamma.SyntaxCAS=[ <alfa>, <beta>, <vrednost spremenljivke> ]
GeometricMean=GeometrijskaSredina
GeometricMean.Syntax=[ <seznam \u0161tevil> ]
GetTime=Trenutni\u010cas
GetTime.Syntax=[ ]\n[ "<oblika>" ]
Groebner.SyntaxCAS=[ <seznam polinomov> ]\n[ <seznam polinomov>, <seznam spremenljivk> ]\n[ <seznam polinomov>, <seznam spremenljivk>, <na\u010din ureditve spremenljivk> ]
HarmonicMean=Harmoni\u010dnaSredina
HarmonicMean.Syntax=[ <seznam \u0161tevil> ]
HideLayer=PlastSkrij
HideLayer.Syntax=[ <\u0161tevilo> ]
Histogram.Syntax=[ <seznam frekven\u010dnih razredov>, <seznam vi\u0161in> ]\n[ <seznam frekven\u010dnih razredov>, <seznam vrstic s podatki>, <gostota>, <faktor gostote (neobvezno)> ]\n[ <logi\u010dna vrednost>, <seznam frekven\u010dnih razredov>, <seznam vrstic s podatki>, <gostota>, <faktor gostote (neobvezno)> ]
HistogramRight=HistogramDesni
HistogramRight.Syntax=[ <seznam mej frekven\u010dnih razredov>, <seznam velikosti> ]\n[ <seznam mej frekven\u010dnih razredov>, <seznam vrstic s podatki>, <logi\u010dna vrednost uporaba gostote>, <faktor gostote (neobvezno)> ]\n[ <logi\u010dna vrednost zbirno>, <seznam mej frekven\u010dnih razredov>, <seznam vrstic s podatki>, <logi\u010dna vrednost uporaba gostote>, <faktor gosotot (neobvezno)> ]
Hull=Ogrinja\u010da
Hull.Syntax=[ <seznam to\u010dk>, <odstotek> ]
HyperGeometric=HiperGeometri\u010dna
HyperGeometric.Syntax=[ <velikost populacije>, <\u0161tevilo ugodnih>, <velikost vzorca> ]\n[ <velikost populacije>, <\u0161tevilo ugodnih>, <velikost vzorca>, <logi\u010dna vrednost zbirno> ]\n[ <velikost populacije>, <\u0161tevilo ugodnih>, <velikost vzorca>, <vrednost spremenljivke>, <logi\u010dna vrednost zbirno> ]
HyperGeometric.SyntaxCAS=[ <velikost populacije>, <\u0161tevilo ugodnih>, <velikost vzorca>, <vrednost spremenljivke>, <logi\u010dna vrednost zbirno> ]
Hyperbola=Hiperbola
Hyperbola.Syntax=[ <gori\u0161\u010de>, <gori\u0161\u010de>, <dol\u017eina glavne osi> ]\n[ <gori\u0161\u010de>, <gori\u0161\u010de>, <daljica> ]\n[ <to\u010dka>, <to\u010dka>, <to\u010dka> ]
Icosahedron=Ikozaeder
Icosahedron.Syntax=[ <To\u010dka>, <To\u010dka> ]\n[ <To\u010dka>, <To\u010dka>, <Smer> ]
Identity=EnotskaMatrika
Identity.Syntax=[ <dimenzija> ]
If.Syntax=[ <pogoj>, <potem> ]\n[ <pogoj>, <potem>, <sicer> ]
ImplicitCurve=ImplicitnaKrivulja
ImplicitCurve.Syntax=[ <seznam to\u010dk> ]\n[ <f( x, y )> ]
ImplicitDerivative=ImplicitniOdvod
ImplicitDerivative.SyntaxCAS=[ <f(x, y)> ]\n[ <izraz>, <odvisna spremenljivka>, <neodvisna spremenljivka> ]
Incircle=V\u010drtanKrog
Incircle.Syntax=[ <to\u010dka>, <to\u010dka>, <to\u010dka> ]
IndexOf=Indeks
IndexOf.Syntax=[ <objekt>, <seznam> ]\n[ <tekst>, <tekst> ]\n[ <objekt>, <seznam>, <za\u010detek> ]\n[ <tekst>, <tekst>, <za\u010detek> ]
InfiniteCone=Neskon\u010dniSto\u017eec
InfiniteCone.Syntax=[ <to\u010dka>, <vektor>, <kot> ]\n[ <to\u010dka>, <to\u010dka>, <kot> ]\n[ <to\u010dka>, <premica>, <kot> ]
InfiniteCylinder=Neskon\u010dniValj
InfiniteCylinder.Syntax=[ <premica>, <polmer> ]\n[ <to\u010dka>, <vektor>, <polmer> ]\n[ <to\u010dka>, <to\u010dka>, <polmer> ]
Insert=Vstavi
Insert.Syntax=[ <seznam>, <seznam>, <polo\u017eaj> ]\n[ <objekt>, <seznam>, <polo\u017eaj> ]
Integral.Syntax=[ <funkcija> ]\n[ <funkcija>, <spremenljivka> ]\n[ <funkcija>, <za\u010detna vrednost x>, <kon\u010dna vednost x> ]\n[ <funkcija>, <za\u010detna vrednost x>, <kon\u010dna vednost x>, <logi\u010dna vrednost> ]
Integral.SyntaxCAS=[ <funkcija> ]\n[ <funkcija>, <spremenljivka> ]\n[ <funkcija>, <spodnja meja>, <zgornja meja> ]\n[ <funkcija>, <funkcija>, <spodnja meja>, <zgornja meja> ]\n[ <funkcija>, <funkcija>, <spodnja meja>, <zgornja meja>, <logi\u010dna vrednost> ]
IntegralBetween=IntegralMed
IntegralBetween.Syntax=[ <funkcija>, <funkcija>, <spodnja meja>, <zgornja meja> ]\n[ <funkcija>, <funkcija>, <spodnja meja>, <zgornja meja>, <logi\u010dna vrednost> ]
IntegralBetween.SyntaxCAS=[ <funkcija>, <funkcija>, <spodnja meja>, <zgornja meja> ]\n[ <funkcija>, <funkcija>, <spremenljivka>, <spodnja meja>, <zgornja meja> ]
Intersect=Prese\u010di\u0161\u010de
Intersect.Syntax=[ <objekt>, <objekt> ]\n[ <seznam>, <seznam> ]\n[ <objekt>, <objekt>, <\u0161tevilo> ]\n[ <objekt>, <objekt>, <za\u010detna to\u010dka> ]\n[ <funkcija>, <funkcija>, <za\u010detna vrednost x>, <kon\u010dna vrednost x> ]
Intersect.SyntaxCAS=[ <funkcija>, <funkcija> ]
IntersectPath=Prese\u010di\u0161\u010dePoti
IntersectPath.Syntax=[ <\u010drta>, <mnogokotnik> ]\n[ <\u010drta>, <sto\u017enica> ]
IntersectPath.Syntax3D=[ <premica>, <poligon> ]\n[ <premica>, <sto\u017eec> ]\n[ <ravnina>, <poligon> ]\n[ <ravnina>, <ploskev> ]
IntersectRegion=PresekMnogokotnikov
IntersectRegion.Syntax=[ <mnogokotnik>, <mnogokotnik> ]
IntersectRegion.Syntax3D=[ <Mnogokotnik>, <Mnogokotnik> ]\n[ <Telo>, <Ravnina> ]
Intersection=Presek
Intersection.Syntax=[ <seznam>, <seznam> ]
InverseBinomial=InverznaBinomskaPorazdelitev
InverseBinomial.Syntax=[ <\u0161tevilo poskusov>, <verjetnost dogodka>, <verjetnost> ]
InverseCauchy=InverznaCauchyjevaPorazdelitev
InverseCauchy.Syntax=[ <mediana>, <faktor>, <verjetnost> ]
InverseChiSquared=InverznaHiKvadrat
InverseChiSquared.Syntax=[ <prostostne stopnje>, <verjetnost> ]
InverseExponential=InverznaEksponentnaPorazdelitev
InverseExponential.Syntax=[ <lambda>, <verjetnost> ]
InverseFDistribution=InverznaFPorazdelitev
InverseFDistribution.Syntax=[ <prostostne stopnje v \u0161tevcu>, <prostostne stopnje v imenovalcu>, <verjetnost> ]
InverseGamma=InverznaGamaPorazdelitev
InverseGamma.Syntax=[ <alfa>, <beta>, <verjetnost> ]
InverseHyperGeometric=InverznaHiperGeometri\u010dnaPorazdelitev
InverseHyperGeometric.Syntax=[ <velikost populacije>, <\u0161tevilo ustreznih>, <velikost vzorca>, <verjetnost> ]
InverseLogNormal=InverznaLogNormalna
InverseLogNormal.Syntax=[ <srednja vrednost>, <standardni odklon>, <verjetnost> ]
InverseLogistic=InverznaLogisti\u010dna
InverseLogistic.Syntax=[ <srednja vrednost>, <vrednost>, <verjetnost> ]
InverseNormal=InverznaNormalnaPorazdelitev
InverseNormal.Syntax=[ <srednja vrednost>, <standardna deviacija>, <verjetnost> ]
InversePascal=InverznaPascalovaPorazdelitev
InversePascal.Syntax=[ <\u0161tevilo dogodkov>, <verjetnost dogodka>, <verjetnost> ]
InversePoisson=InverznaPissonovaPorazdelitev
InversePoisson.Syntax=[ <srednja vrednost>, <verjetnost> ]
InverseTDistribution=InverznaTPorazdelitev
InverseTDistribution.Syntax=[ <prostostne stopnje>, <verjetnost> ]
InverseWeibull=InverznaWeibullovaPorazdelitev
InverseWeibull.Syntax=[ <oblika>, <faktor>, <verjetnost> ]
InverseZipf=InverznaZipf
InverseZipf.Syntax=[ <\u0161tevilo elementov>, <eksponent>, <verjetnost> ]
Invert=Inverzna
Invert.Syntax=[ <matrika> ]\n[ <funkcija> ]
IsInRegion=JeVObmo\u010dju
IsInRegion.Syntax=[ <to\u010dka>, <obmo\u010dje> ]
IsInteger=JeCelo\u0160tevilo
IsInteger.Syntax=[ <\u0161tevilo> ]
IsPrime=JePra\u0161tevilo
IsPrime.Syntax=[ <\u0161tevilo> ]
Iteration=Ponavljaj
Iteration.Syntax=[ <funkcija>, <za\u010detna-vrednost>, <\u0161tevilo ponovitev> ]
IterationList=SeznamPonavljanj
IterationList.Syntax=[ <funkcija>, <za\u010detna vrednost>, <\u0161tevilo ponovitev> ]
Join=Zdru\u017ei
Join.Syntax=[ <seznam seznamov> ]\n[ <seznam>, <seznam>, ... ]
KeepIf=Shrani\u010ce
KeepIf.Syntax=[ <pogoj>, <seznam> ]\n[ <pogoj>, <spremenljivka>, <seznam> ]
LCM=NSV
LCM.Syntax=[ <seznam \u0161tevil> ]\n[ <\u0161tevilo>, <\u0161tevilo> ]
LCM.SyntaxCAS=[ <seznam \u0161tevil> ]\n[ <seznam polinomov> ]\n[ <\u0161tevilo>, <\u0161tevilo> ]\n[ <polinom>, <polinom> ]
LaTeX=Formula
LaTeX.Syntax=[ <objekt> ]\n[ <objekt>, <logi\u010dna vrednost za zamenjavo spremenljivk> ]\n[ <objekt>, <logi\u010dna vrednost za zamenjavo spremenljivk>, <logi\u010dna vrednost - prikaz imena> ]
Last=ZadnjiElement
Last.Syntax=[ <seznam> ]\n[ <tekst> ]\n[ <seznam>, <\u0161tevilo> ]\n[ <tekst>, <\u0161tevilo> ]
Last.SyntaxCAS=[ <seznam> ]\n[ <seznam>, <\u0161tevilo> ]
LeftSide=LevaStran
LeftSide.Syntax=[ <ena\u010dba> ]
LeftSide.SyntaxCAS=[ <ena\u010dba> ]\n[ <seznam ena\u010db> ]\n[ <seznam ena\u010db>, <indeks> ]
LeftSum=LevaVsota
LeftSum.Syntax=[ <funkcija>, <za\u010detna vrednost x>, <kon\u010dna vrednost x>, <\u0161tevilo pravokotnikov> ]
Length=Dol\u017eina
Length.Syntax=[ <vektor> ]\n[ <to\u010dka> ]\n[ <seznam> ]\n[ <tekst> ]\n[ <sled> ]\n[ <funkcija>, <za\u010detna vrednost x>, <kon\u010dna vrednost x> ]\n[ <funkcija>, <za\u010detna to\u010dka>, <kon\u010dna to\u010dka> ]\n[ <krivulja>, <za\u010detna vrednost t>, <kon\u010dna vrednost t> ]\n[ <krivulja>, <za\u010detna to\u010dka>, <kon\u010dna to\u010dka> ]
Length.SyntaxCAS=[ <funkcija>, <za\u010detna vrednost x>, <kon\u010dna vrednost x> ]\n[ <krivulja>, <za\u010detna vrednost x>, <kon\u010dna vrednost x> ]\n[ <funkcija>, <spremenljivka>, <za\u010detna to\u010dka>, <kon\u010dna to\u010dka> ]\n[ <krivulja>, <spremenljivka>, <za\u010detna to\u010dka>, <kon\u010dna to\u010dka> ]
LetterToUnicode=\u010crkaVUnicode
LetterToUnicode.Syntax=[ <tekst> ]
Limit=Limita
Limit.Syntax=[ <funkcija>, <vrednost> ]
Limit.SyntaxCAS=[ <izraz>, <spremenljivka>, <vrednost ali neskon\u010dno> ]\n[ <izraz>, <spremenljivka>, <vrednost ali neskon\u010dno>, <leva ali desna> ]
LimitAbove=LimitaDesna
LimitAbove.Syntax=[ <funkcija>, <vrednost> ]
LimitAbove.SyntaxCAS=[ <izraz>, <spremenljivka>, <vrednost> ]
LimitBelow=LimitaLeva
LimitBelow.Syntax=[ <funkcija>, <vrednost> ]
LimitBelow.SyntaxCAS=[ <izraz>, <spremenljivka>, <vrednost> ]
Line=Premica
Line.Syntax=[ <to\u010dka>, <to\u010dka> ]\n[ <to\u010dka>, <vzporednica> ]\n[ <to\u010dka>, <smerni vektor> ]
LineBisector=SimetralaDaljice
LineBisector.Syntax=[ <daljica> ]\n[ <to\u010dka>, <to\u010dka> ]
Locus=Sled
Locus.Syntax=[ <to\u010dka za premico>, <to\u010dka> ]\n[ <to\u010dka za premico>, <Slider> ]\n[ <polje nagibov>, <to\u010dka> ]\n[ <f(x, y)>, <to\u010dka> ]
LocusEquation=Ena\u010dba
LocusEquation.Syntax=[ <geometrijsko mesto to\u010dk> ]\n[ <geometrijsko mesto to\u010dk>, <to\u010dka za premikanje> ]
LogNormal=LogNormalnaPorazdelitev
LogNormal.Syntax=[ <srednja vrednost>, <standardna deviacija>, x ]\n[ <srednja vrednost>, <standardna deviacija>, x, <logi\u010dna vrednost zbirno> ]\n[ <srednja vrednost>, <standardna deviacija>, x, <vrednost spremenljivke> ]
Logistic=Logisti\u010dnaKrivulja
Logistic.Syntax=[ <srednja vrednost>, <faktor>, x ]\n[ <srednja vrednost>, <faktor>, <vrednost spremenljivke> ]\n[ <srednja vrednost>, <faktor>, x, <logi\u010dna vrednost zbirno> ]
LowerSum=SpodnjaVsota
LowerSum.Syntax=[ <funkcija>, <za\u010detna vrednost za x>, <kon\u010dna vrednost za x>, <\u0161tevilo pravokotnikov> ]
MatrixRank=RangMatrike
MatrixRank.Syntax=[ <matrika> ]
Max=Maksimum
Max.Syntax=[ <interval> ]\n[ <seznam> ]\n[ <\u0161tevilo>, <\u0161tevilo> ]\n[ <seznam podatkov>, <seznam frekvenc> ]\n[ <funkcij>, <za\u010detna vrednost x>, <kon\u010dna vrednost x> ]
Max.SyntaxCAS=[ <seznam> ]\n[ <\u0161tevilo>, <\u0161tevilo> ]
Maximize=Maksimiraj
Maximize.Syntax=[ <odvisno \u0161tevilo>, <prosto \u0161tevilo> ]
Mean=Povpre\u010dnaVrednost
Mean.Syntax=[ <seznam vrstic s podatki> ]\n[ <seznam \u0161tevil>, <seznam frekvenc> ]
Mean.SyntaxCAS=[ <seznam \u0161tevil> ]
MeanX=Povpre\u010dnaVrednostX
MeanX.Syntax=[ <seznam to\u010dk> ]
MeanY=Povpre\u010dnaVrednostY
MeanY.Syntax=[ <seznam to\u010dk> ]
Median=Mediana
Median.Syntax=[ <seznam vrstic s podatki> ]\n[ <seznam \u0161tevil>, <seznam frekvenc> ]
Median.SyntaxCAS=[ <seznam \u0161tevil> ]
Midpoint=Sredi\u0161\u010de
Midpoint.Syntax=[ <daljica> ]\n[ <sto\u017enica> ]\n[ <interval> ]\n[ <to\u010dka>, <to\u010dka> ]
Min=Minimum
Min.Syntax=[ <interval> ]\n[ <seznam> ]\n[ <\u0161tevila>, <\u0161tevila> ]\n[ <seznam podatkov>, <seznam frekvenc> ]\n[ <funkcij>, <za\u010detna vrednost x>, <kon\u010dna vrednost x> ]
Min.SyntaxCAS=[ <seznam> ]\n[ <\u0161tevilo>, <\u0161tevilo> ]
Minimize=Minimiraj
Minimize.Syntax=[ <odvisno \u0161tevilo>, <prosto \u0161tevilo> ]
MinimumSpanningTree=MinimalnoVpetoDrevo
MinimumSpanningTree.Syntax=[ <seznam to\u010dk> ]
Mirror=Zrcaljenje
Mirror.Syntax=[ <objekt>, <to\u010dka> ]\n[ <objekt>, <premica> ]\n[ <to\u010dka>, <kro\u017enica> ]
MixedNumber=PraviUlomek
MixedNumber.SyntaxCAS=[ <izraz> ]
Mod=Ostanek
Mod.Syntax=[ <deljenec>, <delitelj> ]\n[ <polinom deljenec>, <polinom delitelj> ]
Mode=Modus
Mode.Syntax=[ <seznam \u0161tevil> ]
NIntegral=Numeri\u010dniIntegral
NIntegral.SyntaxCAS=[ <funkcija>, <za\u010detna vrednost x>, <kon\u010dna vrednost x> ]\n[ <funkcija>, <spremenljivka>, <za\u010detna vrednost>, <kon\u010dna vrednost> ]
NSolutions=Numeri\u010dneRe\u0161itve
NSolutions.SyntaxCAS=[ <ena\u010dba> ]
NSolve=Re\u0161iNumeri\u010dno
NSolve.SyntaxCAS=[ <ena\u010dba> ]\n[ <ena\u010dba>, <spremenljivka> ]\n[ <ena\u010dba>, <spremenljivka=za\u010detna vrednost> ]\n[ <seznam ena\u010db>, <seznam spremenljivk> ]
Name=Ime
Name.Syntax=[ <objekt> ]
NextPrime=NaslednjePra\u0161tevilo
NextPrime.Syntax=[ <\u0161tevilo> ]
Normal=NormalnaPorazdelitev
Normal.Syntax=[ <srednja vrednost>, <standardna deviacija>, x ]\n[ <srednja vrednost>, <standardna deviacija>, <vrednost spremenljivke> ]\n[ <srednja vrednost>, <standardna deviacija>, x, <logi\u010dna vrednost zbirno> ]
Normal.SyntaxCAS=[ <srednja vrednost>, <standardna deviacija>, <vrednost spremenljivke> ]
NormalQuantilePlot=DiagramKvantilovNormalnePorazdelitve
NormalQuantilePlot.Syntax=[ <seznam vrstic s podatki> ]
Numerator=\u0160tevec
Numerator.Syntax=[ <funkcija> ]
Numerator.SyntaxCAS=[ <izraz> ]
Numeric=Numeri\u010dnaVrednost
Numeric.SyntaxCAS=[ <izraz> ]\n[ <izraz>, <zna\u010dilna mesta> ]
Object=Objekt
Object.Syntax=[ <ime objekta, kot tekst> ]
Octahedron=Oktaeder
Octahedron.Syntax=[ <To\u010dka>, <To\u010dka> ]\n[ <To\u010dka>, <To\u010dka>, <Smer> ]
Ordinal=Vrstilni\u0160tevnik
Ordinal.Syntax=[ <celo \u0161tevilo> ]
OrdinalRank=RangiranjeElementov
OrdinalRank.Syntax=[ <seznam> ]
OrthogonalLine=Pravokotnica
OrthogonalLine.Syntax=[ <to\u010dka>, <premica> ]\n[ <to\u010dka>, <daljica> ]\n[ <to\u010dka>, <vektor> ]
OrthogonalLine.Syntax3D=[ <to\u010dka>, <premica> ]\n[ <to\u010dka>, <daljica> ]\n[ <to\u010dka>, <vektor> ]\n[ <to\u010dka>, <ravnina> ]\n[ <premica>, <premica> ]\n[ <to\u010dka>, <premica>, <premica> ]\n[ <to\u010dka>, <vektor>, <vektor> ]\n[ <to\u010dka>, <premica>, <kontekst> ]
OrthogonalVector=NormalniVektor
OrthogonalVector.Syntax=[ <premica> ]\n[ <daljiica> ]\n[ <vektor> ]
OrthogonalVector.SyntaxCAS=[ <vektor> ]
OsculatingCircle=PritisnjenKrog
OsculatingCircle.Syntax=[ <to\u010dka>, <funkcija> ]\n[ <to\u010dka>, <krivulja> ]
PMCC=KorelacijskiKoeficient
PMCC.Syntax=[ <seznam to\u010dk> ]\n[ <seznam x koordinat>, <seznam y koordinat> ]
Pan=PremaknjenPogled
Parabola.Syntax=[ <gori\u0161\u010de>, <vodnica> ]
ParametricDerivative=Parametri\u010dniOdvod
ParametricDerivative.Syntax=[ <krivulja> ]
ParseToFunction=Raz\u010dleniFunkcijo
ParseToFunction.Syntax=[ <funkcija>, <niz> ]
ParseToNumber=Raz\u010dleni\u0160tevilo
ParseToNumber.Syntax=[ <\u0161tevilo>, <niz> ]
PartialFractions=ParcialniUlomki
PartialFractions.Syntax=[ <funkcija> ]
PartialFractions.SyntaxCAS=[ <funkcija> ]
Pascal=PascalovaPorazdellitev
Pascal.Syntax=[ <\u0161tevilo ugodnih>, <verjetnost> ]\n[ <\u0161tevilo ugodnih>, <verjetnost>, <logi\u010dna vrednost zbirno> ]\n[ <\u0161tevilo ugodnih>, <verjetnost>, <vrednost spremenljivke>, <logi\u010dna vrednost zbirno> ]
Pascal.SyntaxCAS=[ <\u0161tevilo ugodnih>, <verjetnost>, <vrednost spremenljivke>, <logi\u010dna vrednost zbirno> ]
PathParameter=ParameterPoti
PathParameter.Syntax=[ <to\u010dka na sledi> ]
Percentile=Centil
Percentile.Syntax=[ <seznam \u0161tevil>, <odstotek> ]
Perimeter=Obseg
Perimeter.Syntax=[ <mnogokotnik> ]\n[ <sto\u017enica> ]\n[ <sled> ]
PerpendicularPlane=PravokotnaRavnina
PerpendicularPlane.Syntax=[ <to\u010dka>, <premica> ]\n[ <to\u010dka>, <vektor> ]
Plane=Ravnina
Plane.Syntax=[ <to\u010dka>, <ravnina> ]\n[ <to\u010dka>, <premica> ]\n[ <to\u010dka>, <to\u010dka>, <to\u010dka> ]
PlaneBisector=SimetralaRavnine
PlaySound=Zvok
PlaySound.Syntax=[ <datoteka> ]\n[ <zaporedje>, <glasbilo> ]\n[ <ton>, <trajanje>, <glasbilo> ]\n[ <funkcija>, <od>, <do> ]\n[ <funkcija>, <od>, <do>, <frekvenca vzorca>, <globina vzorca> ]
Point=To\u010dka
Point.Syntax=[ <objekt> ]\n[ <objekt>, <parameter> ]\n[ <to\u010dka>, <vektor> ]
PointIn=To\u010dkaV
PointIn.Syntax=[ <obmo\u010dje> ]
PointList=SeznamTo\u010dk
PointList.Syntax=[ <seznam> ]
Poisson=PoissonovaPorazdelitev
Poisson.Syntax=[ <srednja vrednost> ]\n[ <srednja vrednost>, <logi\u010dna vrednost zbirno> ]\n[ <srednja vrednost>, <vrednost spremenljivke>, <logi\u010dna vrednost zbirno> ]
Poisson.SyntaxCAS=[ <srednja vrednost>, <vrednost spremenljivke>, <logi\u010dna vrednost zbirno> ]
Polar=Polara
Polar.Syntax=[ <to\u010dka>, <sto\u017enica> ]
PolyLine=Lomljena\u010crta
PolyLine.Syntax=[ <seznam to\u010dk> ]\n[ <to\u010dka>, ..., <to\u010dka> ]
Polygon=Mnogokotnik
Polygon.Syntax=[ <seznam to\u010dk> ]\n[ <to\u010dka>, ..., <to\u010dka> ]\n[ <to\u010dka>, <to\u010dka>, <\u0161tevilo ogli\u0161\u010d> ]
Polyhedron=Polieder
Polyhedron.Syntax=[ <to\u010dka>, <to\u010dka>, ... ]
Polynomial=Polinom
Polynomial.Syntax=[ <funkcija> ]\n[ <seznam to\u010dk> ]
PreviousPrime=Prej\u0161njePra\u0161tevilo
PreviousPrime.Syntax=[ <\u0161tevilo> ]
PrimeFactors=Pra\u0161tevilskiRazcep
PrimeFactors.Syntax=[ <\u0161tevilo> ]
Prism=Prizma
Prism.Syntax=[ <mnogokotnik>, <to\u010dka> ]\n[ <mnogokotnik>, <vi\u0161ina> ]\n[ <to\u010dka>, <to\u010dka>, ... ]
Product=Produkt
Product.Syntax=[ <seznam vrstic s podatki> ]\n[ <seznam \u0161tevil>, <seznam frekvenc> ]
Product.SyntaxCAS=[ <seznam izrazov> ]\n[ <izraz>, <spremenljivka>, <za\u010detni indeks>, <kon\u010dni indeks> ]
Prove=Preveri
Prove.Syntax=[ <logi\u010dni izraz> ]
ProveDetails=PodrobnostiDokaza
ProveDetails.Syntax=[ <logi\u010dni izraz> ]
Pyramid=Piramida
Pyramid.Syntax=[ <mnogokotnik>, <point> ]\n[ <mnogokotnik>, <vi\u0161ina> ]\n[ <To\u010dka>, <To\u010dka>, <To\u010dka>, <To\u010dka>, ... ]
Q1.Syntax=[ <seznam vrstic s podatki> ]\n[ <seznam \u0161tevil>, <seznam frekvenc> ]
Q3.Syntax=[ <seznam vrstic s podatki> ]\n[ <seznam \u0161tevil>, <seznam frekvenc> ]
QuadricSide=MejnaPloskev
RSquare=RKvadrat
RSquare.Syntax=[ <seznam to\u010dk>, <funkcija> ]
Radius=Polmer
Radius.Syntax=[ <sto\u017enica> ]
Random=Naklju\u010dno\u0160teviloMed
Random.Syntax=[ <za\u010detno celo \u0161tevilo>, <kon\u010dno celo \u0161tevilo> ]\n[ <za\u010detno celo \u0161tevilo>, <kon\u010dno celo \u0161tevilo>, <Boolean za fiksno> ]
Random.SyntaxCAS=[ <minimalno celo \u0161tevilo>, <maksimalno celo \u0161tevilo> ]
RandomBinomial=Naklju\u010dnaBinomskaPorazdelitev
RandomBinomial.Syntax=[ <\u0161tevilo poskusov>, <verjetnost> ]
RandomElement=Naklju\u010dniElement
RandomElement.Syntax=[ <seznam> ]
RandomNormal=Naklju\u010dnaNormalnaPorazdelitev
RandomNormal.Syntax=[ <srednja vrednost>, <standardna deviacija> ]
RandomPoisson=Naklju\u010dnaPoissonovaPorazdelitev
RandomPoisson.Syntax=[ <povpre\u010dna vrednost> ]
RandomPolynomial=Naklju\u010dnaPolinomskaPorazdelitev
RandomPolynomial.Syntax=[ <stopnja>, <najmanj\u0161i koeficient>, <najve\u010dji koeficient> ]
RandomPolynomial.SyntaxCAS=[ <stopnja>, <spodnja meja koeficientov>, <zgornja meja koeficientov> ]\n[ <spremenljivka>, <stopnja>, <spodnja meja koeficientov>, <zgornja meja koeficientov> ]
RandomUniform=Slu\u010dajnoUniformno\u0160tevilo
RandomUniform.Syntax=[ <min>, <maks> ]
Rationalize=Racionaliziraj
Rationalize.SyntaxCAS=[ <\u0161tevilo> ]
Ray=Poltrak
Ray.Syntax=[ <za\u010detna to\u010dka>, <to\u010dka> ]\n[ <za\u010detna to\u010dka>, <vektor> ]
RectangleSum=VsotaPlo\u0161\u010dinPravokotnikov
RectangleSum.Syntax=[ <funkcija>, <za\u010detna vrednost x>, <kon\u010dna vrednost x>, <\u0161tevilo pravokotnikov>, <prese\u010di\u0161\u010de pravokotnika s funkcijo> ]
ReducedRowEchelonForm=Re\u0161itvenaMatrika
ReducedRowEchelonForm.Syntax=[ <matrika> ]
Relation=Relacija
Relation.Syntax=[ <objekt>, <objekt> ]
RemoveUndefined=OdstraniNedefinirane
RemoveUndefined.Syntax=[ <seznam> ]
Rename=Preimenuj
Rename.Syntax=[ <objekt>, <ime> ]
ResidualPlot=DiagramRazpr\u0161enosti
ResidualPlot.Syntax=[ <seznam to\u010dk>, <funkcija> ]
Reverse=ObratniSeznam
Reverse.Syntax=[ <seznam> ]
RightSide=DesnaStran
RightSide.Syntax=[ <ena\u010dba> ]
RightSide.SyntaxCAS=[ <ena\u010dba> ]\n[ <seznam ena\u010db> ]\n[ <seznam ena\u010db>, <indeks> ]
RigidPolygon=TogiMnogokotnik
RigidPolygon.Syntax=[ <poligon> ]\n[ <poligon>, <Offset x>, <Offset y> ]\n[ <prosta to\u010dka>, ..., <prosta to\u010dka> ]
Root=Ni\u010dla
Root.Syntax=[ <polinom> ]\n[ <funkcija>, <za\u010detna vrednost x> ]\n[ <funkcija>, <za\u010detna vrednost x>, <kon\u010dna vrednost x> ]
Root.SyntaxCAS=[ <polinom> ]
RootList=Ni\u010dle
RootList.Syntax=[ <seznam> ]
RootMeanSquare=KorenPovpre\u010djaKvadratov
RootMeanSquare.Syntax=[ <seznam \u0161tevil> ]
Roots=Koreni
Roots.Syntax=[ <funkcija>, <za\u010detna vrednost x>, <kon\u010dna vrednost x> ]
Rotate=Zasuk
Rotate.Syntax=[ <objekt>, <kot> ]\n[ <objekt>, <kot>, <to\u010dka> ]
RotateText=ZasukTeksta
RotateText.Syntax=[ <tekst>, <kot> ]
Row=Vrstica
Row.Syntax=[ <celica tabele> ]
SD=StandardniOdklon
SD.Syntax=[ <seznam vrstic s podatki> ]\n[ <seznam \u0161tevil>, <seznam frekvenc> ]
SDX=StandardniOdklonX
SDX.Syntax=[ <seznam to\u010dk> ]
SDY=StandardniOdklonY
SDY.Syntax=[ <seznam to\u010dk> ]
SXX=SXX
SXX.Syntax=[ <seznam \u0161tevil> ]\n[ <seznam to\u010dk> ]
SXY=SXY
SXY.Syntax=[ <seznam to\u010dk> ]\n[ <seznam \u0161tevil>, <seznam \u0161tevil> ]
SYY=SYY
SYY.Syntax=[ <seznam \u0161tevil> ]\n[ <seznam to\u010dk> ]
Sample=Vzorec
Sample.Syntax=[ <seznam>, <velikost> ]\n[ <seznam>, <velikost>, <logi\u010dna vrednost z zamenjavo> ]
SampleSD=StandardniOdklonVzorca
SampleSD.Syntax=[ <seznam vrstic s podatki> ]\n[ <seznam \u0161tevil>, <seznam frekvenc> ]
SampleSD.SyntaxCAS=[ <seznam \u0161tevil> ]
SampleSDX=StandardniOdklonVzorcaX
SampleSDX.Syntax=[ <seznam to\u010dk> ]
SampleSDY=StandardniOdklonVzorcaY
SampleSDY.Syntax=[ <seznam to\u010dk> ]
SampleVariance=VariancaVzorca
SampleVariance.Syntax=[ <seznam vrstic s podatki> ]\n[ <seznam \u0161tevil>, <seznam frekvenc> ]
SampleVariance.SyntaxCAS=[ <seznam \u0161tevil> ]
ScientificText=ZnanstveniTekst
ScientificText.Syntax=[ <\u0161tevilo> ]\n[ <\u0161tevilo>, <natan\u010dnost> ]
SecondAxis=DrugaOs
SecondAxis.Syntax=[ <sto\u017enica> ]
SecondAxisLength=Dol\u017einaDrugePolosi
SecondAxisLength.Syntax=[ <sto\u017enica> ]
Sector=Izsek
Sector.Syntax=[ <sto\u017enica>, <to\u010dka>, <to\u010dka> ]\n[ <sto\u017enica>, <parameter>, <parameter> ]
Segment=Daljica
Segment.Syntax=[ <to\u010dka>, <to\u010dka> ]\n[ <to\u010dka>, <dol\u017eina> ]
SelectObjects=IzberiObjekt
SelectObjects.Syntax=[ <objekt>, <objekt>, ... ]
SelectedElement=IzbraniElement
SelectedElement.Syntax=[ <seznam> ]
SelectedIndex=IzbraniIndeks
SelectedIndex.Syntax=[ <seznam> ]
Semicircle=Polkro\u017enica
Semicircle.Syntax=[ <to\u010dka>, <to\u010dka> ]
Sequence=Zaporedje
Sequence.Syntax=[ <kon\u010dna vrednost> ]\n[ <izraz>, <spremenljivka>, <za\u010detna vrednost>, <kon\u010dna vrednost> ]\n[ <izraz>, <spremenljivka>, <za\u010detna vrednost>, <kon\u010dna vrednost>, <korak> ]
SetActiveView=Dolo\u010diPogled
SetActiveView.Syntax=[ <\u0161tevilo> ]
SetAxesRatio=Dolo\u010diRazmerjeOsi
SetAxesRatio.Syntax=[ <\u0161tevilo>, <\u0161tevilo> ]
SetAxesRatio.Syntax3D=[ <\u0161tevilo>, <\u0161tevilo> ]\n[ <\u0161tevilo>, <\u0161tevilo>, <\u0161tevilo> ]
SetBackgroundColor=BarvaOzadja
SetBackgroundColor.Syntax=[ <objekt>, "<Barva>" ]\n[ <objekt>, <Rde\u010da>, <Zelena>, <Modra> ]
SetCaption=Dolo\u010diNaslov
SetCaption.Syntax=[ <objekt>, <tekst> ]
SetColor=Dolo\u010diBarvo
SetColor.Syntax=[ <objekt>, "<Barva>" ]\n[ <objekt>, <rde\u010da>, <zelena>, <modra> ]
SetConditionToShowObject=Dolo\u010diPogojZaPrikaz
SetConditionToShowObject.Syntax=[ <objekt>, <pogoj> ]
SetCoords=Dolo\u010diKoordinate
SetCoords.Syntax=[ <to\u010dka>, <x>, <y> ]
SetDynamicColor=Dolo\u010diDinami\u010dnoBarvo
SetDynamicColor.Syntax=[ <objekt>, <rde\u010da>, <zelena>, <modra> ]
SetFilling=Dolo\u010diProsojnost
SetFilling.Syntax=[ <objekt>, <\u0161tevilo> ]
SetFixed=Dolo\u010diFiksnost
SetFixed.Syntax=[ <objekt>, <true | false> ]
SetLabelMode=Dolo\u010diOzna\u010dbo
SetLabelMode.Syntax=[ <objekt>, <\u0161tevilo 0|1|2> ]
SetLayer=Dolo\u010diPlast
SetLayer.Syntax=[ <objekt>, <\u0161tevilo> ]
SetLineStyle=Dolo\u010diStilKrivulje
SetLineStyle.Syntax=[ <objekt>, <\u0161tevilo> ]
SetLineThickness=Dolo\u010diDebelinoKrivulje
SetLineThickness.Syntax=[ <objekt>, <\u0161tevilo> ]
SetPointSize=Dolo\u010diVelikostTo\u010dke
SetPointSize.Syntax=[ <to\u010dka>, <\u0161tevilo> ]
SetPointStyle=Dolo\u010diStilTo\u010dke
SetPointStyle.Syntax=[ <to\u010dka>, <\u0161tevilo> ]
SetSeed=NastaviSeme
SetSeed.Syntax=[ <celo \u0161tevilo> ]
SetTooltipMode=Dolo\u010diOblikoNamiga
SetTooltipMode.Syntax=[ <objekt>, <\u0161tevilo> ]
SetTrace=NastaviSled
SetTrace.Syntax=[ <objekt>, <res | ni res> ]
SetValue=Dolo\u010diVrednost
SetValue.Syntax=[ <logi\u010dna vrednost>, <0|1> ]\n[ <objekt>, <objekt> ]\n[ <seznam>, <\u0161tevilo>, <objekt> ]
SetVisibleInView=Dolo\u010diPrikaz
SetVisibleInView.Syntax=[ <objekt>, <pogled 1|2>, <logi\u010dna vrednost> ]
Shear=Strig
Shear.Syntax=[ <objekt>, <premica>, <razmerje> ]
ShortestDistance=Najkraj\u0161aRazdalja
ShortestDistance.Syntax=[ <seznam daljic>, <za\u010detna to\u010dka>, <kon\u010dna to\u010dka>, <logi\u010dna vrednost obte\u017eitev> ]
ShowAxes=Poka\u017eiOsi
ShowAxes.Syntax=[ ]\n[ <Boolean> ]\n[ <pogled>, <Boolean> ]
ShowGrid=Poka\u017eiMre\u017eo
ShowGrid.Syntax=[ ]\n[ <Boolean> ]\n[ <pogled>, <Boolean> ]
ShowLabel=Prika\u017eiOznako
ShowLabel.Syntax=[ <objekt>, <logi\u010dna vrednost> ]
ShowLayer=Poka\u017eiPlast
ShowLayer.Syntax=[ <\u0161tevilo> ]
Shuffle=Preme\u0161aj
Shuffle.Syntax=[ <seznam> ]
SigmaXX.Syntax=[ <seznam to\u010dk> ]\n[ <seznam vrstic s podatki> ]\n[ <seznam \u0161tevil>, <seznam frekvenc> ]
SigmaXY.Syntax=[ <seznam to\u010dk> ]\n[ <seznamx koordinat>, <seznam y koordinat> ]
SigmaYY.Syntax=[ <seznam to\u010dk> ]
Simplify=Poenostavi
Simplify.Syntax=[ <funkcija> ]\n[ <tekst> ]
Simplify.SyntaxCAS=[ <funkcija> ]
Slider=Drsnik
Slider.Syntax=[ <min>, <maks>, <priprastek>, <hitrost>, <\u0161irina>, <kot>, <smer>, <animacija>, <slu\u010dajno> ]
Slope=Nagib
Slope.Syntax=[ <premica> ]
SlopeField=PoljeNagibov
SlopeField.Syntax=[ <f(x, y)> ]\n[ <f(x, y)>, <\u0161tevilo n> ]\n[ <f(x, y)>, <\u0161tevilo n>, <dol\u017eina mno\u017eitelja a> ]\n[ <f(x, y)>, <\u0161tevilo n>, <dol\u017eina mno\u017eitelja a>, <min x>, <min y>, <maks x>, <maks y> ]
SlowPlot=GrafZDrsnikom
SlowPlot.Syntax=[ <funkcija> ]
Solutions=Re\u0161itve
Solutions.SyntaxCAS=[ <ena\u010dba> ]\n[ <ena\u010dba>, <spremenljivka> ]\n[ <seznam ena\u010db>, <seznam spremenljivk> ]
Solve=Re\u0161i
Solve.SyntaxCAS=[ <ena\u010dba z x> ]\n[ <ena\u010dba>, <spremenljivka> ]\n[ <seznam ena\u010db>, <seznam spremenljivk> ]
SolveODE=Re\u0161iDE
SolveODE.Syntax=[ <f'(x, y)>, <za\u010detni x>, <za\u010detni y>, <kon\u010dni x>, <korak> ]\n[ <y'>, <x'>, <za\u010detni x>, <za\u010detni y>, <kon\u010dni t>, <korak> ]\n[ <b(x)>, <c(x)>, <f(x)>, <za\u010detni x>, <za\u010detni y>, <za\u010detni y'>, <kon\u010dni x>, <korak> ]
SolveODE.SyntaxCAS=[ <ena\u010dba> ]\n[ <ena\u010dba>, <odvisna spremenljivka>, <neodvisna spremenljivka> ]
Sort=Uredi
Sort.Syntax=[ <seznam> ]\n[ <vrednosti>, <klju\u010d> ]
Spearman=SpearmanovKorelacijskiKoeficient
Spearman.Syntax=[ <seznam to\u010dk> ]\n[ <seznam \u0161tevil>, <seznam \u0161tevil> ]
Sphere=Sfera
Sphere.Syntax=[ <to\u010dka>, <polmer> ]
StartAnimation=Za\u010dniAnimacijo
StartAnimation.Syntax=[ ]\n[ <logi\u010dna vrednost> ]\n[ <drsnik ali to\u010dka>, <drsnik ali to\u010dka>, ... ]\n[ <drsnik ali to\u010dka>, <drsnik ali to\u010dka>, ..., <logi\u010dna vrednost> ]
StemPlot=DrevesniDiagram
StemPlot.Syntax=[ <seznam> ]\n[ <seznam>, <poravnava -1|0|1> ]
StepGraph=Kora\u010dnidiagram
StepGraph.Syntax=[ <seznam to\u010dk> ]\n[ <seznam to\u010dk>, <logi\u010dna pridru\u017eitev> ]\n[ <seznam x-koordinat>, <seznam y-koordinat> ]\n[ <seznam to\u010dk>, <logi\u010dna pridru\u017eitev>, <oblika to\u010dke> ]\n[ <seznam x-koordinat>, <seznam y-koordinat>, <logi\u010dna pridru\u017eitev> ]\n[ <seznam x-koordinat>, <seznam y-koordinat>, <logi\u010dna pridru\u017eitev>, <oblika to\u010dke> ]
StickGraph=LinijskiDiagram
StickGraph.Syntax=[ <seznam to\u010dk> ]\n[ <seznam to\u010dk>, <logi\u010dna vrednost za horizontalno> ]\n[ <seznam x-koordinat>, <seznam y-koordinat> ]\n[ <seznam x-koordinat>, <seznam y-koordinat>, <logi\u010dna vrednost za horizontalno> ]
Stretch=Razpoteg
Stretch.Syntax=[ <objekt>, <vektor> ]\n[ <objekt>, <premica>, <razmerje> ]
Substitute=Zamenjaj
Substitute.SyntaxCAS=[ <izraz>, <seznam zamenjav> ]\n[ <izraz>, <od>, <do> ]
Sum=Vsota
Sum.Syntax=[ <seznam> ]\n[ <seznam>, <\u0161tevilo elementov> ]\n[ <seznam>, <seznam frekvenc> ]
Sum.SyntaxCAS=[ <seznam> ]\n[ <izraz>, <spremenljivka>, <za\u010detna vrednost>, <kon\u010dna vrednost> ]
SumSquaredErrors=VsotaKvadratovNapak
SumSquaredErrors.Syntax=[ <seznam to\u010dk>, <funkcija> ]
SurdText=Matemati\u010dniZapis
SurdText.Syntax=[ <to\u010dka> ]\n[ <\u0161tevilo> ]\n[ <\u0161tevilo>, <seznam> ]
Surface=Ploskev
Surface.Syntax=[ <izraz>, <izraz>, <izraz>, <prarameter 1>, <Start Value>, <za\u010detna vrednost>, <parameter 2>, <za\u010detna vrednost>, <kon\u010dna vrednost> ]
TDistribution=TPorazdelitev
TDistribution.Syntax=[ <prostostne stopnje>, x ]\n[ <prostostne stopnje>, <vrednost spremenljivke> ]\n[ <prostostne stopnje>, x, <logi\u010dna vrednost zbirno> ]
TDistribution.SyntaxCAS=[ <prostostne stopnje>, <vrednost spremenljivke> ]
TMean2Estimate=Pri\u010dakovanaSrednjaVrednost2
TMean2Estimate.Syntax=[ <seznam podatkov vzorca 1>, <seznam podatkov vzorca 2>, <stopnja>, <logi\u010dna vrednost zdru\u017eeni> ]\n[ <srednja vrednost vzorca 1>, <standardni odklon vzorca 1>, <velikost vzorca 1>, <srednja vrednost vzorca 2>, <standardni odklon vzorca 2>, <velikost vzorca 2>, <stopnja>, <logi\u010dna vrednost zdru\u017eeni> ]
TMeanEstimate=Pri\u010dakovanaSrednjaVrednost
TMeanEstimate.Syntax=[ <seznam podatkov vzorca>, <stopnja> ]\n[ <srednja vrednost vzorca>, <standardnni odklon vzorca>, <velikost vzorca>, <stopnja> ]
TTest.Syntax=[ <seznam podatkov>, <verjetnost hipoteze>, <del> ]\n[ <srednja vrednost vzorca>, <standardni odklon vzorca>, <velikost vzorca>, <srednja vrednost hipoteze>, <del> ]
TTest2.Syntax=[ <seznam podatkov 1>, <seznam podatkov 2>, <del>, <logi\u010dna vrednost zdru\u017eeni> ]\n[ <srednja vrednost vzorca 1>, <standardni odklon vzorca 1>, <velikost vzorca 1>, <srednja vrednost vzorca 2>, <standardni odklon vzorca 2>, <velikost vzorca 2>, <del>, <logi\u010dna vrednost zdru\u017eeni> ]
TTestPaired=TTestPrimerjalno
TTestPaired.Syntax=[ <seznam podatkov 1>, <seznam podatkov 2>, <del> ]
TableText=TekstVTabeli
TableText.Syntax=[ <seznam>, <seznam>, ... ]\n[ <seznam>, <seznam>, ...<poravnava teksta> ]
Take=Podzaporedje
Take.Syntax=[ <seznam>, <za\u010detno mesto> ]\n[ <tekst>, <za\u010detno mesto> ]\n[ <seznam>, <za\u010detno mesto>, <kon\u010dno mesto> ]\n[ <tekst>, <za\u010detno mesto>, <kon\u010dno mesto> ]
Take.SyntaxCAS=[ <seznam>, <za\u010detna pozicija>, <kon\u010dna pozicija> ]
Tangent=Tangenta
Tangent.Syntax=[ <to\u010dka>, <sto\u017enica> ]\n[ <to\u010dka>, <funkcija> ]\n[ <to\u010dka>, <krivulja> ]\n[ <vrednost x>, <funkcija> ]\n[ <vzporednica>, <sto\u017enica> ]\n[ <vzporedna daljiica>, <sto\u017enica> ]
TaylorSeries=TaylorjevPolinom
TaylorSeries.Syntax=[ <funkcija>, <vrednost x>, <stopnja> ]
TaylorSeries.SyntaxCAS=[ <izraz>, <vrednost x>, <stopnja> ]\n[ <izraz>, <spremenljivka>, <vrednost spremenljivke>, <red> ]
Tetrahedron=Tetraeder
Tetrahedron.Syntax=[ <to\u010dka>, <to\u010dka> ]\n[ <to\u010dka>, <to\u010dka>, <smer> ]
Text=Tekst
Text.Syntax=[ <objekt> ]\n[ <objekt>, <logi\u010dna spremenljivka za zamenjavo> ]\n[ <objekt>, <to\u010dka> ]\n[ <objekt>, <to\u010dka>, <logi\u010dna spremenljivka za zamenjavo> ]\n[ <objekt>, <to\u010dka>, <logi\u010dna spremenljivka za zamenjavo>, <logi\u010dna spremenljivka za LaTeX formulo> ]
TextToUnicode=TekstVUnicode
TextToUnicode.Syntax=[ <tekst> ]
Textfield=TekstnoPolje
Textfield.Syntax=[ ]\n[ <povezan objekt> ]
TiedRank=VezaniRang
TiedRank.Syntax=[ <sznam> ]
ToBase=NovaOsnova
ToBase.Syntax=[ <\u0161tevilo>, <osnova> ]
ToComplex=VKompleksno
ToComplex.Syntax=[ <vektor> ]
ToExponential=KompleksnoEksponentno
ToExponential.SyntaxCAS=[ <kompleksno \u0161tevilo> ]
ToPoint=VTo\u010dko
ToPoint.Syntax=[ <kompleksno \u0161tevilo> ]
ToPolar=PolarniZapis
ToPolar.Syntax=[ <kompleksno \u0161tevilo> ]\n[ <vektor> ]
ToolImage=SlikaOrodja
ToolImage.Syntax=[ <\u0161tevilo> ]
Top=Zgoraj
Translate=VzporedniPremik
Translate.Syntax=[ <objekt>, <vektor> ]\n[ <vektor>, <za\u010detna to\u010dka> ]
Transpose=Transponiraj
Transpose.Syntax=[ <matrika> ]
TrapezoidalSum=TrapeznaFormula
TrapezoidalSum.Syntax=[ <funkcija>, <za\u010detna vrednost x>, <kon\u010dna vrednost x>, <\u0161tevilo delitev> ]
TravelingSalesman=TrgovskiPotnik
TravelingSalesman.Syntax=[ <seznam to\u010dk> ]
TriangleCenter=Te\u017ei\u0161\u010d\u010deTrikotnika
TriangleCenter.Syntax=[ <to\u010dka>, <to\u010dka>, <to\u010dka>, <\u0161tevilo> ]
TriangleCurve=Trikotni\u0161kaKrivulja
TriangleCurve.Syntax=[ <to\u010dka>, <to\u010dka>, <Poto\u010dkaint>, <ena\u010dba> ]
Triangular=TrikotnaPorazdelitev
Triangular.Syntax=[ <spodnja meja>, <zgornja meja>, <modus>, x ]\n[ <spodnja meja>, <zgornja meja>, <modus>, <vrednost spremenljivke> ]\n[ <spodnja meja>, <zgornja meja>, <modus>, x, <logi\u010dna vrednost zbirno> ]
TrigCombine=TrigonometrijskiIzraz
TrigCombine.Syntax=[ <izraz> ]\n[ <izraz>, <\u017eeljena funkcija> ]
TrigExpand=TrigonometrijskoRaz\u0161irjanje
TrigExpand.Syntax=[ <izraz> ]\n[ <izraz>, <ciljna funkcija> ]
TrigExpand.SyntaxCAS=[ <izraz> ]\n[ <izraz>, <\u017eeljena funkcija> ]\n[ <izraz>, <\u017eeljena funkcija>, <\u017eeljena spremenljivka> ]\n[ <izraz>, <\u017eeljena funkcija>, <\u017eeljena spremenljivka>, <\u017eeljena spremenljivka> ]
TrigSimplify=TrigonometrijskoPoenostavljanje
TrigSimplify.Syntax=[ <izraz> ]
Trilinear.Syntax=[ <izraz>, <izraz>, <izraz>, <\u0161tevilo>, <\u0161tevilo>, <\u0161tevilo> ]
TurningPoint=PrevojnaTo\u010dka
TurningPoint.Syntax=[ <polinom> ]
Turtle=\u017delvjaGrafika
Turtle.Syntax=[ ]
TurtleBack=\u017delvaNazaj
TurtleBack.Syntax=[ <\u017eelva>, <razdalja> ]
TurtleForward=\u017delvaNaprej
TurtleForward.Syntax=[ <\u017eelva>, <razdalja> ]
TurtleLeft=\u017delvaLevo
TurtleLeft.Syntax=[ <\u017eelva>, <kot> ]
TurtleRight=\u017delvaDesno
TurtleRight.Syntax=[ <\u017eelva>, <kot> ]
UnicodeToLetter=UnicodeV\u010crko
UnicodeToLetter.Syntax=[ <celo \u0161tevilo> ]
UnicodeToText=UnicodeVTekst
UnicodeToText.Syntax=[ <seznam celih \u0161tevil> ]
Uniform=ZveznaEnakomernaPorazdelitev
Uniform.Syntax=[ <spodnja meja>, <zgornja meja>, x ]\n[ <spodnja meja>, <zgornja meja>, <vrednost spremenljivke> ]\n[ <spodnja meja>, <zgornja meja>, x, <logi\u010dna vrednost zbirno> ]
Union=Unija
Union.Syntax=[ <seznam>, <seznam> ]
Unique=Zdru\u017eiEnake
Unique.Syntax=[ <seznam> ]
UnitOrthogonalVector=EnotskiNormalniVektor
UnitOrthogonalVector.Syntax=[ <premica> ]\n[ <daljica> ]\n[ <vektor> ]
UnitOrthogonalVector.SyntaxCAS=[ <vektor> ]
UnitVector=EnotskiVektor
UnitVector.Syntax=[ <vektor> ]\n[ <premica> ]\n[ <daljica> ]
UnitVector.SyntaxCAS=[ <vektor> ]
UpdateConstruction=Osve\u017eiKonstrukcijo
UpperSum=ZgornjaVsota
UpperSum.Syntax=[ <funkcija>, <za\u010detna vrednost x>, <kon\u010dna vrednost x>, <\u0161tevilo pravokotnikov> ]
Variance=Varianca
Variance.Syntax=[ <seznam vrstic s podatki> ]\n[ <seznam \u0161tevil>, <seznam frekvenc> ]
Variance.SyntaxCAS=[ <seznam \u0161tevil> ]
Vector=Vektor
Vector.Syntax=[ <to\u010dka> ]\n[ <za\u010detna to\u010dka>, <kon\u010dna to\u010dka> ]
Vertex=TemenaAliOgli\u0161\u010da
Vertex.Syntax=[ <sto\u017enica> ]\n[ <neena\u010dba> ]\n[ <poligon> ]\n[ <poligon>, <indeks> ]
VerticalText=Navpi\u010dniTekst
VerticalText.Syntax=[ <tekst> ]\n[ <tekst>, <to\u010dka> ]
Voronoi=VoronoievDiagram
Voronoi.Syntax=[ <seznam to\u010dk> ]
Weibull=WeibullovaPorazdelitev
Weibull.Syntax=[ <vzorec>, <faktor>, x ]\n[ <vzorec>, <faktor>, <vrednost spremenljivke> ]\n[ <vzorec>, <faktor>, x, <logi\u010dna vrednost zbirno> ]
Weibull.SyntaxCAS=[ <vzorec>, <faktor>, <vrednost spremenljivke> ]
ZMean2Estimate=ZTestZaupanja
ZMean2Estimate.Syntax=[ <vzorec podatkov 1>, <vzorec podatkov 2>, <\u03c31>, <\u03c32>, <stopnja> ]\n[ <vzorec povpre\u010dja 1>, <\u03c31>, <velikost vzorca 1>, <vzorec povpre\u010dja 2>, <\u03c32>, <velikost vzorca 2>, <stopnja> ]
ZMean2Test=ZTestDolo\u010di
ZMean2Test.Syntax=[ <vzorec 1>, <\u03c31>, <vzorec 2>, <\u03c32>, <Tail> ]\n[ <povpre\u010dje 1>, <\u03c31>, <velikost vzorca 1>, <povpre\u010dje 2>, <\u03c32>, <velikost vzorca 2>, <dolo\u010dilo> ]
ZMeanEstimate=ZIntervalZaupanja
ZMeanEstimate.Syntax=[ <vzorec podatkov>, <\u03c3>, <stopnja> ]\n[ <povpre\u010dje vzorca>, <\u03c3>, <velikost vzorca>, <stopnja> ]
ZMeanTest=ZTestPovpre\u010dja
ZMeanTest.Syntax=[ <vzorec podatkov>, <\u03c3>, <hipoteza povpre\u010dja>, <parameter> ]\n[ <povpre\u010dje vzorca>, <\u03c3>, <velikost vzorca>, <hipoteti\u010dno povpre\u010dje>, <dolo\u010dilo> ]
ZProportion2Estimate=ZDolo\u010danjeDele\u017ea
ZProportion2Estimate.Syntax=[ <dele\u017e vzorca 1>, <velikost vzorca 1>, <dele\u017e vzorca 2>, <velikost vzorca 2>, <stopnja> ]
ZProportion2Test=ZTestDele\u017eev
ZProportion2Test.Syntax=[ <vzorec dele\u017eev 1>, <velikost vzorca 1>, <vzorec dele\u017eev 2>, <velikost vzorca 2>, <dolo\u010dilo> ]
ZProportionEstimate=ZOcenaDele\u017eev
ZProportionEstimate.Syntax=[ <vzorec razmerja>, <velikost vzorca>, <stopnja> ]
ZProportionTest=ZTestDele\u017ea
ZProportionTest.Syntax=[ <vzorec razmerja>, <velikost vzorca>, <predvidena razmerja>, <razmerje> ]
Zip.Syntax=[ <izraz>, <sprem1>, <seznam1>, <sprem2>, <seznam2>, ... ]
Zipf.Syntax=[ <\u0161tevilo elementov>, <eksponent> ]\n[ <\u0161tevilo elementov>, <eksponent>, <logi\u010dna vrednost zbirno> ]\n[ <\u0161tevilo elementov>, <eksponent>, <vrednost spremenljivke>, <logi\u010dna vrednost zbirno> ]
Zipf.SyntaxCAS=[ <\u0161tevilo elementov>, <eksponent>, <vrednost spremenljivke>, <logi\u010dna vrednost zbirno> ]
ZoomIn=Pove\u010devanje
ZoomIn.Syntax=[ <faktor> ]\n[ <faktor>, <sredi\u0161\u010dna to\u010dka> ]\n[ <min x>, <min y>, <maks x>, <maks y> ]
ZoomOut=Pomanj\u0161evanje
ZoomOut.Syntax=[ <faktor> ]\n[ <faktor>, <sredi\u0161\u010dna to\u010dka> ]
nPr.Syntax=[ <\u0161tevilo>, <\u0161tevilo> ]