AngularBisector.Syntax=[ <Recta>, <Recta> ]\n[ <Punto inicial>, <Vértice>, <Punto final (en sentido antihorario)> ]
Barycenter=BaricentroBaremado
Binomial.Syntax=[ <Número n>, <Número r> ]
Binomial.SyntaxCAS=[ <Número n>, <Número r> ]
BinomialDist.Syntax=[ <Número de ensayos>, <Probabilidad de éxito> ]\n[ <Número de ensayos>, <Probabilidad de éxito>, <Acumulada o no (true/false)> ]\n[ <Número de ensayos>, <Probabilidad de éxito>, <Valor>, <Acumulada  o no (true/false)> ]
Button.Syntax=[ ]\n[ <Texto> ]
CSolutions.SyntaxCAS=[ <Ecuación> ]\n[ <Ecuación>, <Variable> ]\n[ <Lista de Ecuaciones>, <Lista de Variables> ]
Centroid=Baricentro
Checkbox.Syntax=[ ]\n[ <Texto> ]\n[ <Lista> ]\n[ <Texto>, <Lista> ]
Circle.Syntax=[ <Punto (centro)>, <Número(radio)> ]\n[ <Punto>, <Segmento> ]\n[ <Punto (centro)>, <Punto> ]\n[ <Punto>, <Punto>, <Punto> ]
Circle.Syntax3D=[ <Punto>, <Número (radio)> ]\n[ <Punto>, <Segmento> ]\n[ <Punto>, <Punto> ]\n[ <Recta>, <Punto> ]\n[ <Punto>, <Punto>, <Punto> ]\n[ <Punto>, <Radio>, <Dirección> ]\n[ <Punto>, <Punto>, <Dirección> ]
Circumference=Perímetro
ClosestPoint=PuntoMásCercano
Column.Syntax=[ <Celda de la Hoja de Cálculo> ]
ColumnName.Syntax=[ <Celda de la Hoja de Cálculo> ]
ConvexHull.Syntax=[ <Lista de Puntos> ]
Cubic.Syntax=[ <Punto>, <Punto>, <Punto>, <Número> ]
CurveCartesian.Syntax=[ <Expresión>, <Expresión>, <Parámetro>, <Valor inicial>, <Valor final> ]
DelauneyTriangulation.Syntax=[ <Lista de Puntos> ]
Diameter.Syntax=[ <Vector>, <Cónica> ]\n[ <Recta (dirección)>, <Cónica> ]
Direction.Syntax=[ <Recta> ]
Distance.Syntax=[ <Punto>, <Objeto> ]\n[ <Recta>, <Recta> ]
Expand.Syntax=[ <Expresión> ]
FractionText.Syntax=[ <Número> ]
Groebner=Gröbner
Hyperbola.Syntax=[ <Punto (foco)>, <Punto (foco)>, <Número (semieje mayor)> ]\n[ <Punto (foco)>, <Punto (foco)>, <Segmento (semieje mayor)> ]\n[ <Punto (foco)>, <Punto (foco)>, <Punto (en la hipérbola)> ]
IndexOf=ÍndiceDe
IntersectPath.Syntax=[ <Recta>, <Polígono> ]\n[ <Recta>, <Cónica> ]
InverseTDistribution.Syntax=[ <Grados de libertad>, <Probabilidad> ]
InverseZipf.Syntax=[ <Número de elementos>, <Exponente>, <Probabilidad> ]
IsInteger.Syntax=[ <Número> ]
LCM.Syntax=[ <Lista de números> ]\n[ <Número>, <Número> ]
LCM.SyntaxCAS=[ <Lista de números> ]\n[ <Lista de polinomios> ]\n[ <Número>, <Número> ]\n[ <Polinomio>, <Polinomio> ]
Last=Último
Length.SyntaxCAS=[ <Función o Curva>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]\n[ <Función o Curva>, <Variable>, <Punto Inicial>, <Punto Final> ]
Max.SyntaxCAS=[ <Lista> ]\n[ <Número>, <Número> ]
Min.SyntaxCAS=[ <Lista> ]\n[ <Número>, <Número> ]
Mod.Syntax=[ <Número (dividendo)>, <Número (divisor)> ]\n[ <Polinomio (dividendo)>, <Polinomio (divisor)> ]
NSolveODE.Syntax=[ <Lista de derivadas>, <Valor inicial de x>, <Lista de valores iniciales de y>, <Valor final de x> ]
Numeric=ValorDecimal
Numeric.SyntaxCAS=[ <Expresión> ]\n[ <Expresión>, <Número de cifras significativas> ]
OrthogonalVector.Syntax=[ <Recta> ]\n[ <Segmento> ]\n[ <Vector> ]
Parabola.Syntax=[ <Punto (foco)>, <Recta (directriz)> ]
Perimeter.Syntax=[ <Polígono> ]\n[ <Cônica> ]\n[ <Lugar geométrico> ]
Poisson.SyntaxCAS=[ <Media>, <Valor>, <Acumulada o no (true/false)> ]
PreviousPrime=PrimoAnterior
Random.Syntax=[ <Mínimo>, <Máximo> ]
RandomNormal=NormalAleatoria
RandomPoisson=PoissonAleatoria
RandomUniform=UniformeAleatoria
Row.Syntax=[ <Celda de la Hoja de Cálculo> ]
RunUpdateScript=EjecutaAlActualizar
SetActiveView.Syntax=[ <Número (1 ó 2)> ]
SetColor=Color
SetLabelMode=ModoEtiqueta
SetVisibleInView.Syntax=[ <Objeto>, <Número de Vista (1 ó 2)>, <Visible o no (true/false)> ]
Shear.Syntax=[ <Objeto>, <Recta>, <Razón> ]
ShowAxes=MuestraEjes
ShowAxes.Syntax=[ ]\n[ <Mostrar o no (true/false)> ]\n[ <Vista (1, 2 ó 3>, <Mostrar o no (true/false)> ]
ShowGrid=MuestraCuadrícula
ShowGrid.Syntax=[ ]\n[ <Mostrar o no (true/false)> ]\n[ <Vista 1|2|3>, <Mostrar o no (true/false)> ]
ShowLabel=MuestraEtiqueta
Slope.Syntax=[ <Recta> ]
SolveODE.Syntax=[ <f'(x, y)> ]\n[ <f'(x, y)>, <Punto en f> ]\n[ <f'(x, y)>, <x inicial>, <y inicial>, <x final>, <Paso> ]\n[ <y'>, <x'>, <x inicial>, <y inicial>, <t final>, <Paso> ]\n[ <b(x)>, <c(x)>, <f(x)>, <x inicial>, <y inicial>, <y' inicial>, <x final>, <Paso> ]
SolveODE.SyntaxCAS=[ <Ecuación> ]\n[ <Ecuación>, <Punto(s) de f> ]\n[ <Ecuación>, <Punto(s) de f>, <Punto(s) de f'> ]\n[ <Ecuación>, <Variable dependiente>, <Variable independiente>, <Punto(s) de f> ]\n[ <Ecuación>, <Variable dependiente>, <Variable independiente>, <Punto(s) de f>, <Punto(s) de f'> ]
Sort.Syntax=[ <Lista> ]\n[ <Lista>, <Lista modelo> ]
Spearman.Syntax=[ <Lista de puntos> ]\n[ <Lista de números>, <Lista de números> ]
Sphere.Syntax=[ <Punto>, <Número (radio)> ]
Spline.Syntax=[ <Lista de puntos> ]\n[ <Lista de puntos>, <Orden (mayor o igual que 3)> ]
StartAnimation.Syntax=[ ]\n[ <Animado o no (true/false)> ]\n[ <Deslizador o punto>, <Deslizador o punto>, ... ]\n[ <Deslizador o punto>, <Deslizador o punto>, ..., <Animados o no (true/false)> ]
StemPlot.Syntax=[ <Lista> ]\n[ <Lista>, <Ajuste (-1, 0 ó 1)> ]
StepGraph.Syntax=[ <Lista de puntos> ]\n[ <Lista de puntos>, <Conectados o no (true/false)> ]\n[ <Lista de x>, <Lista de y> ]\n[ <Lista de puntos>, <Conectados o no (true/false)>, <Estilo de punto> ]\n[ <Lista de x>, <Lista de y>, <Conectados o no (true/false)> ]\n[ <Lista de x>, <Lista de y>, <Conectados o no (true/false)>, <Estilo de punto> ]
StickGraph.Syntax=[ <Lista de puntos> ]\n[ <Lista de puntos>, <Horizontal o no (true/false)> ]\n[ <Lista de x>, <Lista de y> ]\n[ <Lista de x>, <Lista de y>, <Horizontal o no (true/false)> ]
Substitute.SyntaxCAS=[ <Expresión>, <Lista de reemplazos> ]\n[ <Expresión>, <De>, <A> ]
Sum.Syntax=[ <Lista> ]\n[ <Lista>, <Número de elementos> ]\n[ <Lista>, <Lista de frecuencias> ]
Sum.SyntaxCAS=[ <Lista> ]\n[ <Expresión>, <Variable>, <Valor inicial>, <Valor final> ]
SumSquaredErrors.Syntax=[ <Lista de puntos>, <Función> ]
Surface.Syntax=[ <Expresión>, <Expresión>, <Expresión>, <Parámetro 1>, <Valor inicial 1>, <Valor final 1>, <Parámetro 2>, <Valor inicial 2>, <Valor final 2> ]
TDistribution.Syntax=[ <Grados de libertad>, x ]\n[ <Grados de libertad>, <Valor> ]\n[ <Grados de libertad>, x, <Acumulada o no (true/false)> ]
TDistribution.SyntaxCAS=[ <Grados de libertad>, <Valor> ]
TMean2Estimate.Syntax=[ <Lista de datos (muestra 1)>, <Lista de datos (muestra 2)>, <Nivel>, <Agrupado o no (true/false)> ]\n[ <Media (muestral 1)>, <Desviación estándar (muestral 1)>, <Tamaño (muestra 1)>, <Media (muestral 2)>, <Desviación estándar (muestral 2)>, <Tamaño (muestra 2)>, <Nivel>, <Agrupado o no (true/false)> ]
TMeanEstimate.Syntax=[ <Lista de datos (muestra)>, <Nivel> ]\n[ <Media (muestra)>, <Desviación estándar (muestra)>, <Tamaño (muestra)>, <Nivel> ]
TTest.Syntax=[ <Lista de datos (muestra)>, <Media (hipótesis)>, <Cola> ]\n[ <Media (muestra)>, <Desviación estándar (muestra)>, <Tamaño (muestra)>, <Media (hipótesis)>, <Cola> ]
TTest2.Syntax=[ <Lista de datos (muestra 1)>, <Lista de datos (muestra 2)>, <Cola>, <Agrupado o no (true/false)> ]\n[ <Media (muestral 1)>, <Desviación estándar (muestra 1)>, <Tamaño (muestra 1)>, <Media (muestra 2)>, <Desviación estándar (muestra 2)>, <Tamaño (muestra 2)>, <Cola>, <Agrupado o no (true/false)> ]
TTestPaired.Syntax=[ <Lista de datos (muestra 1)>, <Lista de datos (muestra 2)>, <Cola> ]
TableText.Syntax=[ <Lista>, <Lista>, ... ]\n[ <Lista>, <Lista>, ..., <Alineación del texto> ]
Take.Syntax=[ <Lista>, <Posición inicial> ]\n[ <Texto>, <Posición inicial> ]\n[ <Lista>, <Posición inicial>, <Posición final> ]\n[ <Texto>, <Posición inicial>, <Posición final> ]
Take.SyntaxCAS=[ <Lista>, <Posición inicial>, <Posición final> ]
Tangent.Syntax=[ <Punto>, <Cónica> ]\n[ <Punto>, <Función> ]\n[ <Punto sobre la curva>, <Curva> ]\n[ <Valor de x (punto o número)>, <Función> ]\n[ <Recta (paralela)>, <Cónica> ]\n[ <Circunferencia>, <Circunferencia> ]
TaylorSeries.Syntax=[ <Función>, <Valor de x>, <Número (orden)> ]
TaylorSeries.SyntaxCAS=[ <Expresión>, <Valor de x>, <Número (orden)> ]\n[ <Expresión>, <Variable>, <Valor>, <Número (orden)> ]
Text.Syntax=[ <Objeto> ]\n[ <Objeto>, <Sustituye variables o no (true/false)> ]\n[ <Objeto>, <Punto> ]\n[ <Objeto>, <Punto>, <Sustituye variables o no (true/false)> ]\n[ <Objeto>, <Punto>, <Sustituye variables o no (true/false)>, <Fórmula LaTeX o no (true/false)> ]
Textfield.Syntax=[ ]\n[ <Objeto asociado> ]
ToPoint.Syntax=[ <Complejo> ]
ToPolar.Syntax=[ <Complejo> ]\n[ <Vector> ]
Top=Tapa
Translate.Syntax=[ <Objeto>, <Vector> ]\n[ <Vector>, <Punto inicial> ]
TrapezoidalSum.Syntax=[ <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo>, <Número de trapezoides> ]
TravelingSalesman.Syntax=[ <Lista de puntos> ]
TriangleCenter.Syntax=[ <Punto>, <Punto>, <Punto>, <Número (índice)> ]
TrigCombine.Syntax=[ <Expresión> ]\n[ <Expresión>, <Función modelo> ]
TrigExpand.Syntax=[ <Expresión> ]\n[ <Expresión>, <Función modelo> ]
TrigExpand.SyntaxCAS=[ <Expresión> ]\n[ <Expresión>, <Función modelo> ]\n[ <Expresión>, <Función modelo>, <Variable modelo> ]\n[ <Expresión>, <Función modelo>, <Variable modelo>, <Variable modelo> ]
Uniform.Syntax=[ <Límite inferior>, <Límite superior>, x ]\n[ <Límite inferior>, <Límite superior>, <Valor> ]\n[ <Límite inferior>, <Límite superior>, x, <Acumulada o no (true/false)> ]
UnitOrthogonalVector=VectorNormalUnitario
UnitOrthogonalVector.Syntax=[ <Recta> ]\n[ <Segmento> ]\n[ <Vector> ]
UnitVector.Syntax=[ <Vector> ]\n[ <Recta> ]\n[ <Segmento> ]
UpperSum.Syntax=[ <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo>, <Número de rectángulos> ]
Vector.Syntax=[ <Punto> ]\n[ <Punto inicial>, <Punto final> ]
Voronoi.Syntax=[ <Lista de puntos> ]
ZMean2Estimate.Syntax=[ <Lista de datos (muestra 1)>, <Lista de datos (muestra 2)>, <\u03c31>, <\u03c32>, <Nivel> ]\n[ <Media (muestra 1)>, <\u03c31>, <Tamaño (muestra 1)>, <Media (muestra 2)>, <\u03c32>, <Tamaño (muestra 2)>, <Nivel> ]
ZMean2Test.Syntax=[ <Lista de datos (muestra 1)>, <\u03c31>, <Lista de datos (muestra 2)>, <\u03c32>, <Cola> ]\n[ <Media (muestra 1)>, <\u03c31>, <Tamaño (muestra 1)>, <Media (muestra 2)>, <\u03c32>, <Tamaño (muestra 2)>, <Cola> ]
ZMeanTest.Syntax=[ <Lista de datos (muestra)>, <\u03c3>, <Media (hipótesis)>, <Cola> ]\n[ <Media (muestra)>, <\u03c3>, <Tamaño (muestra)>, <Media (hipótesis)>, <Cola> ]
Zip.Syntax=[ <Expresión>, <Variable 1>, <Lista 1>, <Variable 2>, <Lista 2>, ... ]
Zipf.Syntax=[ <Número de elementos>, <Exponente> ]\n[ <Número de elementos>, <Exponente>, <Acumulada o no (true/false)> ]\n[ <Número de elementos>, <Exponente>, <Valor>, <Acumulada o no (true/false)> ]