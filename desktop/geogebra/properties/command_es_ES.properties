Angle.Syntax=[ <Objeto> ]\n[ <Vector>, <Vector> ]\n[ <Recta>, <Recta> ]\n[ <Punto inicial>, <Vértice>, <Punto final (en sentido antihorario)> ]\n[ <Punto inicial>, <Vértice>, <Ángulo de rotación (en sentido antihorario)> ]
AngularBisector.Syntax=[ <Recta>, <Recta> ]\n[ <Punto inicial>, <Vértice>, <Punto final (en sentido antihorario)> ]
Barycenter=BaricentroBaremado
Binomial.Syntax=[ <Número n>, <Número r> ]
BinomialDist.Syntax=[ <Número de ensayos>, <Probabilidad de éxito> ]\n[ <Número de ensayos>, <Probabilidad de éxito>, <Acumulada o no (true/false)> ]\n[ <Número de ensayos>, <Probabilidad de éxito>, <Valor>, <Acumulada  o no (true/false)> ]
BoxPlot.Syntax=[ <Offset_y>, <Escala_y>, <Lista de datos brutos> ]\n[ <Offset_y>, <Escala_y>, <Lista de datos brutos>, <Atipicidades o no (true/false)> ]\n[ <Offset_y>, <Escala_y>, <Lista de datos>, <Lista de frecuencias>, <Atipicidades o no (true/false)> ]\n[ <Offset_y>, <Escala_y>, <Valor_Inicial>, <Q1>, <Mediana>, <Q3>, <Valor Final> ]
Button.Syntax=[ ]\n[ <Texto> ]
CSolutions.SyntaxCAS=[ <Ecuación> ]\n[ <Ecuación>, <Variable> ]\n[ <Lista de Ecuaciones>, <Lista de Variables> ]
Centroid=Baricentro
Checkbox.Syntax=[ ]\n[ <Texto> ]\n[ <Lista> ]\n[ <Texto>, <Lista> ]
Circle.Syntax=[ <Punto (centro)>, <Número(radio)> ]\n[ <Punto>, <Segmento> ]\n[ <Punto (centro)>, <Punto> ]\n[ <Punto>, <Punto>, <Punto> ]
Circle.Syntax3D=[ <Punto>, <Número (radio)> ]\n[ <Punto>, <Segmento> ]\n[ <Punto>, <Punto> ]\n[ <Recta>, <Punto> ]\n[ <Punto>, <Punto>, <Punto> ]\n[ <Punto>, <Radio>, <Dirección> ]\n[ <Punto>, <Punto>, <Dirección> ]
Circumference=Perímetro
CompleteSquare.Syntax=[ <Función Cuadrática> ]
ContingencyTable.Syntax=[ <Lista (textos)>, <Lista (textos)> ]\n[ <Lista (textos)>, <Lista (textos)>, <Opciones> ]\n[ <Lista (valores de filas)>, <Lista (valores de columnas)>, <Tabla de frecuencias> ]\n[ <Lista (valores de filas)>, <Lista (valores de columnas)>, <Tabla de frecuencias>, <Opciones> ]
ConvexHull.Syntax=[ <Lista de Puntos> ]
Cubic.Syntax=[ <Punto>, <Punto>, <Punto>, <Número> ]
DelauneyTriangulation.Syntax=[ <Lista de Puntos> ]
Diameter.Syntax=[ <Vector>, <Cónica> ]\n[ <Recta (dirección)>, <Cónica> ]
Direction.Syntax=[ <Recta> ]
Distance.Syntax=[ <Punto>, <Objeto> ]\n[ <Recta>, <Recta> ]
Div.Syntax=[ <Número dividendo>, <Número divisor> ]\n[ <Polinomio dividendo>, <Polinomio divisor> ]
Division.Syntax=[ <Número dividendo>, <Número divisor> ]\n[ <Polinomio dividendo>, <Polinomio divisor> ]
Element.Syntax=[ <Lista>, <Número (posición)> ]\n[ <Matriz>, <Fila>, <Columna> ]\n[ <Lista>, <Índice 1>, <Índice 2>, ... ]
Element.SyntaxCAS=[ <Lista>, <Número (posición)> ]\n[ <Matriz>, <Fila>, <Columna> ]
FractionText.Syntax=[ <Número> ]
Frequency.Syntax=[ <Lista de datos brutos> ]\n[ <Acumulada o no (true/false)>, <Lista de datos brutos> ]\n[ <Lista de límites de clases>, <Lista de datos brutos> ]\n[ <Lista de textos>, <Lista de textos> ]\n[ <Acumulada o no (true/false)>, <Lista de límites de clases>, <Lista de datos brutos> ]\n[ <Lista de límites de clases>, <Lista de datos brutos>, <Usar densidad o no (true/false)>, <Factor de escala de densidad (opcional)> ]\n[ <Acumulada o no (true/false)>, <Lista de límites de clases>, <Lista de datos brutos>, <Usar densidad o no (true/false)>, <Factor de escala de densidad (opcional)> ]
FrequencyPolygon.Syntax=[ <Lista de límites de clases>, <Lista de alturas> ]\n[ <Lista de límites de clases>, <Lista de datos brutos>, <Usar densidad o no (true/false)>, <Factor de escala de densidad (opcional)> ]\n[ <Acumulada o no (true/false)>, <Lista de límites de clases>, <Lista de datos brutos>, <Usar densidad o no (true/false)>, <Factor de escala de densidad (opcional)> ]
FrequencyTable.Syntax=[ <Lista de datos brutos> ]\n[ <Acumulada o no (true/false)>, <Lista de datos brutos> ]\n[ <Lista de límites de clases>, <Lista de datos brutos> ]\n[ <Acumulada o no (true/false)>, <Lista de límites de clases>, <Lista de datos brutos> ]\n[ <Lista de límites de clases>, <Lista de datos brutos>, <Usar densidad o no (true/false)>, <Factor de escala de densidad (opcional)> ]\n[ <Acumulada o no (true/false)>, <Lista de límites de clases>, <Lista de datos brutos>, <Usar densidad o no (true/false)>, <Factor de escala de densidad (opcional)> ]
Groebner=Gröbner
Histogram.Syntax=[ <Lista de límites de clases>, <Lista de alturas> ]\n[ <Lista de límites de clases>, <Lista de datos brutos>, <Usar densidad o no (true/false)>, <Factor de escala de densidad (opcional)> ]\n[ <Acumulada o no (true/false)>, <Lista de límites de clases>, <Lista de datos brutos>, <Usar densidad o no (true/false)>, <Factor de escala de densidad (opcional)> ]
HistogramRight.Syntax=[ <Lista de límites de clases>, <Lista de alturas> ]\n[ <Lista de límites de clases>, <Lista de datos brutos>, <Usar densidad o no (true/false)>, <Factor de escala de densidad (opcional)> ]\n[ <Acumulada o no (true/false)>, <Lista de límites de clases>, <Lista de datos brutos>, <Usar densidad o no (true/false)>, <Factor de escala de densidad (opcional)> ]
IntersectPath.Syntax=[ <Recta>, <Polígono> ]\n[ <Recta>, <Cónica> ]
IsInteger.Syntax=[ <Número> ]
LCM.Syntax=[ <Lista de números> ]\n[ <Número>, <Número> ]
LCM.SyntaxCAS=[ <Lista de números> ]\n[ <Lista de polinomios> ]\n[ <Número>, <Número> ]\n[ <Polinomio>, <Polinomio> ]
Last.Syntax=[ <Lista> ]\n[ <Texto> ]\n[ <Lista>, <Número de elementos> ]\n[ <Texto>, <Número de elementos> ]
Last.SyntaxCAS=[ <Lista> ]\n[ <Lista>, <Número de elementos> ]
Length.SyntaxCAS=[ <Función o Curva>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]\n[ <Función o Curva>, <Variable>, <Punto Inicial>, <Punto Final> ]
Locus.Syntax=[ <Punto que trazará el lugar>, <Punto> ]\n[ <Punto que trazará el lugar>, <Deslizador> ]\n[ <Campode direcciones>, <Punto> ]\n[ <f(x, y)>, <Punto> ]
MinimumSpanningTree=ArbolRecubridorMínimo
Numeric=ValorDecimal
OrthogonalVector.Syntax=[ <Recta> ]\n[ <Segmento> ]\n[ <Vector> ]
Parabola.Syntax=[ <Punto (foco)>, <Recta (directriz)> ]
Perimeter.Syntax=[ <Polígono> ]\n[ <Cônica> ]\n[ <Lugar geométrico> ]
Prove=Demuestra
ProveDetails=DemuestraDetalles
Random.Syntax=[ <Mínimo>, <Máximo> ]
RandomBinomial=BinomialAleatoria
RandomNormal=NormalAleatoria
RandomPoisson=PoissonAleatoria
RandomUniform=UniformeAleatoria
RandomUniform.Syntax=[ <Mínimo>, <Máximo> ]
Ray.Syntax=[ <Punto (extremo)>, <Punto> ]\n[ <Punto (extremo)>, <Vector director> ]
RigidPolygon.Syntax=[ <Polígono> ]\n[ <Polígono>, <Traslada x>, <Traslada y> ]\n[ <Punto libre>, ..., <Punto libre> ]
Sample.Syntax=[ <Lista>, <Tamaño> ]\n[ <Lista>, <Tamaño>, <Con reemplazamiento o no (true/false)> ]
SampleSDX=DExMuestra
SampleSDY=DEyMuestra
SampleVariance=VarianzaMuestra
SelectedIndex=IndiceElegido
SetColor=Color
Shear.Syntax=[ <Objeto>, <Recta>, <Razón> ]
ShortestDistance.Syntax=[ <Lista de segmentos>, <Punto inicial>, <Punto final>, <Baremado o no (true/false)> ]
ShowAxes.Syntax=[ ]\n[ <Mostrar o no (true/false)> ]\n[ <Vista (1, 2 ó 3>, <Mostrar o no (true/false)> ]
Slope.Syntax=[ <Recta> ]
SlowPlot=TrazadoLento
StartAnimation.Syntax=[ ]\n[ <Animado o no (true/false)> ]\n[ <Deslizador o punto>, <Deslizador o punto>, ... ]\n[ <Deslizador o punto>, <Deslizador o punto>, ..., <Animados o no (true/false)> ]
Sum.SyntaxCAS=[ <Lista> ]\n[ <Expresión>, <Variable>, <Valor inicial>, <Valor final> ]
TMean2Estimate.Syntax=[ <Lista de datos (muestra 1)>, <Lista de datos (muestra 2)>, <Nivel>, <Agrupado o no (true/false)> ]\n[ <Media (muestral 1)>, <Desviación estándar (muestral 1)>, <Tamaño (muestra 1)>, <Media (muestral 2)>, <Desviación estándar (muestral 2)>, <Tamaño (muestra 2)>, <Nivel>, <Agrupado o no (true/false)> ]
TTest2.Syntax=[ <Lista de datos (muestra 1)>, <Lista de datos (muestra 2)>, <Cola>, <Agrupado o no (true/false)> ]\n[ <Media (muestral 1)>, <Desviación estándar (muestra 1)>, <Tamaño (muestra 1)>, <Media (muestra 2)>, <Desviación estándar (muestra 2)>, <Tamaño (muestra 2)>, <Cola>, <Agrupado o no (true/false)> ]
Top=Tapa
TrigCombine=TrigCombina
TrigCombine.Syntax=[ <Expresión> ]\n[ <Expresión>, <Función modelo> ]
TrigExpand=TrigDesarrolla
TrigExpand.Syntax=[ <Expresión> ]\n[ <Expresión>, <Función modelo> ]
TrigExpand.SyntaxCAS=[ <Expresión> ]\n[ <Expresión>, <Función modelo> ]\n[ <Expresión>, <Función modelo>, <Variable modelo> ]\n[ <Expresión>, <Función modelo>, <Variable modelo>, <Variable modelo> ]
TrigSimplify=TrigSimplifica
Uniform.Syntax=[ <Límite inferior>, <Límite superior>, x ]\n[ <Límite inferior>, <Límite superior>, <Valor> ]\n[ <Límite inferior>, <Límite superior>, x, <Acumulada o no (true/false)> ]
UnitOrthogonalVector.Syntax=[ <Recta> ]\n[ <Segmento> ]\n[ <Vector> ]
UnitVector.Syntax=[ <Vector> ]\n[ <Recta> ]\n[ <Segmento> ]
Vector.Syntax=[ <Punto> ]\n[ <Punto inicial>, <Punto final> ]
ZMeanTest.Syntax=[ <Lista de datos (muestra)>, <\u03c3>, <Media (hipótesis)>, <Cola> ]\n[ <Media (muestra)>, <\u03c3>, <Tamaño (muestra)>, <Media (hipótesis)>, <Cola> ]