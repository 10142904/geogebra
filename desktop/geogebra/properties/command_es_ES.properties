AffineRatio.Syntax=[ <Punto origen>, <Punto final>, <Punto alineado> ]
Angle=Ángulo
Angle.Syntax=[ <Objeto> ]\n[ <Vector>, <Vector> ]\n[ <Recta>, <Recta> ]\n[ <Punto inicial>, <Vértice>, <Punto final (en sentido antihorario)> ]\n[ <Punto inicial>, <Vértice>, <Ángulo de rotación (en sentido antihorario)> ]
AngularBisector.Syntax=[ <Recta>, <Recta> ]\n[ <Punto inicial>, <Vértice>, <Punto final (en sentido antihorario)> ]
Append=Añade
Arc.Syntax=[ <Circunferencia>, <Punto inicial>, <Punto final (en sentido antihorario)> ]\n[ <Elipse>, <Punto inicial>, <Punto final (en sentido antihorario)> ]\n[ <Circunferencia>, <Valor inicial del parámetro>, <Valor final> ]\n[ <Elipse>, <Valor inicial del parámetro>, <Valor final> ]
AreCollinear=EstánAlineados
Area=Área
Area.Syntax=[ <Cónica> ]\n[ <Polígono> ]\n[ <Punto inicial (vértice)>, ..., <Punto final (vértice)> ]
Asymptote.Syntax=[ <Cónica> ]\n[ <Función> ]\n[ <Curva implícita> ]
AttachCopyToView=CopiaObjetoEn
AttachCopyToView.Syntax=[ <Objeto>, <Vista 0|1|2> ]\n[ <Objeto>, <Vista 0|1|2>, <Punto 1>, <Punto 2>, <Píxel del punto 1>, <Píxel del punto 2> ]
BarChart.Syntax=[ <Lista de datos>, <Lista de frecuencias> ]\n[ <Lista de datos sueltos>, <Ancho de barras> ]\n[ <Lista de datos>, <Lista de frecuencias>, <Ancho de barras> ]\n[ <Valor inicial>, <Valor final>, <Lista de alturas> ]\n[ <Valor inicial>, <Valor final>, <Expresión>, <Variable>, <Desde el número>, <Al número> ]\n[ <Valor inicial>, <Valor final>, <Expresión>, <Variable>, <Desde el número>, <Al número>, <Paso> ]
BarCode=CódigoDeBarras
BarCode.Syntax=[ ]\n[ <Imagen> ]\n[ <Texto o Número>, "<Formato (opcional)>", "<Corrección de error (opcional)>", <Ancho (opcional)>, <Altura (opcional)> ]
Barycenter=BaricentroBaremado
Barycenter.Syntax=[ <Lista de puntos>, <Lista de pesos> ]
Bernoulli.Syntax=[ <Probabilidad>, <Acumulada o no (true/false)> ]
Binomial.Syntax=[ <Número n>, <Número r> ]
Binomial.SyntaxCAS=[ <Número n>, <Número r> ]
BinomialDist=DistribuciónBinomial
BinomialDist.Syntax=[ <Número de ensayos>, <Probabilidad de éxito> ]\n[ <Número de ensayos>, <Probabilidad de éxito>, <Acumulada o no (true/false)> ]\n[ <Número de ensayos>, <Probabilidad de éxito>, <Valor de variable>, <Acumulada  o no (true/false)> ]
BinomialDist.SyntaxCAS=[ <Número de ensayos>, <Probabilidad de éxito>, <Valor de variable>, <Acumulada o no (true/false)> ]
BoxPlot=DiagramaDeCaja
BoxPlot.Syntax=[ <Offset_y>, <Escala_y>, <Lista de datos brutos> ]\n[ <Offset_y>, <Escala_y>, <Lista de datos brutos>, <Atipicidades o no (true/false)> ]\n[ <Offset_y>, <Escala_y>, <Lista de datos>, <Lista de frecuencias>, <Atipicidades o no (true/false)> ]\n[ <Offset_y>, <Escala_y>, <Valor_Inicial>, <Q1>, <Mediana>, <Q3>, <Valor Final> ]
Button.Syntax=[ ]\n[ <Texto> ]
CSolve.SyntaxCAS=[ <Ecuación> ]\n[ <Ecuación>, <Variable> ]\n[ <Lista de ecuaciones>, <Lista de variables> ]
Cauchy.Syntax=[ <Mediana>, <Escala>, x ]\n[ <Mediana>, <Escala>, <Valor de variable> ]\n[ <Mediana>, <Escala>, x, <Acumulada o no (true/false)> ]
Cauchy.SyntaxCAS=[ <Mediana>, <Escala>, <Valor de variable> ]
CellRange.Syntax=[ <Celda inicial>, <Celda final> ]
CenterView.Syntax=[ <Punto central> ]
Centroid=Baricentro
Checkbox.Syntax=[ ]\n[ <Texto> ]\n[ <Lista> ]\n[ <Texto>, <Lista> ]
ChiSquared.Syntax=[ <Grados de libertad>, x ]\n[ <Grados de libertad>, <Valor de variable> ]\n[ <Grados de libertad>, x, <Acumulada o no (true/false)> ]
ChiSquared.SyntaxCAS=[ <Grados de libertad>, <Valor de variable> ]
ChiSquaredTest=TestChiCuadrado
Circle.Syntax=[ <Punto (centro)>, <Número(radio)> ]\n[ <Punto>, <Segmento> ]\n[ <Punto (centro)>, <Punto> ]\n[ <Punto>, <Punto>, <Punto> ]
Circle.Syntax3D=[ <Punto>, <Número (radio)> ]\n[ <Punto>, <Segmento> ]\n[ <Punto>, <Punto> ]\n[ <Recta>, <Punto> ]\n[ <Punto>, <Punto>, <Punto> ]\n[ <Punto>, <Radio>, <Dirección> ]\n[ <Punto>, <Punto>, <Dirección> ]
CircleArc.Syntax=[ <Punto (centro)>, <Punto (extremo)>, <Punto (extremo en sentido antihorario)> ]
CircleSector.Syntax=[ <Punto (centro)>, <Punto (extremo)>, <Punto (extremo en sentido antihorario)> ]
CircumcircleArc=ArcoTresPuntos
CircumcircleArc.Syntax=[ <Punto (extremo)>, <Punto>, <Punto (extremo)> ]
CircumcircleSector=SectorTresPuntos
CircumcircleSector.Syntax=[ <Punto (extremo)>, <Punto>, <Punto (extremo)> ]
Circumference.Syntax=[ <Polígono o Cónica> ]
Classes.Syntax=[ <Lista de datos>, <Número de clases> ]\n[ <Lista de datos>, <Inicio>, <Ancho de las clases> ]
ClosestPoint=PuntoMásCercano
ClosestPoint.Syntax=[ <Recorrido>, <Punto> ]\n[ <Región>, <Punto> ]\n[ <Recta>, <Recta> ]
Column.Syntax=[ <Celda de la Hoja de Cálculo> ]
ColumnName.Syntax=[ <Celda de la Hoja de Cálculo> ]
CompetitionRank=RangoCompetición
ContingencyTable=TablaDeContingencia
ContingencyTable.Syntax=[ <Lista (textos)>, <Lista (textos)> ]\n[ <Lista (textos)>, <Lista (textos)>, <Opciones> ]\n[ <Lista (valores de filas)>, <Lista (valores de columnas)>, <Tabla de frecuencias> ]\n[ <Lista (valores de filas)>, <Lista (valores de columnas)>, <Tabla de frecuencias>, <Opciones> ]
ContinuedFraction.Syntax=[ <Número> ]\n[ <Número>, <Nivel> ]\n[ <Número>, <Nivel>, <Abreviado o no (true/false)> ]
ContourPlot=Isolíneas
Corner.Syntax=[ <Número de esquina> ]\n[ <Imagen>, <Número de esquina> ]\n[ <Texto>, <Número de esquina> ]\n[ <Vista Gráfica>, <Número de esquina> ]
Covariance.Syntax=[ <Lista de puntos> ]\n[ <Lista de números>, <Lista de números> ]
CrossRatio.Syntax=[ <Punto (origen 1)>, <Punto (origen 2)>, <Punto (final)>, <Punto (alineado)> ]
Cubic.Syntax=[ <Punto>, <Punto>, <Punto>, <Número> ]
CurveCartesian.Syntax=[ <Expresión>, <Expresión>, <Parámetro>, <Valor inicial>, <Valor final> ]
CurveCartesian.Syntax3D=[ <Expresión>, <Expresión>, <Parámetro>, <Valor inicial>, <Valor final> ]\n[ <Expresión>, <Expresión>, <Expresión>, <Parámetro>, <Valor inicial>, <Valor final> ]
Defined=EstáDefinido
DensityPlot=MapaDensidad
Derivative.Syntax=[ <Función> ]\n[ <Curva> ]\n[ <Función>, <Número (orden de la derivada)> ]\n[ <Función>, <Variable> ]\n[ <Curva>, <Número (orden de la derivada)> ]\n[ <Función>, <Variable>, <Número (orden de la derivada)> ]
Derivative.SyntaxCAS=[ <Expresión> ]\n[ <Expresión>, <Variable> ]\n[ <Expresión>, <Variable>, <Número (orden de la derivada)> ]
Diameter.Syntax=[ <Vector>, <Cónica> ]\n[ <Recta (dirección)>, <Cónica> ]
Dilate.Syntax=[ <Objeto>, <Número (factor de escala)> ]\n[ <Objeto>, <Número (factor de escala)>, <Punto (centro)> ]
Direction.Syntax=[ <Recta> ]
Distance.Syntax=[ <Punto>, <Objeto> ]\n[ <Recta>, <Recta> ]
Div.Syntax=[ <Número dividendo>, <Número divisor> ]\n[ <Polinomio dividendo>, <Polinomio divisor> ]
Division.Syntax=[ <Número dividendo>, <Número divisor> ]\n[ <Polinomio dividendo>, <Polinomio divisor> ]
DotPlot.Syntax=[ <Lista de datos brutos> ]
Element.Syntax=[ <Lista>, <Número (posición)> ]\n[ <Matriz>, <Fila>, <Columna> ]\n[ <Lista>, <Índice 1>, <Índice 2>, ... ]
Element.SyntaxCAS=[ <Lista>, <Número (posición)> ]\n[ <Matriz>, <Fila>, <Columna> ]
Ellipse.Syntax=[ <Punto (foco)>, <Punto (foco)>, <Número (semieje mayor)> ]\n[ <Punto (foco)>, <Punto (foco)>, <Segmento (semieje mayor)> ]\n[ <Punto (foco)>, <Punto (foco)>, <Punto (en la elipse)> ]
Erlang.Syntax=[ <Figura>, <Razón>, x ]\n[ <Figura>, <Razón>, <Valor de variable> ]\n[ <Figura>, <Razón>, x, <Acumulada o no (true/false)> ]
Execute.Syntax=[ <Lista de textos> ]\n[ <Lista de textos>, <Parámetro>, <Parámetro>, ... ]
Expand.Syntax=[ <Expresión> ]
Exponential.Syntax=[ <Lambda>, x ]\n[ <Lambda>, <Valor de variable> ]\n[ <Lambda>, x, <Acumulada o no (true/false)> ]