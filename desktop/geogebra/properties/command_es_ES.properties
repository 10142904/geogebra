AffineRatio.Syntax=[ <Punto origen>, <Punto final>, <Punto alineado> ]
Angle=Ángulo
Angle.Syntax=[ <Objeto> ]\n[ <Vector>, <Vector> ]\n[ <Recta>, <Recta> ]\n[ <Punto inicial>, <Vértice>, <Punto final (en sentido antihorario)> ]\n[ <Punto inicial>, <Vértice>, <Ángulo de rotación (en sentido antihorario)> ]
AngularBisector.Syntax=[ <Recta>, <Recta> ]\n[ <Punto inicial>, <Vértice>, <Punto final (en sentido antihorario)> ]
Append=Añade
Arc.Syntax=[ <Circunferencia>, <Punto inicial>, <Punto final (en sentido antihorario)> ]\n[ <Elipse>, <Punto inicial>, <Punto final (en sentido antihorario)> ]\n[ <Circunferencia>, <Valor inicial del parámetro>, <Valor final> ]\n[ <Elipse>, <Valor inicial del parámetro>, <Valor final> ]
AreCollinear=EstánAlineados
Area=Área
Area.Syntax=[ <Cónica> ]\n[ <Polígono> ]\n[ <Punto inicial (vértice)>, ..., <Punto final (vértice)> ]
Asymptote.Syntax=[ <Cónica> ]\n[ <Función> ]\n[ <Curva implícita> ]
AttachCopyToView=CopiaObjetoEn
AttachCopyToView.Syntax=[ <Objeto>, <Vista 0|1|2> ]\n[ <Objeto>, <Vista 0|1|2>, <Punto 1>, <Punto 2>, <Píxel del punto 1>, <Píxel del punto 2> ]
BarChart.Syntax=[ <Lista de datos>, <Lista de frecuencias> ]\n[ <Lista de datos sueltos>, <Ancho de barras> ]\n[ <Lista de datos>, <Lista de frecuencias>, <Ancho de barras> ]\n[ <Valor inicial>, <Valor final>, <Lista de alturas> ]\n[ <Valor inicial>, <Valor final>, <Expresión>, <Variable>, <Desde el número>, <Al número> ]\n[ <Valor inicial>, <Valor final>, <Expresión>, <Variable>, <Desde el número>, <Al número>, <Paso> ]
BarCode=CódigoDeBarras
BarCode.Syntax=[ ]\n[ <Imagen> ]\n[ <Texto o Número>, "<Formato (opcional)>", "<Corrección de error (opcional)>", <Ancho (opcional)>, <Altura (opcional)> ]
Barycenter=BaricentroBaremado
Barycenter.Syntax=[ <Lista de puntos>, <Lista de pesos> ]
Bernoulli.Syntax=[ <Probabilidad>, <Acumulada o no (true/false)> ]
Binomial.Syntax=[ <Número n>, <Número r> ]
Binomial.SyntaxCAS=[ <Número n>, <Número r> ]
BinomialDist=DistribuciónBinomial
BinomialDist.Syntax=[ <Número de ensayos>, <Probabilidad de éxito> ]\n[ <Número de ensayos>, <Probabilidad de éxito>, <Acumulada o no (true/false)> ]\n[ <Número de ensayos>, <Probabilidad de éxito>, <Valor>, <Acumulada  o no (true/false)> ]
BinomialDist.SyntaxCAS=[ <Número de ensayos>, <Probabilidad de éxito>, <Valor de variable>, <Acumulada o no (true/false)> ]
BoxPlot=DiagramaDeCaja
BoxPlot.Syntax=[ <Offset_y>, <Escala_y>, <Lista de datos brutos> ]\n[ <Offset_y>, <Escala_y>, <Lista de datos brutos>, <Atipicidades o no (true/false)> ]\n[ <Offset_y>, <Escala_y>, <Lista de datos>, <Lista de frecuencias>, <Atipicidades o no (true/false)> ]\n[ <Offset_y>, <Escala_y>, <Valor_Inicial>, <Q1>, <Mediana>, <Q3>, <Valor Final> ]
Button.Syntax=[ ]\n[ <Texto> ]
CSolve.SyntaxCAS=[ <Ecuación> ]\n[ <Ecuación>, <Variable> ]\n[ <Lista de ecuaciones>, <Lista de variables> ]
Cauchy.Syntax=[ <Mediana>, <Escala>, x ]\n[ <Mediana>, <Escala>, <Valor> ]\n[ <Mediana>, <Escala>, x, <Acumulada o no (true/false)> ]
Cauchy.SyntaxCAS=[ <Mediana>, <Escala>, <Valor> ]
CellRange.Syntax=[ <Celda inicial>, <Celda final> ]
CenterView.Syntax=[ <Punto central> ]
Centroid=Baricentro
Checkbox.Syntax=[ ]\n[ <Texto> ]\n[ <Lista> ]\n[ <Texto>, <Lista> ]
ChiSquared.Syntax=[ <Grados de libertad>, x ]\n[ <Grados de libertad>, <Valor> ]\n[ <Grados de libertad>, x, <Acumulada o no (true/false)> ]
ChiSquared.SyntaxCAS=[ <Grados de libertad>, <Valor> ]
ChiSquaredTest=TestChiCuadrado
Circle.Syntax=[ <Punto (centro)>, <Número(radio)> ]\n[ <Punto>, <Segmento> ]\n[ <Punto (centro)>, <Punto> ]\n[ <Punto>, <Punto>, <Punto> ]
Circle.Syntax3D=[ <Punto>, <Número (radio)> ]\n[ <Punto>, <Segmento> ]\n[ <Punto>, <Punto> ]\n[ <Recta>, <Punto> ]\n[ <Punto>, <Punto>, <Punto> ]\n[ <Punto>, <Radio>, <Dirección> ]\n[ <Punto>, <Punto>, <Dirección> ]
CircleArc.Syntax=[ <Punto (centro)>, <Punto (extremo)>, <Punto (extremo en sentido antihorario)> ]
CircleSector.Syntax=[ <Punto (centro)>, <Punto (extremo)>, <Punto (extremo en sentido antihorario)> ]
CircumcircleArc=ArcoTresPuntos
CircumcircleArc.Syntax=[ <Punto (extremo)>, <Punto>, <Punto (extremo)> ]
CircumcircleSector=SectorTresPuntos
CircumcircleSector.Syntax=[ <Punto (extremo)>, <Punto>, <Punto (extremo)> ]
Circumference=Perímetro
Circumference.Syntax=[ <Polígono o Cónica> ]
Classes.Syntax=[ <Lista de datos>, <Número de clases> ]\n[ <Lista de datos>, <Inicio>, <Ancho de las clases> ]
ClosestPoint=PuntoMásCercano
ClosestPoint.Syntax=[ <Recorrido>, <Punto> ]\n[ <Región>, <Punto> ]\n[ <Recta>, <Recta> ]
Column.Syntax=[ <Celda de la Hoja de Cálculo> ]
ColumnName.Syntax=[ <Celda de la Hoja de Cálculo> ]
CompetitionRank=RangoCompetición
ContingencyTable=TablaDeContingencia
ContingencyTable.Syntax=[ <Lista (textos)>, <Lista (textos)> ]\n[ <Lista (textos)>, <Lista (textos)>, <Opciones> ]\n[ <Lista (valores de filas)>, <Lista (valores de columnas)>, <Tabla de frecuencias> ]\n[ <Lista (valores de filas)>, <Lista (valores de columnas)>, <Tabla de frecuencias>, <Opciones> ]
ContinuedFraction.Syntax=[ <Número> ]\n[ <Número>, <Nivel> ]\n[ <Número>, <Nivel>, <Abreviado o no (true/false)> ]
ContourPlot=Isolíneas
Corner.Syntax=[ <Número de esquina> ]\n[ <Imagen>, <Número de esquina> ]\n[ <Texto>, <Número de esquina> ]\n[ <Vista Gráfica>, <Número de esquina> ]
Covariance.Syntax=[ <Lista de puntos> ]\n[ <Lista de números>, <Lista de números> ]
CrossRatio.Syntax=[ <Punto (origen 1)>, <Punto (origen 2)>, <Punto (final)>, <Punto (alineado)> ]
Cubic.Syntax=[ <Punto>, <Punto>, <Punto>, <Número> ]
CurveCartesian.Syntax=[ <Expresión>, <Expresión>, <Parámetro>, <Valor inicial>, <Valor final> ]
CurveCartesian.Syntax3D=[ <Expresión>, <Expresión>, <Parámetro>, <Valor inicial>, <Valor final> ]\n[ <Expresión>, <Expresión>, <Expresión>, <Parámetro>, <Valor inicial>, <Valor final> ]
Defined=EstáDefinido
DensityPlot=MapaDensidad
Derivative.Syntax=[ <Función> ]\n[ <Curva> ]\n[ <Función>, <Número (orden de la derivada)> ]\n[ <Función>, <Variable> ]\n[ <Curva>, <Número (orden de la derivada)> ]\n[ <Función>, <Variable>, <Número (orden de la derivada)> ]
Derivative.SyntaxCAS=[ <Expresión> ]\n[ <Expresión>, <Variable> ]\n[ <Expresión>, <Variable>, <Número (orden de la derivada)> ]
Diameter.Syntax=[ <Vector>, <Cónica> ]\n[ <Recta (dirección)>, <Cónica> ]
Dilate.Syntax=[ <Objeto>, <Número (factor de escala)> ]\n[ <Objeto>, <Número (factor de escala)>, <Punto (centro)> ]
Direction.Syntax=[ <Recta> ]
Distance.Syntax=[ <Punto>, <Objeto> ]\n[ <Recta>, <Recta> ]
Div.Syntax=[ <Número dividendo>, <Número divisor> ]\n[ <Polinomio dividendo>, <Polinomio divisor> ]
Division.Syntax=[ <Número dividendo>, <Número divisor> ]\n[ <Polinomio dividendo>, <Polinomio divisor> ]
DotPlot.Syntax=[ <Lista de datos brutos> ]
Element.Syntax=[ <Lista>, <Número (posición)> ]\n[ <Matriz>, <Fila>, <Columna> ]\n[ <Lista>, <Índice 1>, <Índice 2>, ... ]
Element.SyntaxCAS=[ <Lista>, <Número (posición)> ]\n[ <Matriz>, <Fila>, <Columna> ]
Ellipse.Syntax=[ <Punto (foco)>, <Punto (foco)>, <Número (semieje mayor)> ]\n[ <Punto (foco)>, <Punto (foco)>, <Segmento (semieje mayor)> ]\n[ <Punto (foco)>, <Punto (foco)>, <Punto (en la elipse)> ]
Erlang.Syntax=[ <Figura>, <Razón>, x ]\n[ <Figura>, <Razón>, <Valor> ]\n[ <Figura>, <Razón>, x, <Acumulada o no (true/false)> ]
Execute.Syntax=[ <Lista de textos> ]\n[ <Lista de textos>, <Parámetro>, <Parámetro>, ... ]
Expand.Syntax=[ <Expresión> ]
Exponential.Syntax=[ <Lambda>, x ]\n[ <Lambda>, <Valor> ]\n[ <Lambda>, x, <Acumulada o no (true/false)> ]
Exponential.SyntaxCAS=[ <Lambda>, <Valor> ]
Extremum.Syntax=[ <Polinomio> ]\n[ <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]
FDistribution.Syntax=[ <Grados de libertad del numerador>, <Grados de libertad del denominador>, x ]\n[ <Grados de libertad del numerador>, <Grados de libertad del denominador>, <Valor> ]\n[ <Grados de libertad del numerador>, <Grados de libertad del denominador>, x, <Acumulada o no (true/false)> ]
FDistribution.SyntaxCAS=[ <Grados de libertad del numerador>, <Grados de libertad del denominador>, <Valor> ]
FillCells.Syntax=[ <Rango de celdas>, <Objeto> ]\n[ <Celda>, <Lista> ]\n[ <Celda>, <Matriz> ]
First.Syntax=[ <Lista> ]\n[ <Texto> ]\n[ <Lista>, <Número de elementos> ]\n[ <Texto>, <Número de elementos> ]\n[ <Lugar Geométrico>, <Número de elementos> ]
First.SyntaxCAS=[ <Lista> ]\n[ <Lista>, <Número de elementos> ]
FirstAxis=EjeMayor
FirstAxisLength=LongitudSemiejeMayor
Fit.Syntax=[ <Lista de puntos>, <Lista de funciones> ]\n[ <Lista de puntos>, <Función> ]
FitExp.Syntax=[ <Lista de puntos> ]
FitGrowth.Syntax=[ <Lista de puntos> ]
FitLineX.Syntax=[ <Lista de puntos> ]
FitLineY.Syntax=[ <Lista de puntos> ]
FitLog.Syntax=[ <Lista de puntos> ]
FitLogistic.Syntax=[ <Lista de puntos> ]
FitPoly.Syntax=[ <Lista de puntos>, <Grado del polinomio> ]
FitPow.Syntax=[ <Lista de puntos> ]
FitSin.Syntax=[ <Lista de puntos> ]
FractionText.Syntax=[ <Número> ]
Frequency.Syntax=[ <Lista de datos brutos> ]\n[ <Acumulada o no (true/false)>, <Lista de datos brutos> ]\n[ <Lista de límites de clases>, <Lista de datos brutos> ]\n[ <Lista de textos>, <Lista de textos> ]\n[ <Acumulada o no (true/false)>, <Lista de límites de clases>, <Lista de datos brutos> ]\n[ <Lista de límites de clases>, <Lista de datos brutos>, <Usar densidad o no (true/false)>, <Factor de escala de densidad (opcional)> ]\n[ <Acumulada o no (true/false)>, <Lista de límites de clases>, <Lista de datos brutos>, <Usar densidad o no (true/false)>, <Factor de escala de densidad (opcional)> ]
FrequencyPolygon.Syntax=[ <Lista de límites de clases>, <Lista de alturas> ]\n[ <Lista de límites de clases>, <Lista de datos brutos>, <Usar densidad o no (true/false)>, <Factor de escala de densidad (opcional)> ]\n[ <Acumulada o no (true/false)>, <Lista de límites de clases>, <Lista de datos brutos>, <Usar densidad o no (true/false)>, <Factor de escala de densidad (opcional)> ]
FrequencyTable.Syntax=[ <Lista de datos brutos> ]\n[ <Acumulada o no (true/false)>, <Lista de datos brutos> ]\n[ <Lista de límites de clases>, <Lista de datos brutos> ]\n[ <Acumulada o no (true/false)>, <Lista de límites de clases>, <Lista de datos brutos> ]\n[ <Lista de límites de clases>, <Lista de datos brutos>, <Usar densidad o no (true/false)>, <Factor de escala de densidad (opcional)> ]\n[ <Acumulada o no (true/false)>, <Lista de límites de clases>, <Lista de datos brutos>, <Usar densidad o no (true/false)>, <Factor de escala de densidad (opcional)> ]
FromBase.Syntax=[ "<Número entre comillas (como texto)>", <Base> ]
Function.Syntax=[ <Lista de números> ]\n[ <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]
Function.Syntax3D=[ <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]\n[ <Expresión>, <Parámetro 1>, <Valor inicial>, <Valor final>, <Parámetro 2>, <Valor inicial>, <Valor final> ]
GCD.Syntax=[ <Lista de números> ]\n[ <Número>, <Número> ]
GCD.SyntaxCAS=[ <Lista de números> ]\n[ <Lista de polinomios> ]\n[ <Número>, <Número> ]\n[ <Polinomio>, <Polinomio> ]
Gamma.Syntax=[ <Alfa>, <Beta>, x ]\n[ <Alfa>, <Beta>, <Valor> ]\n[ <Alfa>, <Beta>, x, <Acumulada o no (true/false)> ]
Gamma.SyntaxCAS=[ <Alfa>, <Beta>, <Valor> ]
GeometricMean.Syntax=[ <Lista de números> ]
Groebner=Gröbner
Groebner.SyntaxCAS=[ <Lista de polinomios> ]\n[ <Lista de polinomios>, <Lista de variables> ]\n[ <Lista de polinomios>, <Lista de variables>, <Tipo de orden de variables> ]
HarmonicMean.Syntax=[ <Lista de números> ]
Histogram.Syntax=[ <Lista de límites de clases>, <Lista de alturas> ]\n[ <Lista de límites de clases>, <Lista de datos brutos>, <Usar densidad o no (true/false)>, <Factor de escala de densidad (opcional)> ]\n[ <Acumulada o no (true/false)>, <Lista de límites de clases>, <Lista de datos brutos>, <Usar densidad o no (true/false)>, <Factor de escala de densidad (opcional)> ]
HistogramRight.Syntax=[ <Lista de límites de clases>, <Lista de alturas> ]\n[ <Lista de límites de clases>, <Lista de datos brutos>, <Usar densidad o no (true/false)>, <Factor de escala de densidad (opcional)> ]\n[ <Acumulada o no (true/false)>, <Lista de límites de clases>, <Lista de datos brutos>, <Usar densidad o no (true/false)>, <Factor de escala de densidad (opcional)> ]
Hull.Syntax=[ <Lista de puntos>, <Porcentaje> ]
HyperGeometric.Syntax=[ <Tamaño de población>, <Número de éxitos>, <Tamaño de muestra> ]\n[ <Tamaño de población>, <Número de éxitos>, <Tamaño de muestra>, <Acumulada o no (true/false)> ]\n[ <Tamaño de población>, <Número de éxitos>, <Tamaño de muestra>, <Valor>, <Acumulada o no (true/false)> ]
HyperGeometric.SyntaxCAS=[ <Tamaño de población>, <Número de éxitos>, <Tamaño de muestra>, <Valor>, <Acumulada o no (true/false)> ]
Hyperbola.Syntax=[ <Punto (foco)>, <Punto (foco)>, <Número (semieje mayor)> ]\n[ <Punto (foco)>, <Punto (foco)>, <Segmento (semieje mayor)> ]\n[ <Punto (foco)>, <Punto (foco)>, <Punto (en la hipérbola)> ]
ImplicitCurve.Syntax=[ <Lista de puntos> ]\n[ <f(x, y)> ]
ImplicitDerivative.Syntax=[ <f(x y)> ]
ImplicitDerivative.SyntaxCAS=[ <f(x y)> ]\n[ <Expresión>, <Variable dependiente>, <Variable independiente> ]
IndexOf=ÍndiceDe
IndexOf.Syntax=[ <Objeto>, <Lista> ]\n[ <Texto>, <Texto> ]\n[ <Objeto>, <Lista>, <Índice inicial> ]\n[ <Texto>, <Texto>, <Índice inicial> ]
Integral.Syntax=[ <Función> ]\n[ <Función>, <Variable> ]\n[ <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]\n[ <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo>, <Evaluar o no (true/false)> ]
Integral.SyntaxCAS=[ <Función> ]\n[ <Función>, <Variable> ]\n[ <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]\n[ <Función>, <Variable>, <Valor inicial>, <Valor final> ]
IntegralBetween.Syntax=[ <Función>, <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]\n[ <Función>, <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo>, <Evaluar o no (true/false)> ]
IntegralBetween.SyntaxCAS=[ <Función>, <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]\n[ <Función>, <Función>, <Variable>, <Valor inicial>, <Valor final> ]
Intersect.Syntax=[ <Objeto>, <Objeto> ]\n[ <Objeto>, <Objeto>, <Índice del punto de intersección> ]\n[ <Objeto>, <Objeto>, <Punto inicial> ]\n[ <Función>, <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]\n[ <Curva 1>, <Curva 2>, <Parámetro 1>, <Parámetro 2> ]
IntersectPath.Syntax=[ <Recta>, <Polígono> ]\n[ <Recta>, <Cónica> ]
InverseBinomial.Syntax=[ <Número de ensayos>, <Probabilidad de éxito>, <Probabilidad> ]
InverseChiSquared.Syntax=[ <Grados de libertad>, <Probabilidad> ]
InverseFDistribution.Syntax=[ <Grados de libertad del numerador>, <Grados de libertad del denominador>, <Probabilidad> ]
InverseHyperGeometric.Syntax=[ <Tamaño (población)>, <Número de éxitos>, <Tamaño (muestra)>, <Probabilidad> ]
InverseLogNormal.Syntax=[ <Media>, <Desviación estándar>, <Probabilidad> ]
InverseNormal.Syntax=[ <Media>, <Desviación estándar>, <Probabilidad> ]
InversePascal.Syntax=[ <Número de éxitos>, <Probabilidad de éxito>, <Probabilidad> ]
InverseTDistribution.Syntax=[ <Grados de libertad>, <Probabilidad> ]
InverseZipf.Syntax=[ <Número de elementos>, <Exponente>, <Probabilidad> ]
IsInteger.Syntax=[ <Número> ]
Iteration.Syntax=[ <Función>, <Valor inicial>, <Número de iteraciones> ]
IterationList.Syntax=[ <Función>, <Valor inicial>, <Número de iteraciones> ]
Join.Syntax=[ <Lista de listas> ]\n[ <Lista>, <Lista>, ... ]
LCM.Syntax=[ <Lista de números> ]\n[ <Número>, <Número> ]
LCM.SyntaxCAS=[ <Lista de números> ]\n[ <Lista de polinomios> ]\n[ <Número>, <Número> ]\n[ <Polinomio>, <Polinomio> ]
LaTeX.Syntax=[ <Objeto> ]\n[ <Objeto>, <Sustituye o no las variables (true/false)> ]\n[ <Objeto>, <Sustituye o no las variables (true/false)>, <Muestra o no el nombre (true/false)> ]
Last=Último
Last.Syntax=[ <Lista> ]\n[ <Texto> ]\n[ <Lista>, <Número de elementos> ]\n[ <Texto>, <Número de elementos> ]
Last.SyntaxCAS=[ <Lista> ]\n[ <Lista>, <Número de elementos> ]
LeftSide.SyntaxCAS=[ <Ecuación> ]\n[ <Lista de ecuaciones> ]\n[ <Lista de ecuaciones>, <Número (índice)> ]
LeftSum.Syntax=[ <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo>, <Número de rectángulos> ]
Length.Syntax=[ <Objeto> ]\n[ <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]\n[ <Función>, <Punto inicial>, <Punto final> ]\n[ <Curva>, <Valor inicial de t>, <Valor final de t> ]\n[ <Curva>, <Punto inicial>, <Punto final> ]
Length.SyntaxCAS=[ <Función o Curva>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]\n[ <Función o Curva>, <Variable>, <Punto Inicial>, <Punto Final> ]
LetterToUnicode.Syntax=[ <Letra (entre comillas)> ]
Line.Syntax=[ <Punto>, <Punto> ]\n[ <Punto>, <Recta (paralela)> ]\n[ <Punto>, <Vector director> ]
Locus.Syntax=[ <Punto que trazará el lugar>, <Punto> ]\n[ <Punto que trazará el lugar>, <Deslizador> ]\n[ <Campode direcciones>, <Punto> ]\n[ <f(x y)>, <Punto> ]
LocusEquation.Syntax=[ <Lugar geométrico> ]\n[ <Punto del lugar>, <Punto variable> ]
LogNormal.Syntax=[ <Media>, <Desviación estándar>, x ]\n[ <Media>, <Desviación estándar>, <Valor> ]\n[ <Media>, <Desviación estándar>, x, <Acumulada o no (true/false)> ]
Logistic.Syntax=[ <Media>, <Escala>, x ]\n[ <Media>, <Escala>, <Valor> ]\n[ <Media>, <Escala>, x, <Acumulada o no (true/false)> ]
LowerSum.Syntax=[ <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo>, <Número de rectángulos> ]
Max.Syntax=[ <Intervalo> ]\n[ <Lista> ]\n[ <Número>, <Número> ]\n[ <Lista de datos>, <Lista de frecuencias> ]\n[ <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]
Max.SyntaxCAS=[ <Lista> ]\n[ <Número>, <Número> ]
Maximize.Syntax=[ <Número dependiente>, <Número libre> ]
Mean.Syntax=[ <Lista de datos brutos> ]\n[ <Lista de números>, <Lista de frecuencias> ]
Mean.SyntaxCAS=[ <Lista de números> ]
MeanX.Syntax=[ <Lista de puntos> ]
MeanY.Syntax=[ <Lista de puntos> ]
Median.Syntax=[ <Lista de datos brutos> ]\n[ <Lista de números>, <Lista de frecuencias> ]
Median.SyntaxCAS=[ <Lista de números> ]
Min.Syntax=[ <Intervalo> ]\n[ <Lista> ]\n[ <Número>, <Número> ]\n[ <Lista de datos>, <Lista de frecuencias> ]\n[ <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]
Min.SyntaxCAS=[ <Lista> ]\n[ <Número>, <Número> ]
Minimize.Syntax=[ <Número dependiente>, <Número libre> ]
MinimumSpanningTree.Syntax=[ <Lista de puntos> ]
Mod.Syntax=[ <Número (dividendo)>, <Número (divisor)> ]\n[ <Polinomio (dividendo)>, <Polinomio (divisor)> ]
Mode.Syntax=[ <Lista de números> ]
NIntegral.SyntaxCAS=[ <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]\n[ <Función>, <Variable>, <Valor inicial>, <Valor final> ]
NSolutions.SyntaxCAS=[ <Ecuación> ]\n[ <Ecuación>, <Variable> ]\n[ <Ecuación>, <Variable = valor inicial> ]\n[ <Lista de ecuaciones>, <Lista de variables> ]
NSolve.SyntaxCAS=[ <Ecuación> ]\n[ <Ecuación>, <Variable> ]\n[ <Ecuación>, <Variable = valor inicial> ]\n[ <Lista de ecuaciones>, <Lista de variables> ]
NSolveODE.Syntax=[ <Lista de derivadas>, <Valor inicial de x>, <Lista de valores iniciales de y>, <Valor final de x> ]
Normal.Syntax=[ <Media>, <Desviación estándar>, x ]\n[ <Media>, <Desviación estándar>, <Valor> ]\n[ <Media>, <Desviación estándar>, x, <Acumulada o no (true/false)> ]
Normal.SyntaxCAS=[ <Media>, <Desviación estándar>, x ]
NormalQuantilePlot.Syntax=[ <Lista de datos brutos> ]
Numeric=ValorDecimal
Numeric.SyntaxCAS=[ <Expresión> ]\n[ <Expresión>, <Número de cifras significativas> ]
Object.Syntax=[ <Nombre del objeto (como texto)> ]
OrthogonalLine.Syntax=[ <Punto>, <Recta> ]\n[ <Punto>, <Segmento> ]\n[ <Punto>, <Vector> ]
OrthogonalLine.Syntax3D=[ <Punto>, <Recta> ]\n[ <Punto>, <Segmento> ]\n[ <Punto>, <Vector> ]\n[ <Punto>, <Plano> ]\n[ <Recta>, <Recta> ]\n[ <Punto>, <Recta>, <Recta> ]\n[ <Punto>, <Vector>, <Vector> ]\n[ <Punto>, <Recta>, <Contexto (plano o espacial)> ]
OrthogonalVector.Syntax=[ <Recta> ]\n[ <Segmento> ]\n[ <Vector> ]
PMCC=CoeficienteCorrelación
PMCC.Syntax=[ <Lista de puntos> ]\n[ <Lista de x>, <Lista de y> ]
Pan=DesplazaPíxeles
Parabola.Syntax=[ <Punto (foco)>, <Recta (directriz)> ]
ParseToFunction=TextoAFunción
ParseToFunction.Syntax=[ <Nombre de función>, <Expresión (texto)> ]
ParseToNumber=TextoANúmero
ParseToNumber.Syntax=[ <Nombre de número>, <Expresión (texto)> ]
Pascal.Syntax=[ <Número de éxitos>, <Probabilidad de éxito> ]\n[ <Número de éxitos>, <Probabilidad de éxito>, <Acumulada o no (true/false)> ]\n[ <Número de éxitos>, <Probabilidad de éxito>, <Valor>, <Acumulada o no (true/false)> ]
Pascal.SyntaxCAS=[ <Número de éxitos>, <Probabilidad de éxito>, <Valor>, <Acumulada o no (true/false)> ]
PathParameter.Syntax=[ <Punto sobre el recorrido> ]
Percentile.Syntax=[ <Lista de números>, <Porcentaje> ]
Perimeter.Syntax=[ <Polígono> ]\n[ <Cônica> ]\n[ <Lugar geométrico> ]
Plane.Syntax=[ <Punto>, <Plano> ]\n[ <Punto>, <Recta> ]\n[ <Recta>, <Recta> ]\n[ <Punto>, <Punto>, <Punto> ]
PlaySound.Syntax=[ <Archivo> ]\n[ <Suena o no (true/false)> ]\n[ <Secuencia de notas>, <Instrumento> ]\n[ <Nota>, <Duración>, <Instrumento> ]\n[ <Función>, <Valor mínimo>, <Valor máximo> ]\n[ <Función>, <Valor mínimo>, <Valor máximo>, <Frecuencia de muestreo>, <Profundidad de muestreo> ]
Poisson.Syntax=[ <Media> ]\n[ <Media>, <Acumulada o no (true/false)> ]\n[ <Media>, <Valor>, <Acumulada o no (true/false)> ]
Poisson.SyntaxCAS=[ <Media>, <Valor>, <Acumulada o no (true/false)> ]
PolyLine.Syntax=[ <Lista de puntos> ]\n[ <Punto>, ..., <Punto> ]
Polygon.Syntax=[ <Lista de puntos> ]\n[ <Punto (vértice inicial)>, ..., <Punto (vértice final)> ]\n[ <Punto (vértice)>, <Punto (vértice consecutivo)>, <Número de vértices> ]
Polynomial.Syntax=[ <Función> ]\n[ <Lista de puntos> ]
PreviousPrime=PrimoAnterior
Prism.Syntax=[ <Polígono>, <Punto> ]\n[ <Polígono>, <Número (altura)> ]\n[ <Punto>, <Punto>, ... ]
Product.Syntax=[ <Lista de datos brutos> ]\n[ <Lista de números>, <Número de elementos> ]\n[ <Lista de números>, <Lista de frecuencias> ]
Product.SyntaxCAS=[ <Lista de expresiones> ]\n[ <Expresión>, <Variable>, <Índice inicial>, <Índice final> ]
Prove=Demuestra
Prove.Syntax=[ <Expresión lógica> ]
ProveDetails=DemuestraDetalles
ProveDetails.Syntax=[ <Expresión lógica> ]
Q1.Syntax=[ <Lista de datos brutos> ]\n[ <Lista de números>, <Lista de frecuencias> ]
Q3.Syntax=[ <Lista de datos brutos> ]\n[ <Lista de números>, <Lista de frecuencias> ]
Random.Syntax=[ <Mínimo>, <Máximo> ]
Roots.Syntax=[ <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]
SD.Syntax=[ <Lista de datos brutos> ]\n[ <Lista de números>, <Lista de frecuencias> ]
SampleSD.Syntax=[ <Lista de datos brutos> ]\n[ <Lista de números>, <Lista de frecuencias> ]
SampleVariance.Syntax=[ <Lista de datos brutos> ]\n[ <Lista de números>, <Lista de frecuencias> ]
Segment.Syntax=[ <Punto (extremo)>, <Punto (extremo)> ]\n[ <Punto (extremo)>, <Número (longitud)> ]
SigmaXX.Syntax=[ <Lista de puntos> ]\n[ <Lista de datos brutos> ]\n[ <Lista de números>, <Lista de frecuencias> ]
Sphere.Syntax=[ <Punto>, <Número (radio)> ]
StepGraph.Syntax=[ <Lista de puntos> ]\n[ <Lista de puntos>, <Conectados o no (true/false)> ]\n[ <Lista de x>, <Lista de y> ]\n[ <Lista de puntos>, <Conectados o no (true/false)>, <Estilo de punto> ]\n[ <Lista de x>, <Lista de y>, <Conectados o no (true/false)> ]\n[ <Lista de x>, <Lista de y>, <Conectados o no (true/false)>, <Estilo de punto> ]
StickGraph.Syntax=[ <Lista de puntos> ]\n[ <Lista de puntos>, <Horizontal o no (true/false)> ]\n[ <Lista de x>, <Lista de y> ]\n[ <Lista de x>, <Lista de y>, <Horizontal o no (true/false)> ]
TDistribution.Syntax=[ <Grados de libertad>, x ]\n[ <Grados de libertad>, <Valor> ]\n[ <Grados de libertad>, x, <Acumulada o no (true/false)> ]
TDistribution.SyntaxCAS=[ <Grados de libertad>, <Valor> ]
Tangent.Syntax=[ <Punto>, <Cónica> ]\n[ <Punto>, <Función> ]\n[ <Punto sobre la curva>, <Curva> ]\n[ <Valor de x (punto o número)>, <Función> ]\n[ <Recta (paralela)>, <Cónica> ]\n[ <Circunferencia>, <Circunferencia> ]
TaylorSeries.Syntax=[ <Función>, <Valor de x>, <Número (orden)> ]
Text.Syntax=[ <Objeto> ]\n[ <Objeto>, <Sustituye variables o no (true/false)> ]\n[ <Objeto>, <Punto> ]\n[ <Objeto>, <Punto>, <Sustituye variables o no (true/false)> ]\n[ <Objeto>, <Punto>, <Sustituye variables o no (true/false)>, <Fórmula LaTeX o no (true/false)> ]
TriangleCenter.Syntax=[ <Punto>, <Punto>, <Punto>, <Número (índice)> ]
Triangular.Syntax=[ <Límite Inferior>, <Límite Superior>, <Moda>, x ]\n[ <Límite Inferior>, <Límite Superior>, <Moda>, <Valor> ]\n[ <Límite Inferior>, <Límite Superior>, <Moda>, x, <Acumulada o no (true/false)> ]
Uniform.Syntax=[ <Límite Inferior>, <Límite Superior>, x ]\n[ <Límite Inferior>, <Límite Superior>, <Valor> ]\n[ <Límite Inferior>, <Límite Superior>, x, <Booleana Acumulativa> ]
UnitOrthogonalVector.Syntax=[ <Recta> ]\n[ <Segmento> ]\n[ <Vector> ]
UnitVector.Syntax=[ <Vector> ]\n[ <Recta> ]\n[ <Segmento> ]
UpperSum.Syntax=[ <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo>, <Número de rectángulos> ]
Variance.Syntax=[ <Lista de datos brutos> ]\n[ <Lista de números>, <Lista de frecuencias> ]
Variance.SyntaxCAS=[ <Lista de números> ]
Vector.Syntax=[ <Punto> ]\n[ <Punto inicial>, <Punto final> ]
Vertex.Syntax=[ <Cónica> ]\n[ <Sistema de inecuaciones> ]\n[ <Polígono> ]\n[ <Polígono>, <Número de vértice> ]
Voronoi.Syntax=[ <Lista de puntos> ]
Weibull.Syntax=[ <Figura>, <Escala>, x ]\n[ <Figura>, <Escala>, <Valor de la variable> ]\n[ <Figura>, <Escala>, x, <Acumulada o no (true/false)> ]
Weibull.SyntaxCAS=[ <Figura>, <Escala>, <Valor> ]
ZMean2Estimate=IntervaloMediasZ
ZMean2Estimate.Syntax=[ <Lista de datos (muestra 1)>, <Lista de datos (muestra 2)>, <\u03c31>, <\u03c32>, <Nivel> ]\n[ <Media (muestra 1)>, <\u03c31>, <Tamaño (muestra 1)>, <Media (muestra 2)>, <\u03c32>, <Tamaño (muestra 2)>, <Nivel> ]
ZMean2Test=TestMediasZ
ZMean2Test.Syntax=[ <Lista de datos (muestra 1)>, <\u03c31>, <Lista de datos (muestra 2)>, <\u03c32>, <Cola> ]\n[ <Media (muestra 1)>, <\u03c31>, <Tamaño (muestra 1)>, <Media (muestra 2)>, <\u03c32>, <Tamaño (muestra 2)>, <Cola> ]
ZMeanEstimate=IntervaloMediaZ
ZMeanEstimate.Syntax=[ <Lista de datos (muestra)>, <\u03c3>, <Nivel> ]\n[ <Media (muestra)>, <\u03c3>, <Tamaño (muestra)>, <Nivel> ]
ZMeanTest=TestMediaZ
ZMeanTest.Syntax=[ <Lista de datos (muestra)>, <\u03c3>, <Media (hipótesis)>, <Cola> ]\n[ <Media (muestra)>, <\u03c3>, <Tamaño (muestra)>, <Media (hipótesis)>, <Cola> ]
ZProportion2Estimate=IntervaloProporcionesZ
ZProportion2Estimate.Syntax=[ <Proporción (muestra 1)>, <Tamaño (muestra 1)>, <Proporción (muestra 2)>, <Tamaño (muestra 2)>, <Nivel> ]
ZProportion2Test=TestProporcionesZ
ZProportion2Test.Syntax=[ <Proporción (muestra 1)>, <Tamaño (muestra 1)>, <Proporción (muestra 2)>, <Tamaño (muestra 2)>, <Cola> ]
ZProportionEstimate=IntervaloProporciónZ
ZProportionEstimate.Syntax=[ <Proporción (muestra)>, <Tamaño (muestra)>, <Nivel> ]
ZProportionTest=TestProporciónZ
ZProportionTest.Syntax=[ <Proporción (muestra)>, <Tamaño (muestra)>, <Proporción (hipótesis)>, <Cola> ]
Zip.Syntax=[ <Expresión>, <Variable 1>, <Lista 1>, <Variable 2>, <Lista 2>, ... ]
Zipf.Syntax=[ <Número de elementos>, <Exponente> ]\n[ <Número de elementos>, <Exponente>, <Acumulada o no (true/false)> ]\n[ <Número de elementos>, <Exponente>, <Valor>, <Acumulada o no (true/false)> ]
Zipf.SyntaxCAS=[ <Número de elementos>, <Exponente>, <Valor>, <Acumulada o no (true/false)> ]
ZoomIn.Syntax=[ <Factor de escala> ]\n[ <Factor de escala>, <Punto (centro)> ]\n[ <Mín x>, <Mín y>, <Máx x>, <Máx y> ]
ZoomOut.Syntax=[ <Factor de escala> ]\n[ <Factor de escala>, <Punto (centro)> ]