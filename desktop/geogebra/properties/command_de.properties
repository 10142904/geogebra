ANOVA.Syntax=[ <Liste>, <Liste>, ... ]
AffineRatio=Teilverhältnis
AffineRatio.Syntax=[ <Punkt>, <Punkt>, <Punkt> ]
Angle=Winkel
Angle.Syntax=[ <Objekt> ]\n[ <Vektor>, <Vektor> ]\n[ <Gerade>, <Gerade> ]\n[ <Punkt>, <Scheitelpunkt>, <Punkt> ]\n[ <Punkt>, <Scheitelpunkt>, <Winkel> ]
AngularBisector=Winkelhalbierende
AngularBisector.Syntax=[ <Gerade>, <Gerade> ]\n[ <Punkt>, <Punkt>, <Punkt> ]
Append=Anfügen
Append.Syntax=[ <Liste>, <Objekt> ]\n[ <Objekt>, <Liste> ]
ApplyMatrix=MatrixAnwenden
ApplyMatrix.Syntax=[ <Matrix>, <Objekt> ]
Arc=Bogen
Arc.Syntax=[ <Ellipse>, <Punkt>, <Punkt> ]\n[ <Kreis>, <Punkt>, <Punkt> ]\n[ <Ellipse>, <Parameter Startwert>, <Parameter Endwert> ]\n[ <Kreis>, <Parameter Startwert>, <Parameter Endwert> ]
AreCollinear.Syntax=[ <Punkt>, <Punkt>, <Punkt> ]
AreConcurrent.Syntax=[ <Gerade>, <Gerade>, <Gerade> ]
AreConcyclic.Syntax=[ <Punkt>, <Punkt>, <Punkt>, <Punkt> ]
AreEqual.Syntax=[ <Objekt>, <Objekt> ]
AreParallel.Syntax=[ <Gerade>, <Gerade> ]
ArePerpendicular.Syntax=[ <Gerade>, <Gerade> ]
Area=Fläche
Area.Syntax=[ <Kegelschnitt> ]\n[ <Vieleck> ]\n[ <Punkt>, ..., <Punkt> ]
Asymptote.Syntax=[ <Kegelschnitt> ]\n[ <Funktion> ]\n[ <Implizite Kurve> ]
AttachCopyToView=KopieAnAnsichtHeften
AttachCopyToView.Syntax=[ <Objekt>, <Ansicht 0|1|2> ]\n[ <Objekt>, <Ansicht 0|1|2>, <Punkt 1>, <Punkt 2>, <Bildschirmpunkt 1>, <Bildschirmpunkt 2> ]
Axes=Achsen
Axes.Syntax=[ <Kegelschnitt> ]
AxisStepX=AchsenSchrittweiteX
AxisStepY=AchsenSchrittweiteY
BarChart=Balkendiagramm
BarChart.Syntax=[ <Liste von Daten>, <Liste von Häufigkeiten> ]\n[ <Liste von Rohdaten>, <Balkenbreite> ]\n[ <Liste von Daten>, <Liste von Häufigkeiten>, <Balkenbreite> ]\n[ <Anfangswert>, <Endwert>, <Liste von Balkenhöhen> ]\n[ <Anfangswert>, <Endwert>, <Ausdruck>, <Variable>, <Startwert>, <Endwert> ]\n[ <Anfangswert>, <Endwert>, <Ausdruck>, <Variable>, <Startwert>, <Endwert>, <Schrittweite> ]
BarCode=Barcode
BarCode.Syntax=[ ]\n[ <Bild> ]\n[ <Text oder Zahl>, "<Format (optional)>", "<Fehlerkorrektur (optional)>", <Weite (optional)>, <Höhe (optional)> ]
Barycenter=Massenmittelpunkt
Barycenter.Syntax=[ <Liste von Punkten>, <Liste von Gewichten> ]
Bernoulli.Syntax=[ <Wahrscheinlichkeit>, <Wahrheitswert Verteilungsfunktion> ]
Binomial=BinomialKoeffizient
Binomial.Syntax=[ <Zahl n>, <Zahl k> ]
Binomial.SyntaxCAS=[ <Zahl n>, <Zahl k> ]
BinomialDist=Binomial
BinomialDist.Syntax=[ <Anzahl der Versuche>, <Erfolgswahrscheinlichkeit> ]\n[ <Anzahl der Versuche>, <Erfolgswahrscheinlichkeit>, <Wahrheitswert Verteilungsfunktion> ]\n[ <Anzahl der Versuche>, <Erfolgswahrscheinlichkeit>, <Anzahl der Erfolge>, <Wahrheitswert Verteilungsfunktion> ]
BinomialDist.SyntaxCAS=[ <Anzahl der Versuche>, <Erfolgswahrscheinlichkeit>, <Wert der Variablen>, <Wahrheitswert Verteilungsfunktion> ]
BoxPlot=Boxplot
BoxPlot.Syntax=[ <yAbstand>, <ySkalierung>, <Liste von Rohdaten> ]\n[ <yAbstand>, <ySkalierung>, <Liste von Rohdaten>, <Boolsche Ausreißer> ]\n[ <yAbstand>, <ySkalierung>, <Liste von Daten>, <Liste von Häufigkeiten>, <Boolsche Ausreißer> ]\n[ <yAbstand>, <ySkalierung>, <Startwert>, <Q1>, <Median>, <Q3>, <Endwert> ]
Button=Schaltfläche
Button.Syntax=[ ]\n[ <Beschriftung> ]
CFactor=KFaktorisiere
CFactor.SyntaxCAS=[ <Ausdruck> ]\n[ <Ausdruck>, <Variable> ]
CSolutions=KLösungen
CSolutions.SyntaxCAS=[ <Gleichung> ]\n[ <Gleichung>, <Variable> ]\n[ <Liste von Gleichungen>, <Liste von Variablen> ]
CSolve=KLöse
CSolve.SyntaxCAS=[ <Gleichung> ]\n[ <Gleichung>, <Variable> ]\n[ <Liste von Gleichungen>, <Liste von Variablen> ]
Cauchy.Syntax=[ <Zentrum>, <Breitenparameter>, x ]\n[ <Zentrum>, <Breitenparameter>, <Wert der Variablen> ]\n[ <Zentrum>, <Breitenparameter>, x, <Wahrheitswert Verteilungsfunktion> ]
Cauchy.SyntaxCAS=[ <Median>, <Breitenparameter>, <Wert der Variablen> ]
Cell=Zelle
Cell.Syntax=[ <Spalte>, <Reihe> ]
CellRange=Zellbereich
CellRange.Syntax=[ <Anfangszelle>, <Endzelle> ]
Center=Mittelpunkt
Center.Syntax=[ <Strecke> ]\n[ <Kreis> ]\n[ <Kegelschnitt> ]\n[ <Punkt>, <Punkt> ]
CenterView=Zentralansicht
CenterView.Syntax=[ <Zentraler Punkt> ]
Centroid=Schwerpunkt
Centroid.Syntax=[ <Vieleck> ]
Checkbox=Kontrollkästchen
Checkbox.Syntax=[ ]\n[ <Beschriftung> ]\n[ <Liste> ]\n[ <Beschriftung>, <Liste> ]
ChiSquared=ChiQuadrat
ChiSquared.Syntax=[ <Freiheitsgrade>, x ]\n[ <Freiheitsgrade>, <Wert der Variable> ]\n[ <Freiheitsgrade>, x, Wahrheitswert Verteilungsfunktion ]
ChiSquared.SyntaxCAS=[ <Freiheitsgrade>, <Variable> ]
ChiSquaredTest=ChiQuadratTest
ChiSquaredTest.Syntax=[ <Matrix> ]\n[ <Liste>, <Liste> ]\n[ <Matrix>, <Matrix> ]
Circle=Kreis
Circle.Syntax=[ <Mittelpunkt>, <Radius> ]\n[ <Mittelpunkt>, <Strecke> ]\n[ <Mittelpunkt>, <Punkt> ]\n[ <Punkt>, <Punkt>, <Punkt> ]
CircleArc=Kreisbogen
CircleArc.Syntax=[ <Mittelpunkt>, <Anfangspunkt>, <Punkt> ]
CircleSector=Kreissektor
CircleSector.Syntax=[ <Mittelpunkt>, <Anfangspunkt>, <Punkt> ]
CircumcircleArc=Umkreisbogen
CircumcircleArc.Syntax=[ <Anfangspunkt>, <Punkt>, <Endpunkt> ]
CircumcircleSector=Umkreissektor
CircumcircleSector.Syntax=[ <Anfangspunkt>, <Punkt>, <Endpunkt> ]
Circumference=Umfang
Circumference.Syntax=[ <Vieleck> ]\n[ <Kegelschnitt> ]
Classes=Klassen
Classes.Syntax=[ <Liste von Daten>, <Anzahl der Klassen> ]\n[ <Liste von Daten>, <Anfangswert>, <Klassenbreite> ]
ClosestPoint=NächsterPunkt
ClosestPoint.Syntax=[ <Pfad>, <Punkt> ]\n[ <Umgebung>, <Punkt> ]\n[ <Gerade>, <Gerade> ]
Coefficients=Koeffizienten
Coefficients.Syntax=[ <Polynom> ]\n[ <Kegel> ]
Coefficients.SyntaxCAS=[ <Polynom> ]\n[ <Polynom>, <Variable> ]
Column=Spalte
Column.Syntax=[ <Zellname> ]
ColumnName=Spaltenname
ColumnName.Syntax=[ <Zellname> ]
Command=Befehl
CommonDenominator=GemeinsamerNenner
CommonDenominator.Syntax=[ <Ausdruck>, <Ausdruck> ]
CompetitionRank.Syntax=[ <Liste> ]
CompleteSquare=VollständigesQuadrat
CompleteSquare.Syntax=[ <quadratische Funktion> ]
ComplexRoot=KomplexeNullstelle
ComplexRoot.Syntax=[ <Polynom> ]
Cone=Kegel
Cone.Syntax=[ <Punkt>, <Punkt>, <Radius> ]
Conic=Kegelschnitt
Conic.Syntax=[ <Punkt>, <Punkt>, <Punkt>, <Punkt>, <Punkt> ]\n[ <Zahl>, <Zahl>, <Zahl>, <Zahl>, <Zahl>, <Zahl> ]
ConstructionStep=Konstruktionsschritt
ConstructionStep.Syntax=[ ]\n[ <Objekt> ]
ContinuedFraction=Kettenbruch
ContinuedFraction.Syntax=[ <Zahl> ]\n[ <Zahl>, <Ebene> ]\n[ <Zahl>, <Ebene (optional)>, <Kurzschrift true|false> ]
ConvexHull=KonvexeHülle
ConvexHull.Syntax=[ <Liste von Punkten> ]
CopyFreeObject=KopiereFreiesObjekt
CopyFreeObject.Syntax=[ <Objekt> ]
Corner=Eckpunkt
Corner.Syntax=[ <Nummer des Eckpunkts> ]\n[ <Bild>, <Nummer des Eckpunkts> ]\n[ <Text>, <Nummer des Eckpunkts> ]\n[ <Nummer der Zeichenfläche>, <Nummer des Eckpunkts> ]
CountIf=ZähleWenn
CountIf.Syntax=[ <Bedingung>, <Liste> ]\n[ <Bedingung>, <Variable>, <Liste> ]
Covariance=Kovarianz
Covariance.Syntax=[ <Liste von Punkten> ]\n[ <Liste von Zahlen>, <Liste von Zahlen> ]
Covariance.SyntaxCAS=[ <Liste von Punkten> ]\n[ <Liste von Zahlen>, <Liste von Zahlen> ]
Cross=Kreuzprodukt
Cross.SyntaxCAS=[ <Vektor, Vektor> ]
CrossRatio=Doppelverhältnis
CrossRatio.Syntax=[ <Punkt>, <Punkt>, <Punkt>, <Punkt> ]
Cube=Würfel
Cube.Syntax=[ <Punkt>, <Punkt>, <Richtung> ]
Cubic=KubischeKurve
Cubic.Syntax=[ <Punkt A>, <Punkt B>, <Punkt C>, <Zahl n> ]
Curvature=Krümmung
Curvature.Syntax=[ <Punkt>, <Funktion> ]\n[ <Punkt>, <Kurve> ]
CurvatureVector=Krümmungsvektor
CurvatureVector.Syntax=[ <Punkt>, <Funktion> ]\n[ <Punkt>, <Kurve> ]
CurveCartesian=Kurve
CurveCartesian.Syntax=[ <Ausdruck>, <Ausdruck>, <Parameter>, <Startwert>, <Endwert> ]
CurveCartesian.Syntax3D=[ <Ausdruck>, <Ausdruck>, <Parameter>, <Startwert>, <Endwert> ]\n[ <Ausdruck>, <Ausdruck>, <Ausdruck>, <Parameter>, <Startwert>, <Endwert> ]
Cylinder=Zylinder
Cylinder.Syntax=[ <Punkt>, <Punkt>, <Radius> ]
Defined=IstDefiniert
Defined.Syntax=[ <Objekt> ]
Degree=Grad
Degree.Syntax=[ <Polynom> ]
Degree.SyntaxCAS=[ <Polynom> ]
DelauneyTriangulation.Syntax=[ <Liste von Punkten> ]
Delete=Lösche
Delete.Syntax=[ <Objekt> ]
Denominator=Nenner
Denominator.Syntax=[ <Funktion> ]
Denominator.SyntaxCAS=[ <Ausdruck> ]
Derivative=Ableitung
Derivative.Syntax=[ <Funktion> ]\n[ <Kurve> ]\n[ <Funktion>, <Grad der Ableitung> ]\n[ <Kurve>, <Grad der Ableitung> ]
Derivative.SyntaxCAS=[ <Ausdruck> ]\n[ <Ausdruck>, <Variable> ]\n[ <Ausdruck>, <Variable>, <Grad der Ableitung> ]
Determinant=Determinante
Diameter=KonjugierterDurchmesser
Diameter.Syntax=[ <Gerade>, <Kegelschnitt> ]\n[ <Vektor>, <Kegelschnitt> ]
Dilate=StreckeZentrisch
Dilate.Syntax=[ <Objekt>, <Streckungsfaktor> ]\n[ <Objekt>, <Streckungsfaktor>, <Zentrum der Streckung> ]
Dimension.Syntax=[ <Objekt> ]
Direction=Richtung
Direction.Syntax=[ <Gerade> ]
Directrix=Leitlinie
Directrix.Syntax=[ <Kegelschnitt> ]
Distance=Abstand
Distance.Syntax=[ <Punkt>, <Objekt> ]\n[ <Gerade>, <parallele Gerade> ]
Div=Quotient
Div.Syntax=[ <Dividend>, <Divisor> ]\n[ <Dividend-Polynom>, <Divisor-Polynom> ]
Div.SyntaxCAS=[ <Dividend>, <Divisor> ]\n[ <Dividend Polynom>, <Divisor Polynom> ]
Division.Syntax=[ <Dividend>, <Divisor> ]\n[ <Dividend Polynom>, <Divisor Polynom> ]
Divisors=Teiler
Divisors.Syntax=[ <Zahl> ]
DivisorsList=Teilerliste
DivisorsList.Syntax=[ <Zahl> ]
DivisorsSum=Teilersumme
DivisorsSum.Syntax=[ <Zahl> ]
Dodecahedron=Dodekaeder
Dodecahedron.Syntax=[ <Punkt>, <Punkt>, <Richtung> ]
Dot=Skalarprodukt
Dot.SyntaxCAS=[ <Vektor>, <Vektor> ]
DotPlot.Syntax=[ <Liste von Rohdaten> ]
DynamicCoordinates=DynamischeKoordinaten
DynamicCoordinates.Syntax=[ <Punkt>, <Zahl>, <Zahl> ]
Eccentricity=NumerischeExzentrizität
Eccentricity.Syntax=[ <Kegelschnitt> ]
Element.Syntax=[ <Liste>, <Position des Elements> ]\n[ <Matrix>, <Zeile>, <Spalte> ]\n[ <Liste>, <Index1>, <Index2>, ... ]
Element.SyntaxCAS=[ <Liste>, <Position des Elements> ]\n[ <Matrix>, <Zeile>, <Spalte> ]
Ellipse.Syntax=[ <Brennpunkt>, <Brennpunkt>, <Halbachsenlänge> ]\n[ <Brennpunkt>, <Brennpunkt>, <Strecke> ]\n[ <Brennpunkt>, <Brennpunkt>, <Punkt> ]
Erlang.Syntax=[ <Parameter n>, <Parameter>, x ]\n[ <Parameter n>, <Parameter>, <Wert der Variable> ]\n[ <Parameter n>, <Parameter>, x, <Wahrheitswert Verteilungsfunktion> ]
Excentricity=LineareExzentrizität
Excentricity.Syntax=[ <Kegelschnitt> ]
Execute=Ausführen
Execute.Syntax=[ <Liste von Texten> ]\n[ <Liste von Texten>, <Parameter>, <Parameter>, ... ]
Expand=Multipliziere
Expand.Syntax=[ <Ausdruck> ]
Expand.SyntaxCAS=[ <Ausdruck> ]
Exponential.Syntax=[ <Parameter>, x ]\n[ <Parameter>, <Wert der Variablen> ]\n[ <Parameter>, x, <Wahrheitswert Verteilungsfunktion> ]
Exponential.SyntaxCAS=[ <Parameter>, <Wert der Variablen> ]
Extremum.Syntax=[ <Polynomfunktion> ]\n[ <Funktion>, <Startwert>, <Endwert> ]
FDistribution=FVerteilung
FDistribution.Syntax=[ <Zähler Freiheitsgrade>, <Nenner Freiheitsgrade>, x ]\n[ <Zähler Freiheitsgrade>, <Nenner Freiheitsgrade>, <Wert der Variablen> ]\n[ <Zähler Freiheitsgrade>, <Nenner Freiheitsgrade>, x, <Wahrheitswert kumulativ> ]
FDistribution.SyntaxCAS=[ <Zähler Freiheitsgrade>, <Nenner Freiheitsgrade>, x ]
Factor=Faktorisiere
Factor.Syntax=[ <Funktion> ]
Factor.SyntaxCAS=[ <Funktion> ]\n[ <Ausdruck>, <Variable> ]
Factors=Faktoren
Factors.Syntax=[ <Polynom> ]\n[ <Zahl> ]
Factors.SyntaxCAS=[ <Polynom> ]\n[ <Zahl> ]
FillCells=FülleZellen
FillCells.Syntax=[ <Zellbereich>, <Objekt> ]\n[ <Zelle>, <Liste> ]\n[ <Zelle>, <Matrix> ]
FillColumn=FülleSpalte
FillColumn.Syntax=[ <Spalte>, <Liste> ]
FillRow=FülleZeile
FillRow.Syntax=[ <Zeile>, <Liste> ]
First=Erstes
First.Syntax=[ <Liste> ]\n[ <Text> ]\n[ <Liste>, <Anzahl n der Elemente> ]\n[ <Text>, <Anzahl n der Elemente> ]\n[ <Ortslinie>, <Anzahl n der Elemente> ]
First.SyntaxCAS=[ <Liste> ]\n[ <Liste>, <Anzahl n der Elemente> ]
FirstAxis=Hauptachse
FirstAxis.Syntax=[ <Kegelschnitt> ]
FirstAxisLength=HalbeHauptachsenlänge
FirstAxisLength.Syntax=[ <Kegelschnitt> ]
Fit=Trend
Fit.Syntax=[ <Liste von Punkten>, <Liste von Funktionen> ]\n[ <Liste von Punkten>, <Funktion> ]
FitExp=TrendExp
FitExp.Syntax=[ <Liste von Punkten> ]
FitExp.SyntaxCAS=[ <Liste von Punkten> ]
FitGrowth=TrendExp2
FitGrowth.Syntax=[ <Liste von Punkten> ]
FitLineX=TrendlinieX
FitLineX.Syntax=[ <Liste von Punkten> ]
FitLineY=Trendlinie
FitLineY.Syntax=[ <Liste von Punkten> ]
FitLog=TrendLog
FitLog.Syntax=[ <Liste von Punkten> ]
FitLog.SyntaxCAS=[ <Liste von Punkten> ]
FitLogistic=TrendLogistisch
FitLogistic.Syntax=[ <Liste von Punkten> ]
FitPoly=TrendPoly
FitPoly.Syntax=[ <Liste von Punkten>, <Grad des Polynoms> ]
FitPoly.SyntaxCAS=[ <Liste von Punkten>, <Grad des Polynoms> ]
FitPow=TrendPot
FitPow.Syntax=[ <Liste von Punkten> ]
FitPow.SyntaxCAS=[ <Liste von Punkten> ]
FitSin=TrendSin
FitSin.Syntax=[ <Liste von Punkten> ]
Flatten=Reduzieren
Flatten.Syntax=[ <Liste von Listen> ]
Focus=Brennpunkt
Focus.Syntax=[ <Kegelschnitt> ]
FractionText=BruchText
FractionText.Syntax=[ <Zahl> ]\n[ <Punkt> ]
Frequency=Häufigkeit
Frequency.Syntax=[ <Liste von Rohdaten> ]\n[ <Wahrheitswert kumulativ>, <Liste von Rohdaten> ]\n[ <Liste von Klassenbereichen>, <Liste von Rohdaten>, ]\n[ <Wahrheitswert kumulativ>, <Liste von Klassenbereichen>, <Liste von Rohdaten> ]\n[ <Liste von Klassenbereichen>, <Liste von Rohdaten>, <Wahrheitswert Dichte>, <Skalierungsfaktor> (optional) ]\n[ <Wahrheitswert kumulativ>, <Liste von Klassenbereichen>, <Liste von Rohdaten>, <Wahrheitswert Dichte>, <Skalierungsfaktor> (optional) ]
FrequencyPolygon=Häufigkeitspolygon
FrequencyPolygon.Syntax=[ <Liste von Klassenbereichen>, <Liste von Balkenhöhen> ]\n[ <Liste von Klassenbereichen>, <Liste von Rohdaten>, <Wahrheitswert Dichte>, <Skalierungsfaktor> (optional) ]\n[ <Wahrheitswert kumulativ>, <Liste von Klassenbereichen>, <Liste von Rohdaten>, <Wahrheitswert Dichte>, <Skalierungsfaktor> (optional) ]
FrequencyTable=Häufigkeitstabelle
FrequencyTable.Syntax=[ <Liste von Rohdaten L> ]\n[ <Wahrheitswert kumulativ>, <Liste von Rohdaten L> ]\n[ <Liste von Klassenbereichen>, <Liste von Rohdaten L> ]\n[ <Wahrheitswert kumulativ>, <Liste von Klassenbereichen>, <Liste von Rohdaten L> ]\n[ <Liste von Klassenbereichen>, <Liste von Rohdaten>, <Wahrheitswert Dichte>, <Skalierungsfaktor> (optional) ]\n[ <Wahrheitswert kumulativ>, <Liste von Klassenbereichen>, <Liste von Rohdaten>, <Wahrheitswert Dichte>, <Skalierungsfaktor> (optional) ]
FromBase=VonBasis
FromBase.Syntax=[ "<Zahl als Text>", <Basis> ]
Function=Funktion
Function.Syntax=[ <Liste von Zahlen> ]\n[ <Funktion>, <Startwert a>, <Endwert b> ]
Function.Syntax3D=[ <Funktion>, <Startwert>, <Endwert> ]\n[ <Ausdruck>, <Variable 1>, <Startwert>, <Endwert>, <Variable 2>, <Startwert>, <Endwert> ]
GCD=GGT
GCD.Syntax=[ <Liste von Zahlen> ]\n[ <Zahl>, <Zahl> ]
GCD.SyntaxCAS=[ <Liste von Zahlen> ]\n[ <Liste von Polynomen> ]\n[ <Zahl>, <Zahl> ]\n[ <Polynom>, <Polynom> ]
Gamma.Syntax=[ <Alpha>, <Beta>, x ]\n[ <Alpha>, <Beta>, <Wert der Variablen> ]\n[ <Alpha>, <Beta>, x, <Wahrheitswert Verteilungsfunktion> ]
Gamma.SyntaxCAS=[ <Alpha>, <Beta>, <Wert der Variablen> ]
GeometricMean=GeometrischerMittelwert
GeometricMean.Syntax=[ <Liste von Zahlen> ]
GetTime=Zeitabfrage
GetTime.Syntax=[ ]\n[ "<Format>" ]
Groebner=Gröbner
Groebner.SyntaxCAS=[ <Liste von Polynomen> ]\n[ <Liste von Polynomen>, <Liste von Variablen> ]\n[ <Liste von Polynomen>, <Liste von Variablen>, <Art der Variablenordnung> ]
HarmonicMean=HarmonischerMittelwert
HarmonicMean.Syntax=[ <Liste von Zahlen> ]
HideLayer=VerbergeEbene
HideLayer.Syntax=[ <Zahl> ]
Histogram=Histogramm
Histogram.Syntax=[ <Liste von Klassenbereichen>, <Liste von Balkenhöhen> ]\n[ <Liste von Klassenbereichen>, <Liste von Rohdaten>, <Wahrheitswert Dichte>, <Skalierungsfaktor> (optional) ]\n[ <Wahrheitswert kumulativ>, <Liste von Klassenbereichen>, <Liste von Rohdaten>, <Wahrheitswert Dichte>, <Skalierungsfaktor> (optional) ]
HistogramRight=HistrogrammRechts
HistogramRight.Syntax=[ <Liste von Klassenbereichen>, <Liste von Balkenhöhen> ]\n[ <Liste von Klassenbereichen>, <Liste von Rohdaten>, <Wahrheitswert Dichte>, <Skalierungsfaktor> (optional) ]\n[ <Wahrheitswert kumulativ>, <Liste von Klassenbereichen>, <Liste von Rohdaten>, <Wahrheitswert Dichte>, <Skalierungsfaktor> (optional) ]
Hull=Hülle
Hull.Syntax=[ <Liste von Punkten>, <Prozentsatz> ]
HyperGeometric=Hypergeometrisch
HyperGeometric.Syntax=[ <Größe der Grundgesamtheit>, <Anzahl möglicher Erfolge>, <Stichprobenumfang> ]\n[ <Größe der Grundgesamtheit>, <Anzahl möglicher Erfolge>, <Stichprobenumfang>, <Wert der Variablen>, <Wahrheitswert Verteilungsfunktion> ]
HyperGeometric.SyntaxCAS=[ <Größe der Grundgesamtheit>, <Anzahl möglicher Erfolge>, <Stichprobenumfang>, <Wert der Variablen>, <Wahrheitswert Verteilungsfunktion> ]
Hyperbola=Hyperbel
Hyperbola.Syntax=[ <Brennpunkt>, <Brennpunkt>, <Halbachsenlänge> ]\n[ <Brennpunkt>, <Brennpunkt>, <Strecke> ]\n[ <Brennpunkt>, <Brennpunkt>, <Punkt> ]
Icosahedron=Ikosaeder
Icosahedron.Syntax=[ <Punkt>, <Punkt>, <Richtung> ]
Identity=Einheitsmatrix
Identity.Syntax=[ <Zahl> ]
Identity.SyntaxCAS=[ <Zahl> ]
If=Wenn
If.Syntax=[ <Bedingung>, <Dann Objekt> ]\n[ <Bedingung>, <Dann Objekt>, <Sonst Objekt> ]
ImplicitCurve=ImpliziteKurve
ImplicitCurve.Syntax=[ <Liste von Punkten> ]\n[ <f(x, y)> ]
ImplicitDerivative=ImpliziteAbleitung
ImplicitDerivative.SyntaxCAS=[ <f(x, y)> ]\n[ <Ausdruck>, <Abhängige Variable>, <Unabhängige Variable> ]
Incircle=Inkreis
Incircle.Syntax=[ <Punkt>, <Punkt>, <Punkt> ]
IndexOf=IndexVon
IndexOf.Syntax=[ <Objekt>, <Liste> ]\n[ <Text>, <Text> ]\n[ <Objekt>, <Liste>, <StartIndex> ]\n[ <Text>, <Text>, <Startindex> ]
InfiniteCone=Rotationskegel
InfiniteCone.Syntax=[ <Punkt>, <Vektor>, <Winkel> ]\n[ <Punkt>, <Punkt>, <Winkel> ]\n[ <Punkt>, <Gerade>, <Winkel> ]
InfiniteCylinder=Rotationszylinder
InfiniteCylinder.Syntax=[ <Gerade>, <Radius> ]\n[ <Punkt>, <Vektor>, <Radius> ]\n[ <Punkt>, <Punkt>, <Radius> ]
Insert=Einfügen
Insert.Syntax=[ <Liste>, <Liste>, <Position> ]\n[ <Objekt>, <Liste>, <Position>
IntegerPart=GanzzahligerTeil
IntegerPart.SyntaxCAS=[ <Ausdruck> ]
Integral.Syntax=[ <Funktion> ]\n[ <Funktion>, <Startwert>, <Endwert> ]\n[ <Funktion>, <Startwert>, <Endwert>, <Wahrheitswert Berechne> ]
Integral.SyntaxCAS=[ <Funktion> ]\n[ <Funktion>, <Variable> ]\n[ <Funktion>, <Startwert>, <Endwert> ]\n[ <Funktion>, <Variable>, <Startwert>, <Endwert> ]
IntegralBetween=IntegralZwischen
IntegralBetween.Syntax=[ <Funktion>, <Funktion>, <Startwert>, <Endwert> ]\n[ <Funktion>, <Funktion>, <Startwert>, <Endwert>, <Wahrheitswert Berechne> ]
IntegralBetween.SyntaxCAS=[ <Funktion>, <Funktion>, <Startwert>, <Endwert> ]\n[ <Funktion>, <Funktion>, <Variable>, <Startwert>, <Endwert> ]
Intersect=Schneide
Intersect.Syntax=[ <Objekt>, <Objekt> ]\n[ <Objekt>, <Objekt>, <Nummer des Schnittpunkts> ]\n[ <Objekt>, <Objekt>, <Anfangspunkt> ]\n[ <Funktion>, <Funktion>, <Anfangswert>, <Endwert> ]
Intersect.SyntaxCAS=[ <Funktion>, <Funktion> ]
IntersectRegion=SchneideBereich
IntersectRegion.Syntax=[ <Vieleck>, <Vieleck> ]
Intersection=Schnittmenge
Intersection.Syntax=[ <Liste>, <Liste> ]
IntersectionPaths=SchneideBahnkurven
IntersectionPaths.Syntax=[ <Gerade>, <Vieleck> ]\n[ <Gerade>, <Kegelschnitt> ]
IntersectionPaths.Syntax3D=[ <Gerade>, <Vieleck> ]\n[ <Gerade>, <Kegelschnitt> ]\n[ <Ebene>, <Vieleck> ]\n[ <Ebene>, <Quadrik> ]
InverseBinomial=InversBinomial
InverseBinomial.Syntax=[ <Anzahl der Versuche>, <Erfolgswahrscheinlichkeit>, <Wahrscheinlichkeit> ]
InverseCauchy=InversCauchy
InverseCauchy.Syntax=[ <Zentrum>, <Breitenparameter>, <Wahrscheinlichkeit> ]
InverseChiSquared=InversChiQuadrat
InverseChiSquared.Syntax=[ <Freiheitsgrade>, <Wahrscheinlichkeit> ]
InverseExponential=InversExponential
InverseExponential.Syntax=[ <Parameter>, <Wahrscheinlichkeit> ]
InverseFDistribution=InversFVerteilung
InverseFDistribution.Syntax=[ <Zähler Freiheitsgrade>, <Nenner Freiheitsgrade>, <Wahrscheinlichkeit> ]
InverseGamma=InversGamma
InverseGamma.Syntax=[ <Alpha>, <Beta>, <Wahrscheinlichkeit> ]
InverseHyperGeometric=InversHypergeometrisch
InverseHyperGeometric.Syntax=[ <Größe der Grundgesamtheit>, <Anzahl möglicher Erfolge>, <Stichprobenumfang>, <Wahrscheinlichkeit> ]
InverseLogNormal=InversLogNormal
InverseLogNormal.Syntax=[ <Mittelwert>, <Standardabweichung>, <Wahrscheinlichkeit> ]
InverseLogistic=InversLogistischeVerteilung
InverseLogistic.Syntax=[ <Erwartungswert \u03b1>, <Parameter \u03b2>, <Wahrscheinlichkeit> ]
InverseNormal=InversNormal
InverseNormal.Syntax=[ <Mittelwert>, <Standardabweichung>, <Wahrscheinlichkeit> ]
InversePascal=InversPascal
InversePascal.Syntax=[ <Anzahl möglicher Erfolge>, <Erfolgswahrscheinlichkeit>, <Wahrscheinlichkeit> ]
InversePoisson=InversPoisson
InversePoisson.Syntax=[ <Mittelwert>, <Wahrscheinlichkeit> ]
InverseTDistribution=InversTVerteilung
InverseTDistribution.Syntax=[ <Freiheitsgrade>, <Wahrscheinlichkeit> ]
InverseWeibull=InversWeibull
InverseWeibull.Syntax=[ <Formparameter>, <Skalierungsparameter>, <Wahrscheinlichkeit> ]
InverseZipf=InversZeta
InverseZipf.Syntax=[ <Anzahl der Elemente>, <Exponent>, <Wahrscheinlichkeit> ]
Invert=Invertiere
Invert.Syntax=[ <Matrix> ]\n[ <Funktion> ]
IsInRegion=LiegtImBereich
IsInRegion.Syntax=[ <Punkt>, <Bereich> ]
IsInteger=IstGanzzahlig
IsInteger.Syntax=[ <Zahl> ]
IsPrime=IstPrimzahl
IsPrime.Syntax=[ <Zahl> ]
Iteration.Syntax=[ <Funktion>, <Startwert>, <Anzahl der Iterationen> ]
IterationList=Iterationsliste
IterationList.Syntax=[ <Funktion>, <Startwert>, <Anzahl der Iterationen> ]
Join=Verbinde
Join.Syntax=[ <Liste von Listen> ]\n[ <Liste>, <Liste>, ... ]
KeepIf=BehalteWenn
KeepIf.Syntax=[ <Bedingung>, <Liste> ]\n[ <Bedingung>, <Variable>, <Liste> ]
LCM=KGV
LCM.Syntax=[ <Liste von Zahlen> ]\n[ <Zahl>, <Zahl> ]
LCM.SyntaxCAS=[ <Liste von Zahlen> ]\n[ <Liste von Polynomen> ]\n[ <Zahl>, <Zahl> ]\n[ <Polynom>, <Polynom> ]
LaTeX=FormelText
LaTeX.Syntax=[ <Objekt> ]\n[ <Objekt>, <Wahrheitswert für Substitution von Variablen> ]\n[ <Objekt>, <Wahrheitswert für Substitution von Variablen>, <Wahrheitswert für Anzeige des Namens> ]
Last=Letztes
Last.Syntax=[ <Liste> ]\n[ <Text> ]\n[ <Liste>, <Anzahl der Elemente> ]\n[ <Text>, <Anzahl der Elemente> ]
Last.SyntaxCAS=[ <Liste> ]\n[ <Liste>, <Anzahl der Elemente> ]
LeftSide=LinkeSeite
LeftSide.Syntax=[ <Gleichung> ]
LeftSide.SyntaxCAS=[ <Gleichung> ]\n[ <Liste von Gleichungen> ]\n[ <Liste von Gleichungen>, <Index> ]
LeftSum=LinkeSumme
LeftSum.Syntax=[ <Funktion>, <Startwert>, <Endwert>, <Anzahl der Rechtecke> ]
Length=Länge
Length.Syntax=[ <Vektor> ]\n[ <Punkt> ]\n[ <Liste> ]\n[ <Text> ]\n[ <Ortlsinie> ]\n[ <Funktion>, <Startwert>, <Endwert> ]\n[ <Funktion>, <Anfangspunkt>, <Endpunkt> ]\n[ <Kurve>, <Startwert>, <Endwert> ]\n[ <Kurve>, <Anfangspunkt>, <Endpunkt> ]
Length.SyntaxCAS=[ <Kurve>, <Startwert>, <Endwert> ]\n[ <Kurve>, <Variable>, <Anfangspunkt>, <Endpunkt> ]
LetterToUnicode=BuchstabeZuUnicode
LetterToUnicode.Syntax=[ "<Buchstabe>" ]
Limit=Grenzwert
Limit.Syntax=[ <Funktion>, <Zahl> ]
Limit.SyntaxCAS=[ <Funktion>, <Wert> ]\n[ <Funktion>, <Variable v>, <Wert> ]
LimitAbove=RechtsseitigerGrenzwert
LimitAbove.Syntax=[ <Funktion>, <Wert> ]
LimitAbove.SyntaxCAS=[ <Funktion>, <Wert> ]\n[ <Funktion>, <Variable>, <Wert> ]
LimitBelow=LinksseitigerGrenzwert
LimitBelow.Syntax=[ <Funktion>, <Wert> ]
LimitBelow.SyntaxCAS=[ <Funktion>, <Wert> ]\n[ <Funktion>, <Variable>, <Wert> ]
Line=Gerade
Line.Syntax=[ <Punkt>, <Punkt> ]\n[ <Punkt>, <Parallele Gerade> ]\n[ <Punkt>, <Richtungsvektor> ]
LineBisector=Mittelsenkrechte
LineBisector.Syntax=[ <Strecke> ]\n[ <Punkt>, <Punkt> ]
Locus=Ortslinie
Locus.Syntax=[ <Punkt Q der die Ortslinie erzeugt>, <Punkt P> ]\n[ <Punkt Q der die Ortslinie erzeugt>, <Schieberegler> ]\n[ <Richtungsfeld>, <Punkt> ]\n[ <f(x, y)>, <Punkt> ]
LogNormal.Syntax=[ <Mittelwert>, <Standardabweichung>, x ]\n[ <Mittelwert>, <Standardabweichung>, <Wert der Variablen> ]\n[ <Mittelwert>, <Standardabweichung>, x, <Wahrheitswert Verteilungsfunktion> ]
Logistic=LogistischeVerteilung
Logistic.Syntax=[ <Mittelwert>, <Parameter>, x ]\n[ <Mittelwert>, <Parameter>, <Wert der Variable> ]\n[ <Mittelwert>, <Parameter>, x, <Wahrheitswert Verteilungsfunktion> ]
LowerSum=Untersumme
LowerSum.Syntax=[ <Funktion>, <Startwert>, <Endwert>, <Anzahl der Rechtecke> ]
MatrixRank=Rang
Max.Syntax=[ <Liste> ]\n[ <Intervall> ]\n[ <Zahl>, <Zahl> ]\n[ <Funktion>, <Startwert>, <Endwert> ]
Max.SyntaxCAS=[ <Liste> ]\n[ <Zahl>, <Zahl> ]
Maximize=Maximiere
Maximize.Syntax=[ <Abhängige Zahlr>, <Freie Zahl (Schieberegler)> ]
Mean=Mittelwert
Mean.Syntax=[ <Liste von Rohdaten> ]\n[ <Liste von Zahlen>, <Liste von Häufigkeiten> ]
Mean.SyntaxCAS=[ <Liste von Zahlen> ]
MeanX=MittelwertX
MeanX.Syntax=[ <Liste von Punkten> ]
MeanY=MittelwertY
MeanY.Syntax=[ <Liste von Punkten> ]
Median.Syntax=[ <Liste von Rohdaten> ]\n[ <Liste von Zahlen>, <Liste von Häufigkeiten> ]
Median.SyntaxCAS=[ <Liste von Zahlen> ]
Midpoint=Mittelpunkt
Midpoint.Syntax=[ <Strecke> ]\n[ <Kegelschnitt> ]\n[ <Punkt>, <Punkt> ]
Min.Syntax=[ <Liste> ]\n[ <Intervall> ]\n[ <Zahl>, <Zahl> ]\n[ <Funktion>, <Startwert>, <Endwert> ]
Min.SyntaxCAS=[ <Liste> ]\n[ <Zahl>, <Zahl> ]
Minimize=Minimiere
Minimize.Syntax=[ <Abhängige Zahlr>, <Freie Zahl (Schieberegler)> ]
MinimumSpanningTree=MinimalerSpannbaum
MinimumSpanningTree.Syntax=[ <Liste von Punkten> ]
Mirror=Spiegle
Mirror.Syntax=[ <Objekt>, <Punkt> ]\n[ <Objekt>, <Gerade> ]\n[ <Punkt>, <Kreis> ]
MixedNumber=EchterBruch
MixedNumber.SyntaxCAS=[ <Ausdruck> ]
Mod.Syntax=[ <Dividend>, <Divisior> ]\n[ <Dividend Polynom>, <Divisor Polynom> ]
Mod.SyntaxCAS=[ <Dividend>, <Divisior> ]\n[ <Dividend Polynom>, <Divisor Polynom> ]
Mode=Modalwert
Mode.Syntax=[ <Liste von Zahlen> ]
NIntegral.SyntaxCAS=[ <Funktion>, <Startwert für x>, <Endwert für x> ]\n[ <Funktion>, <Variable>, <Startwert>, <Endwert> ]
NSolutions=NLösungen
NSolutions.SyntaxCAS=[ <Gleichung> ]\n[ <Gleichung>, <Variable> ]\n[ <Gleichung>, <Variable = Startwert> ]\n[ <Liste von Gleichungen>, <Liste von Variablen> ]
NSolve=NLöse
NSolve.SyntaxCAS=[ <Gleichung> ]\n[ <Gleichung>, <Variable> ]\n[ <Gleichung>, <Variable = Startwert> ]\n[ <Liste von Gleichungen>, <Liste von Variablen> ]
Name.Syntax=[ <Objekt> ]
NextPrime=NächstePrimzahl
NextPrime.Syntax=[ <Zahl> ]
Normal.Syntax=[ <Erwartungswert>, <Standardabweichung>, x ]\n[ <Erwartungswert>, <Standardabweichung>, <Wert der Variablen> ]\n[ <Erwartungswert>, <Standardabweichung>, x, <Wahrheitswert Verteilungsfunktion> ]
Normal.SyntaxCAS=[ <Mittelwert>, <Standardabweichung>, <Wert der Variablen> ]
NormalQuantilePlot=NormalQuantilPlot
NormalQuantilePlot.Syntax=[ <Liste von Rohdaten> ]
Numerator=Zähler
Numerator.Syntax=[ <Funktion> ]
Numerator.SyntaxCAS=[ <Ausdruck> ]
Numeric=Numerisch
Numeric.SyntaxCAS=[ <Ausdruck> ]\n[ <Ausdruck>, <signifikante Stellen> ]
Object=Objekt
Object.Syntax=[ <Name des Objekts als Text> ]
Octahedron=Oktaeder
Octahedron.Syntax=[ <Punkt>, <Punkt>, <Richtung> ]
Ordinal.Syntax=[ <ganze Zahl> ]
OrdinalRank=OrdinalRang
OrdinalRank.Syntax=[ <Liste> ]
OrthogonalLine=Senkrechte
OrthogonalLine.Syntax=[ <Punkt>, <Senkrechte Gerade> ]\n[ <Punkt>, <Senkrechte Strecke> ]\n[ <Punkt>, <Vektor> ]
OrthogonalVector=Normalvektor
OrthogonalVector.Syntax=[ <Gerade> ]\n[ <Strecke> ]\n[ <Vektor> ]
OrthogonalVector.SyntaxCAS=[ <Vektor> ]
OsculatingCircle=Krümmungskreis
OsculatingCircle.Syntax=[ <Punkt>, <Funktion> ]\n[ <Punkt>, <Kurve> ]
PMCC=KorrelationsKoeffizient
PMCC.Syntax=[ <Liste von Punkten> ]\n[ <Liste von x-Werten>, <Liste von y-Werten> ]
Pan=Bewege
Pan.Syntax=[ <Anzahl x-Pixel>, <Anzahl y-Pixel> ]
Parabola=Parabel
Parabola.Syntax=[ <Brennpunkt>, <Leitlinie> ]
Parameter.Syntax=[ <Parabel> ]
ParametricDerivative=ParametrischeAbleitung
ParametricDerivative.Syntax=[ <Parameterkurve> ]
ParseToFunction=VerwandleInFunktion
ParseToFunction.Syntax=[ <Name der Funktion>, <Text> ]
ParseToNumber=VerwandleInZahl
ParseToNumber.Syntax=[ <Name der Zahl>, <Text> ]
PartialFractions=Partialbruch
PartialFractions.Syntax=[ <Funktion> ]
PartialFractions.SyntaxCAS=[ <Funktion> ]\n[ <Funktion>, <Variable> ]
Pascal=NegativBinomial
Pascal.Syntax=[ <Anzahl der Erfolge>, <Wahrscheinlichkeit eines Erfolges> ]\n[ <Anzahl der Erfolge>, <Wahrscheinlichkeit eines Erfolges>, <Wahrheitswert Verteilungsfunktion> ]\n[ <Anzahl der Erfolge>, <Wahrscheinlichkeit eines Erfolges>, <Wert der Variablen>, <Wahrheitswert Verteilungsfunktion> ]
Pascal.SyntaxCAS=[ <Anzahl der Erfolge>, <Wahrscheinlichkeit eines Erfolges>, <Wert der Variablen>, <Wahrheitswert Verteilungsfunktion> ]
PathParameter=PfadParameter
PathParameter.Syntax=[ <Punkt auf Pfad> ]
Percentile=Perzentil
Percentile.Syntax=[ <Liste von Zahlen>, <Prozent> ]
Perimeter=Umfang
Perimeter.Syntax=[ <Vieleck> ]\n[ <Kegelschnitt> ]\n[ <Ortslinie> ]
PerpendicularPlane=Normalebene
PerpendicularPlane.Syntax=[ <Punkt>, <Gerade> ]\n[ <Punkt>, <Vektor> ]
Plane=Ebene
Plane.Syntax=[ <Punkt>, <Ebene> ]\n[ <Punkt>, <Gerade> ]\n[ <Punkt>, <Punkt>, <Punkt> ]
PlaySound=SpieleTon
PlaySound.Syntax=[ <Datei> ]\n[ <Wahrheitswert Play> ]\n[ <Notensequenz>, <Instrument> ]\n[ <Note>, <Dauer>, <Instrument> ]\n[ <Funktion>, <minimaler Wert>, <maximaler Wert> ]\n[ <Funktion>, <minimaler Wert>, <maximaler Wert>, <Sample Rate>, <Sample Tiefe> ]
Point=Punkt
Point.Syntax=[ <Objekt> ]\n[ <Objekt>, <Parameter> ]\n[ <Punkt>, <Vektor> ]
PointIn=PunktIn
PointIn.Syntax=[ <Bereich> ]
PointList=PunktListe
PointList.Syntax=[ <Liste> ]
Poisson.Syntax=[ <Erwartungswert> ]\n[ <Erwartungswert>, <Wahrheitswert Verteilungsfunktion> ]\n[ <Erwartungswert>, <Wert der Variablen>, <Wahrheitswert Verteilungsfunktion> ]
Poisson.SyntaxCAS=[ <Mittelwert>, <Wert der Variablen>, <Wahrheitswert Verteilungsfunktion> ]
Polar=Polare
Polar.Syntax=[ <Punkt>, <Kegelschnitt> ]
PolyLine=Streckenzug
PolyLine.Syntax=[ <Liste von Punkten> ]\n[ <Punkt>, ..., <Punkt> ]
Polygon=Vieleck
Polygon.Syntax=[ <Liste von Punkten> ]\n[ <Punkt>, ..., <Punkt> ]\n[ <Punkt>, <Punkt>, <Anzahl der Ecken> ]
Polyhedron=Polyeder
Polyhedron.Syntax=[ <Punkt>, <Punkt>, ... ]
Polynomial=Polynom
Polynomial.Syntax=[ <Funktion> ]\n[ <Liste von Punkten> ]
PreviousPrime=VorherigePrimzahl
PreviousPrime.Syntax=[ <Zahl> ]
PrimeFactors=Primfaktoren
PrimeFactors.Syntax=[ <Zahl> ]
PrimeFactors.SyntaxCAS=[ <Zahl> ]
Prism=Prisma
Prism.Syntax=[ <Vieleck>, <Punkt3D> ]\n[ <Vieleck>, <Höhe> ]\n[ <Punkt3D>, <Punkt3D>, ... ]
Product=Produkt
Product.Syntax=[ <Liste von Rohdaten> ]\n[ <Liste von Zahlen>, <Liste von Häufigkeiten> ]
Product.SyntaxCAS=[ <Liste von Ausdrücken> ]\n[ <Ausdruck>, <Variable>, <Startwert>, <Endwert> ]
Prove=Prüfe
Prove.Syntax=[ <Wahrheitswert> ]
ProveDetails=PrüfeDetails
ProveDetails.Syntax=[ <Boolscher Ausdruck> ]
Pyramid=Pyramide
Pyramid.Syntax=[ <Punkt>, <Punkt>, ... ]
Q1.Syntax=[ <Liste von Rohdaten> ]\n[ <Liste von Zahlen>, <Liste von Häufigkeiten> ]
Q3.Syntax=[ <Liste von Rohdaten> ]\n[ <Liste von Zahlen>, <Liste von Häufigkeiten> ]
RSquare=RQuadrat
RSquare.Syntax=[ <Liste von Punkten>, <Funktion> ]
Radius.Syntax=[ <Kegelschnitt> ]
Random=Zufallszahl
Random.Syntax=[ <Minimalwert>, <Maximalwert> ]\n[ <Minimalwert>, <Maximalwert>, <Wahrheitswert> ]
Random.SyntaxCAS=[ <Minimalwert>, <Maximalwert> ]
RandomBinomial=ZufallszahlBinomialverteilt
RandomBinomial.Syntax=[ <Anzahl der Versuche>, <Wahrscheinlichkeit> ]
RandomBinomial.SyntaxCAS=[ <Anzahl der Versuche>, <Wahrscheinlichkeit> ]
RandomElement=ZufälligesElement
RandomElement.Syntax=[ <Liste> ]
RandomElement.SyntaxCAS=[ <Liste> ]
RandomNormal=ZufallszahlNormalverteilt
RandomNormal.Syntax=[ <Mittelwert>, <Standardabweichung> ]
RandomNormal.SyntaxCAS=[ <Mittelwert>, <Standardabweichung> ]
RandomPoisson=ZufallszahlPoissonverteilt
RandomPoisson.Syntax=[ <Mittelwert> ]
RandomPoisson.SyntaxCAS=[ <Mittelwert> ]
RandomPolynomial=ZufälligesPolynom
RandomPolynomial.Syntax=[ <Grad>, <Minimalwert für Koeffezienten>, <Maximalwert für Koeffezienten> ]
RandomPolynomial.SyntaxCAS=[ <Grad>, <Minimum für die Koeffizienten>, <Maximum für die Koeffizienten> ]\n[ <Variable>, <Grad>, <Minimum für die Koeffizienten>, <Maximum für die Koeffizienten> ]
RandomUniform=ZufallszahlGleichverteilt
Rationalize=DezimalInBruch
Rationalize.SyntaxCAS=[ <Dezimalzahl> ]
Ray=Strahl
Ray.Syntax=[ <Anfangspunkt>, <Punkt> ]\n[ <Anfangspunkt>, <Richtungsvektor> ]
RectangleSum=Rechtecksumme
RectangleSum.Syntax=[ <Funktion>, <Startwert>, <Endwert>, <Anzahl der Rechtecke>, <Wahrheitswert rechtsseitiger Start> ]
ReducedRowEchelonForm=Treppennormalform
Relation=Beziehung
Relation.Syntax=[ <Objekt>, <Objekt> ]
RemoveUndefined=EntferneUndefiniert
RemoveUndefined.Syntax=[ <Liste> ]
Rename=Umbenennen
Rename.Syntax=[ <Objekt>, <Name> ]
ResidualPlot.Syntax=[ <Liste von Punkten>, <Funktion> ]
Reverse=Umkehren
Reverse.Syntax=[ <Liste> ]
RightSide=RechteSeite
RightSide.Syntax=[ <Gleichung> ]
RightSide.SyntaxCAS=[ <Gleichung> ]\n[ <Liste von Gleichungen> ]\n[ <Liste von Gleichungen>, <Index> ]
RigidPolygon=StarresVieleck
RigidPolygon.Syntax=[ <Vieleck> ]\n[ <Vieleck>, <x-Verschiebung>, <y-Verschiebung> ]\n[ <Freier Punkt>, ..., <Freier Punkt> ]
Root=Nullstelle
Root.Syntax=[ <Polynom> ]\n[ <Funktion>, <Startwert> ]\n[ <Funktion>, <Startwert>, <Endwert> ]
Root.SyntaxCAS=[ <Polynom> ]
RootList=NullstellenListe
RootList.Syntax=[ <Liste> ]
RootMeanSquare=Effektivwert
RootMeanSquare.Syntax=[ <Liste von Zahlen> ]
Roots=Nullstellen
Roots.Syntax=[ <Funktion>, <Startwert>, <Endwert> ]
Rotate=Drehe
Rotate.Syntax=[ <Objekt>, <Winkel> ]\n[ <Objekt>, <Winkel>, <Punkt> ]
RotateText=DreheText
RotateText.Syntax=[ <Text>, <Winkel> ]
Row=Zeile
Row.Syntax=[ <Zellname> ]
SD=Standardabweichung
SD.Syntax=[ <Liste von Rohdaten> ]\n[ <Liste von Zahlen>, <Liste von Häufigkeiten> ]
SD.SyntaxCAS=[ <Liste von Zahlen> ]
SDX=StandardabweichungX
SDX.Syntax=[ <Liste von Punkten> ]
SDY=StandardabweichungY
SDY.Syntax=[ <Liste von Punkten> ]
SXX.Syntax=[ <Liste von Zahlen> ]\n[ <Liste von Punkten> ]
SXY.Syntax=[ <Liste von Punkten> ]\n[ <Liste von x-Koordinaten>, <Liste von y-Koordinaten> ]
SYY.Syntax=[ <Liste von Punkten> ]
Sample=Stichprobe
Sample.Syntax=[ <Liste>, <Größe> ]\n[ <Liste>, <Größe>, <Wahrheitswert Wiederholung möglich> ]
Sample.SyntaxCAS=[ <Liste>, <Größe> ]\n[ <Liste>, <Größe>, <Wahrheitswert Wiederholung möglich> ]
SampleSD=StichprobenStandardabweichung
SampleSD.Syntax=[ <Liste von Rohdaten> ]\n[ <Liste von Zahlen>, <Liste von Häufigkeiten> ]
SampleSD.SyntaxCAS=[ <Liste von Zahlen> ]
SampleSDX=StichprobenStandardabweichungX
SampleSDX.Syntax=[ <Liste von Punkten> ]
SampleSDY=StichprobenStandardabweichungY
SampleSDY.Syntax=[ <Liste von Punkten> ]
SampleVariance=Stichprobenvarianz
SampleVariance.Syntax=[ <Liste von Rohdaten> ]\n[ <Liste von Zahlen>, <Liste von Häufigkeiten> ]
SampleVariance.SyntaxCAS=[ <Liste von Zahlen> ]
ScientificText=WissenschaftlicheNotation
ScientificText.Syntax=[ <Zahl> ]\n[ <Zahl>, <Genauigkeit> ]
SecondAxis=Nebenachse
SecondAxis.Syntax=[ <Kegelschnitt> ]
SecondAxisLength=HalbeNebenachsenlänge
SecondAxisLength.Syntax=[ <Kegelschnitt> ]
Sector=Sektor
Sector.Syntax=[ <Kegelschnitt>, <Punkt>, <Punkt> ]\n[ <Kegelschnitt>, <Parameter Startwert>, <Parameter Endwert> ]
Segment=Strecke
Segment.Syntax=[ <Punkt>, <Punkt> ]\n[ <Punkt>, <Länge> ]
SelectObjects=WähleObjekte
SelectObjects.Syntax=[ ]\n[ <Objekt>, <Objekt>, ... ]
SelectedElement=AusgewähltesElement
SelectedElement.Syntax=[ <Liste> ]
SelectedIndex=AusgewählterIndex
SelectedIndex.Syntax=[ <Liste> ]
Semicircle=Halbkreis
Semicircle.Syntax=[ <Anfangspunkt>, <Endpunkt> ]
Sequence=Folge
Sequence.Syntax=[ <Endwert> ]\n[ <Ausdruck>, <Variable>, <Startwert>, <Endwert> ]\n[ <Ausdruck>, <Variable>, <Startwert>, <Endwert>, <Schrittweite> ]
Sequence.SyntaxCAS=[ <Endwert> ]\n[ <Ausdruck>, <Variable>, <Startwert>, <Endwert> ]\n[ <Ausdruck>, <Variable>, <Startwert>, <Endwert>, <Schrittweite> ]
SetActiveView=SetzeAktiveGrafikansicht
SetActiveView.Syntax=[ <Grafikfenster 1|2> ]
SetAxesRatio=SetzeAchsenverhältnis
SetAxesRatio.Syntax=[ <Zahl>, <Zahl> ]
SetAxesRatio.Syntax3D=[ <Zahl>, <Zahl> ]\n[ <Zahl>, <Zahl>, <Zahl> ]
SetBackgroundColor=SetzeHintergrundfarbe
SetBackgroundColor.Syntax=[ <Objekt>, "<Farbe>" ]\n[ <Objekt>, <Rot>, <Grün>, <Blau> ]
SetCaption=SetzeBeschriftung
SetCaption.Syntax=[ <Objekt>, <Text> ]
SetColor=SetzeFarbe
SetColor.Syntax=[ <Objekt>, "<Farbe>" ]\n[ <Objekt>, <Rot>, <Grün>, <Blau> ]
SetConditionToShowObject=SetzeBedingungUmObjektAnzuzeigen
SetConditionToShowObject.Syntax=[ <Objekt>, <Bedingung> ]
SetCoords=SetzeKoordinaten
SetCoords.Syntax=[ <Punkt>, <x>, <y> ]
SetDynamicColor=SetzeDynamischeFarben
SetDynamicColor.Syntax=[ <Objekt>, <Rot>, <Grün>, <Blau> ]\n[ <Objekt>, <Rot>, <Grün>, <Blau>, <Deckkraft> ]
SetFilling=SetzeFüllung
SetFilling.Syntax=[ <Objekt>, <Zahl> ]
SetFixed=SetzeFixiert
SetFixed.Syntax=[ <Objekt>, <true | false> ]
SetLabelMode=SetzeBeschriftungsmodus
SetLabelMode.Syntax=[ <Objekt>, <Zahl> ]
SetLayer=SetzeEbene
SetLayer.Syntax=[ <Objekt>, <Ebene> ]
SetLineStyle=SetzeLinienart
SetLineStyle.Syntax=[ <Linie>, <Zahl> ]
SetLineThickness=SetzeLinienstärke
SetLineThickness.Syntax=[ <Linie>, <Zahl> ]
SetPointSize=SetzePunktgröße
SetPointSize.Syntax=[ <Punkt>, <Zahl> ]
SetPointStyle=SetzePunktform
SetPointStyle.Syntax=[ <Punkt>, <Zahl> ]
SetSeed=SetzeSeed
SetSeed.Syntax=[ <ganze Zahl> ]
SetTooltipMode=SetzeKurzinfoModus
SetTooltipMode.Syntax=[ <Objekt>, <Zahl> ]
SetTrace=SetzeSpur
SetTrace.Syntax=[ <Objekt>, <Wahrheitswert true|false> ]
SetValue=SetzeWert
SetValue.Syntax=[ <Wahrheitswert>, <0|1> ]\n[ <Objekt>, <Objekt> ]\n[ <Liste>, <Zahl>, <Objekt> ]
SetVisibleInView=SetzeSichtbarInGrafikansicht
SetVisibleInView.Syntax=[ <Objekt>, <Grafikfenster 1|2>, <Wahrheitswert> ]
Shear=Verschiebung
Shear.Syntax=[ <Objekt>, <Gerade>, <Verhältnis> ]
ShortestDistance=KürzesterPfad
ShortestDistance.Syntax=[ <Liste von Strecken>, <Startpunkt>, <Endpunkt>, <Wahrheitswert Gewichtung> ]
ShowAxes=ZeigeAchsen
ShowAxes.Syntax=[ ]\n[ <Wahrheitswert> ]\n[ <Ansicht 1|2|3>, <Wahrheitswert> ]
ShowGrid=ZeigeGitter
ShowGrid.Syntax=[ ]\n[ <Wahrheitswert> ]\n[ <Ansicht>, <Wahrheitswert> ]
ShowLabel=ZeigeBeschriftung
ShowLabel.Syntax=[ <Objekt>, <Wahrheitswert> ]
ShowLayer=ZeigeEbene
ShowLayer.Syntax=[ <Nummer> ]
Shuffle=Mischen
Shuffle.Syntax=[ <Liste> ]
Shuffle.SyntaxCAS=[ <Liste> ]
SigmaXX.Syntax=[ <Liste von Punkten> ]\n[ <Liste von Rohdaten> ]\n[ <Liste von Zahlen>, <Liste von Häufigkeiten> ]
SigmaXY.Syntax=[ <Liste von Punkten> ]\n[ <Liste von x-Koordinaten>, <Liste von y-Koordinaten> ]
SigmaYY.Syntax=[ <Liste von Punkten> ]
Simplify=Vereinfache
Simplify.Syntax=[ <Funktion> ]\n[ <Text> ]
Simplify.SyntaxCAS=[ <Funktion> ]
Slider=Schieberegler
Slider.Syntax=[ <Min>, <Max>, <Schrittweite>, <Geschwindigkeit>, <Breite>, <IstWinkel>, <Horizontal>, <Animiert>, <Zufällig> ]
Slope=Steigung
Slope.Syntax=[ <Gerade> ]
SlopeField=Richtungsfeld
SlopeField.Syntax=[ <f(x, y)> ]\n[ <f(x, y)>, <Zahl n> ]\n[ <f(x, y)>, <Zahl n>, <Längenfaktor a> ]\n[ <f(x, y)>, <Zahl n>, <Längenfaktor a>, <Min x>, <Min y>, <Max x>, <Max y> ]
SlowPlot=LangsamesZeichnen
SlowPlot.Syntax=[ <Funktion> ]
Solutions=Lösungen
Solutions.SyntaxCAS=[ <Gleichung> ]\n[ <Gleichung>, <Variable> ]\n[ <Liste von Gleichungen>, <Liste von Variablen> ]
Solve=Löse
Solve.SyntaxCAS=[ <Gleichung in x> ]\n[ <Gleichung>, <Variable> ]\n[ <Liste von Gleichungen>, <Liste von Variablen> ]
SolveODE=LöseDgl
SolveODE.Syntax=[ <f'(x, y)>, <Start x>, <Start y>, <End x>, <Schrittweite> ]\n[ <f(x, y)>, <g(x, y)>, <Start x>, <Start y>, <End t>, <Schrittweite> ]\n[ <b(x)>, <c(x)>, <f(x)>, <Start x>, <Start y>, <Start y'>, <End x>, <Schrittweite> ]
SolveODE.SyntaxCAS=[ <Gleichung> ]\n[ <Gleichung>, <Abhängige Variable>, <Unabhängige Variable> ]
Sort=Sortiere
Sort.Syntax=[ <Liste> ]\n[ <Liste>, <abhängige Liste> ]
Spearman.Syntax=[ <Liste von Punkten> ]\n[ <Liste von Zahlen>, <Liste von Zahlen> ]
Sphere=Kugel
Sphere.Syntax=[ <Punkt>, <Radius> ]
StartAnimation.Syntax=[ ]\n[ <Wahrheitswert> ]\n[ <Schieberegler oder Punkt>, <Schieberegler oder Punkt>, ... ]\n[ <Schieberegler oder Punkt>, <Schieberegler oder Punkt>, ..., <Wahrheitswert> ]
StemPlot=StammBlattDiagramm
StemPlot.Syntax=[ <Liste> ]\n[ <Liste>, <Anordnung -1|0|1> ]
Stretch=Strecken
Stretch.Syntax=[ <Objekt>, <Vektor> ]\n[ <Objekt>, <Gerade>, <Verhältnis> ]
Substitute=Ersetze
Substitute.SyntaxCAS=[ <Ausdruck>, <Substitutionsliste> ]\n[ <Ausdruck>, <von>, <durch> ]
Sum=Summe
Sum.Syntax=[ <Liste> ]\n[ <Liste>, <Zahlen der Elemente> ]\n[ <Liste>, <Liste von Häufigkeiten> ]
Sum.SyntaxCAS=[ <Ausdruck>, <Variable>, <Startwert>, <Endwert> ]
SumSquaredErrors=SQA
SumSquaredErrors.Syntax=[ <Liste von Punkten>, <Funktion> ]
SurdText=IrrationalerText
SurdText.Syntax=[ <Zahl> ]\n[ <Punkt> ]\n[ <Zahl>, <Liste> ]
TDistribution=TVerteilung
TDistribution.Syntax=[ <Freiheitsgrade f>, x ]\n[ <Freiheitsgrade f>, <Wert der Variablen v> ]\n[ <Freiheitsgrade f>, x, <Wahrheitswert Verteilungsfunktion> ]
TDistribution.SyntaxCAS=[ <Freiheitsgrade>, <Wert der Variablen> ]
TMean2Estimate=TMittelwert2Schätzer
TMean2Estimate.Syntax=[ <Liste von Stichprobe 1>, <Liste von Stichprobe 2>, <Konfidenzniveau \u03b1>, <Boolean GleicheVarianz> ]\n[ <Stichprobenmittelwert 1>, <Stichprobenstandardabweichung 1>, <Stichprobengröße 1>, <Stichprobenmittelwert 2>, <Stichprobenstandardabweichung 2>, <Stichprobengröße 2>, <Konfidenzniveau \u03b1>, <Boolean GleicheVarianz> ]
TMeanEstimate=TMittelwertSchätzer
TMeanEstimate.Syntax=[ <Stichprobenliste>, <Konfidenzniveau> ]\n[ <Stichprobenmittelwert>, <Stichprobenstandardabweichung>, <Stichprobengröße>, <Konfidenzniveau> ]
TTest.Syntax=[ <Stichprobenliste>, <Vermuteter Mittelwert>, <Seite> ]\n[ <Stichprobenmittelwert>, <Standardabweichung Stichprobe>, <Größe Stichprobe>, <vermuteter Mittelwert>, <Seite> ]
TTest2.Syntax=[ <Stichprobenliste 1>, <Stichprobenliste 2>, <Seite>, <Boolean GemeinsameVarianz> ]\n[ <Stichprobenmittelwert 1>, <Stichprobenstandardabweichung 1>, <Stichprobengröße 1>, <Stichprobenmittelwert 2>, <Stichprobenstandardabweichung 2>, <Stichprobengröße 2>, <Seite>, <Boolean GemeinsameVarianz> ]
TTestPaired=TTestGepaart
TTestPaired.Syntax=[ <Stichprobe 1>, <Stichprobe 2>, <Seite> ]
TableText=TabellenText
TableText.Syntax=[ <Liste>, <Liste>, ... ]\n[ <Liste>, <Liste>, ..., <Textausrichtung> ]
Take=Teilliste
Take.Syntax=[ <Liste>, <Anfangsposition> ]\n[ <Text>, <Anfangsposition> ]\n[ <Liset>, <Anfangsposition>, <Endposition> ]\n[ <Text>, <Anfangsposition>, <Endposition> ]
Take.SyntaxCAS=[ <Liste>, <Anfangsposition>, <Endposition> ]
Tangent=Tangente
Tangent.Syntax=[ <Punkt>, <Kegelschnitt> ]\n[ <Punkt>, <Funktion> ]\n[ <Punkt auf Kurve>, <Kurve> ]\n[ <x-Wert>, <Funktion> ]\n[ <Parallele Gerade>, <Kegelschnitt> ]\n[ <Parallele Strecke>, <Kegelschnitt> ]\n[ <Kreis>, <Kreis> ]
TaylorSeries=TaylorReihe
TaylorSeries.Syntax=[ <Funktion>, <x-Wert>, <Grad> ]
TaylorSeries.SyntaxCAS=[ <Funktion>, <x-Wert>, <Grad> ]\n[ <Funktion>, <Variable>, <Variablenwert>, <Grad> ]
Tetrahedron=Tetraeder
Tetrahedron.Syntax=[ <Punkt>, <Punkt>, <Richtung> ]
Text.Syntax=[ <Objekt> ]\n[ <Objekt>, <Wahrheitswert für Substitution von Variablen> ]\n[ <Objekt>, <Punkt> ]\n[ <Objekt>, <Punkt>, <Wahrheitswert für Substitution von Variablen> ]\n[ <Objekt>, <Punkt>, <Wahrheitswert für Substitution von Variablen>, <Wahrheitswert für LaTeX Fomel> ]
TextToUnicode=TextZuUnicode
Textfield=Eingabefeld
Textfield.Syntax=[ ]\n[ <Verknüpftes Objekt> ]
TiedRank=GebundenerRang
TiedRank.Syntax=[ <Liste> ]
ToBase=ZuBasis
ToBase.Syntax=[ <Zahl>, <Basis> ]
ToComplex=InKomplex
ToComplex.Syntax=[ <Vektor> ]
ToExponential=InExponential
ToExponential.SyntaxCAS=[ <Komplexe Zahl> ]
ToPoint=InPunkt
ToPoint.SyntaxCAS=[ <Komplexe Zahl> ]
ToPolar=InPolar
ToPolar.Syntax=[ <Komplexe Zahl> ]\n[ <Vektor> ]
ToolImage=WerkzeugBild
ToolImage.Syntax=[ <Nummer> ]
Top=Dodekaeder
Translate=Verschiebe
Translate.Syntax=[ <Objekt>, <Vektor> ]\n[ <Vektor>, <Anfangspunkt> ]
Transpose=Transponiere
TrapezoidalSum=Trapezsumme
TrapezoidalSum.Syntax=[ <Funktion>, <Startwert>, <Endwert>, <Anzahl der Trapeze> ]
TravelingSalesman=Handelsreisendenproblem
TravelingSalesman.Syntax=[ <Liste von Punkten> ]
TriangleCenter=Dreieckspunkt
TriangleCenter.Syntax=[ <Punkt A>, <Punkt B>, <Punkt C>, <Zahl n> ]
TriangleCurve=Dreieckskurve
TriangleCurve.Syntax=[ <Punkt>, <Punkt>, <Punkt>, <Gleichung> ]
Triangular=Dreiecksverteilung
Triangular.Syntax=[ <Untere Grenze>, <Obere Grenze>, <Modalwert>, x ]\n[ <Untere Grenze>, <Obere Grenze>, <Modalwert>, <Wert der Variable> ]\n[ <Untere Grenze>, <Obere Grenze>, <Modalwert>, x, <Wahrheitswert Verteilungsfunktion> ]
TrigCombine=TrigKombiniere
TrigCombine.Syntax=[ <Ausdruck> ]\n[ <Ausdruck>, <Zielfunktion> ]
TrigExpand=TrigErweitere
TrigExpand.Syntax=[ <Ausdruck> ]\n[ <Ausdruck>, <Zielfunktion> ]
TrigExpand.SyntaxCAS=[ <Ausdruck> ]\n[ <Ausdruck>, <Zielfunktion> ]\n[ <Ausdruck>, <Zielfunktion>, <Argument> ]\n[ <Ausdruck>, <Zielfunktion>, <Argument>, <Argument> ]
TrigSimplify=TrigVereinfache
TrigSimplify.Syntax=[ <Ausdruck> ]
Trilinear.Syntax=[ <Punkt>, <Punkt>, <Punkt>, <Zahl>, <Zahl>, <Zahl> ]
TurningPoint=Wendepunkt
TurningPoint.Syntax=[ <Polynom> ]
Turtle=Schildkröte
Turtle.Syntax=[ ]
TurtleBack=SchildkröteZurück
TurtleBack.Syntax=[ <Schildkröte>, <Abstand> ]
TurtleForward=SchildkröteVor
TurtleForward.Syntax=[ <Schildkröte>, <Abstand> ]
TurtleLeft=SchildkröteLinks
TurtleLeft.Syntax=[ <Schildkröte>, <Winkel> ]
TurtleRight=SchildkröteRechts
TurtleRight.Syntax=[ <Schildkröte>, <Winkel> ]
UnicodeToLetter=UnicodeZuBuchstabe
UnicodeToLetter.Syntax=[ <Natürliche Zahl> ]
UnicodeToText=UnicodeZuText
UnicodeToText.Syntax=[ <Liste von natürlichen Zahlen> ]
Uniform=Gleichverteilung
Uniform.Syntax=[ <Untere Grenze>, <Obere Grenze>, x ]\n[ <Untere Grenze>, <Obere Grenze>, <Wert der Variablen> ]\n[ <Untere Grenze>, <Obere Grenze>, x, <Wahrheitswert Verteilungsfunktiont> ]
Union=Vereinigungsmenge
Union.Syntax=[ <Liste>, <Liste> ]\n[ <Vieleck1>, <Vieleck2> ]
Unique=Einzigartig
Unique.Syntax=[ <Liste> ]
Unique.SyntaxCAS=[ <Liste> ]
UnitOrthogonalVector=Einheitsnormalvektor
UnitOrthogonalVector.Syntax=[ <Gerade> ]\n[ <Strecke> ]\n[ <Vektor> ]
UnitOrthogonalVector.SyntaxCAS=[ <Vektor> ]
UnitVector=Einheitsvektor
UnitVector.Syntax=[ <Vektor> ]\n[ <Gerade> ]\n[ <Strecke> ]
UnitVector.SyntaxCAS=[ <Vektor> ]
UpdateConstruction=AktualisiereKonstruktion
UpperSum=Obersumme
UpperSum.Syntax=[ <Funktion>, <Startwert>, <Endwert>, <Anzahl der Rechtecke> ]
Variance=Varianz
Variance.Syntax=[ <Liste von Rohdaten> ]\n[ <Liste von Zahlen>, <Liste von Häufigkeiten> ]
Variance.SyntaxCAS=[ <Liste von Zahlen> ]
Vector=Vektor
Vector.Syntax=[ <Punkt> ]\n[ <Anfangspunkt>, <Endpunkt> ]
Vertex=Scheitel
Vertex.Syntax=[ <Kegelschnitt> ]\n[ <Ungleichung> ]\n[ <Vieleck> ]\n[ <Vieleck>, <Zahl n> ]
VerticalText=VertikalerText
Voronoi.Syntax=[ <Liste von Punkten> ]
Weibull.Syntax=[ <Formparameter>, <Skalierungsparameter>, x ]\n[ <Formparameter>, <Skalierungsparameter>, <Wert der Variablen> ]\n[ <Formparameter>, <Skalierungsparameter>, x, <Wahrheitswert Verteilungsfunktion> ]
Weibull.SyntaxCAS=[ <Formparameter>, <Skalierungsparameter>, <Variable> ]
ZMean2Estimate=Gauß2Schätzer
ZMean2Estimate.Syntax=[ <Stichprobenliste 1>, <Stichprobenliste 2>, <\u03c31>, <\u03c32>, <Signifikanzniveau> ]\n[ <Stichprobenmittelwert 1>, <\u03c31>, <Stichprobengröße 1>, <Stichprobenmittelwert 2>, <\u03c32>, <Stichprobengröße 2>, <Signifikanzniveau> ]
ZMean2Test=Gauß2Test
ZMean2Test.Syntax=[ <Stichprobenliste 1>, <\u03c31>, <Stichprobenliste 2>, <\u03c32>, <Seite> ]\n[ <Stichprobenmittelwert 1>, <\u03c31>, <Stichprobengröße 1>, <Stichprobenmittelwert 2>, <\u03c32>, <Stichprobengröße 2>, <Seite> ]
ZMeanEstimate=GaußSchätzer
ZMeanEstimate.Syntax=[ <Stichprobenliste>, <\u03c3>, <Signifikanzniveau> ]\n[ <Stichprobenmittelwert>, <\u03c3>, <Stichprobengröße>, <Signifikanzniveau> ]
ZMeanTest=GaußTest
ZMeanTest.Syntax=[ <Stichprobenliste>, <\u03c3>, <Vermuteter Mittelwert>, <Seite> ]\n[ <Stichprobenmittelwert>, <\u03c3>, <Stichprobengröße>, <Vermuteter Mittelwert>, <Seite> ]
ZProportion2Estimate=GaußAnteil2Schätzer
ZProportion2Estimate.Syntax=[ <Stichprobenanteil 1>, <Stichprobengröße 1>, <Stichprobenanteil 2>, <Stichprobengröße 2>, <Signifikanzniveau> ]
ZProportion2Test=GaußAnteil2Test
ZProportion2Test.Syntax=[ <Stichprobenanteil 1>, <Stichprobengröße 1>, <Stichprobenanteil 2>, <Stichprobengröße 2>, <Seite> ]
ZProportionEstimate=GaußAnteilSchätzer
ZProportionEstimate.Syntax=[ <Stichprobenanteil>, <Stichprobengröße>, <Signifikanzniveau> ]
ZProportionTest=GaußAnteilTest
ZProportionTest.Syntax=[ <Stichprobenanteil>, <Stichprobengröße>, <Vermuteter Anteil>, <Seite> ]
Zip.Syntax=[ <Ausdruck>, <Var1>, <Liste1>, <Var2>, <Liste2>, ... ]
Zipf=Zeta
Zipf.Syntax=[ <Anzahl der Elemente>, <Exponent> ]\n[ <Anzahl der Elemente>, <Exponent>, <Wahrheitswert Verteilungsfunktion> ]\n[ <Anzahl der Elemente>, <Exponent>, <Wert der Variablen>, <Wahrheitswert Verteilungsfunktion> ]
Zipf.SyntaxCAS=[ <Anzahl der Elemente>, <Exponent>, x, <Wahrheitswert Verteilungsfunktion> ]
ZoomIn.Syntax=[ <Skalierungsfaktor> ]\n[ <Skalierungsfaktor>, <Mittelpunkt> ]\n[ <Min x>, <Min y>, <Max x>, <Max y> ]
ZoomOut.Syntax=[ <Skalierungsfaktor> ]\n[ <Skalierungsfaktor>, <Mittelpunkt> ]
nPr.Syntax=[ <Zahl n>, <Zahl r> ]