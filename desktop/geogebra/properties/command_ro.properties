ANOVA.Syntax=[ <List\u0103>, <List\u0103>, ... ]
AffineRatio=RaportAfin
AffineRatio.Syntax=[ <Punct>, <Punct>, <Punct> ]
Angle=Unghi
Angle.Syntax=[ <Obiect> ]\n[ <Vector>, <Vector> ]\n[ <Dreapt\u0103>, <Dreapt\u0103> ]\n[ <Punct>, <Raport>, <Punct> ]\n[ <Punct>, <Raport>, <Unghi> ]
AngularBisector=Bisectoare
AngularBisector.Syntax=[ <Dreapt\u0103>, <Dreapt\u0103> ]\n[ <Punct>, <Punct>, <Punct> ]
Append=Adaug\u0103
Append.Syntax=[ <List\u0103>, <Obiect> ]\n[ <Obiect>, <List\u0103> ]
ApplyMatrix=Aplica\u0163iMatrice
ApplyMatrix.Syntax=[ <Matrice>, <Obiect> ]
Arc.Syntax=[ <Cerc>, <Punct>, <Punct> ]\n[ <Elips\u0103>, <Punct>, <Punct> ]\n[ <Cerc>, <Valoarea Parametrului>, <Valoarea Parametrului> ]\n[ <Elips\u0103>, <Valoarea Parametrului>, <Valoarea Parametrului> ]
Area=Arie
Area.Syntax=[ <Conic\u0103> ]\n[ <Punct>, ..., <Punct> ]
Asymptote=Asimptot\u0103
Asymptote.Syntax=[ <Conic\u0103> ]
Axes=Axe
Axes.Syntax=[ <Conic\u0103> ]
AxisStepX=PasAxaX
AxisStepY=PasAxaY
BarChart=Diagram\u0103Bare
BarChart.Syntax=[ <List\u0103 de Date>, <List\u0103 de Frecven\u0163e> ]\n[ <List\u0103 de Date>, <List\u0103 de Frecven\u0163e>, <L\u0103\u0163ime Bare> ]\n[ <Valoare Ini\u0163ial\u0103>, <Valoare Final\u0103>, <List\u0103 de În\u0103l\u0163imi> ]\n[ <Valoare Ini\u0163ial\u0103>, <Valoare Final\u0103>, <Variabil\u0103>, <De la num\u0103rul>, <Pân\u0103 la num\u0103rul> ]\n[ <Valoare Ini\u0163ial\u0103>, <Valoare Final\u0103>, <Variabil\u0103>, <De la num\u0103rul>, <Pân\u0103 la num\u0103rul>, <M\u0103rime pas> ]
BarCode=Cod_de_bare
BarCode.Syntax=[ ]\n[ <Imagine> ]\n[ <Text sau numar>, "<Format (optional)>", "<Corectarea erorii (optional)>", <Latime (optional)>, <Inaltime (optional)> ]
Barycenter.Syntax=[ <List\u0103 de puncte>, <List\u0103 de numere> ]
Bernoulli.Syntax=[ <Probabilitate>, <Cumulativ Boolean> ]
Binomial=CoeficientBinomial
Binomial.Syntax=[ <Num\u0103r n>, <Num\u0103r r> ]
Binomial.SyntaxCAS=[ <Num\u0103r>, <Num\u0103r> ]
BinomialDist.Syntax=[ <Num\u0103r de studii>, <Probabilitatea de succes> ]\n[ <Num\u0103r de studii>, <Probabilitatea de succes>, <Cumulativ Boolean> ]\n[ <Num\u0103r de studii>, <Probabilitatea de succes>, <Valoare variabila>, <Cumulativ Boolean> ]
BoxPlot.Syntax=[ <Valoare Ini\u0163ial\u0103 y>, <Scal\u0103 y>, <List\u0103 Date Primare> ]\n[ <Valoare Ini\u0163ial\u0103 y>, <Scal\u0103 y>, <Valoare Ini\u0163ial\u0103>, <Median\u0103>, <Q3>, <Valoare Final\u0103> ]
Button=Buton
Button.Syntax=[ ]\n[ <Legenda> ]
Cauchy.Syntax=[ <Median\u0103>, <Scar\u0103>, x ]\n[ <Median\u0103>, <Scar\u0103>, <Valoare variabil\u0103> ]\n[ <Median\u0103>, <Scar\u0103>, x, <Cumulativ Boolean> ]
Cell=Celula
Cell.Syntax=[ <Coloan\u0103>, <Rând> ]
CellRange=\u015eirCelule
CellRange.Syntax=[ <Celul\u0103 de început>, <Celul\u0103 de sfâr\u015fit> ]
Center=Centru
Center.Syntax=[ <Conic\u0103> ]
Centroid=CentruPoligon
Centroid.Syntax=[ <Poligon> ]
Checkbox=Verifica\u0163iCaseta
Checkbox.Syntax=[ ]\n[ <Legend\u0103> ]\n[ <List\u0103> ]\n[ <Legend\u0103>, <List\u0103> ]
ChiSquared.Syntax=[ <Grade de libertate>, x ]\n[ <Grade de libertate>, <Valori variabile> ]\n[ <Grade de libertate>, x, <Cumulativ Boolean> ]
Circle=Cerc
Circle.Syntax=[ <Punct>, <Raz\u0103> ]\n[ <Punct>, <Segment> ]\n[ <Punct>, <Punct> ]\n[ <Punct>, <Punct>, <Punct> ]
CircleArc=ArcCircular
CircleArc.Syntax=[ <Punct de mijloc>, <Punct>, <Punct> ]
CircleSector=SectorCircular
CircleSector.Syntax=[ <Punct de mijloc>, <Punct>, <Punct> ]
CircumcircleArc=ArcCircumcircular
CircumcircleArc.Syntax=[ <Punct>, <Punct>, <Punct> ]
CircumcircleSector=SectorCircumcircular
CircumcircleSector.Syntax=[ <Punct>, <Punct>, <Punct> ]
Circumference=Circumferin\u0163\u0103
Circumference.Syntax=[ <Conic\u0103> ]
Classes=Clase
Classes.Syntax=[ <List\u0103 de date>, <Num\u0103r de clase> ]\n[ <List\u0103 de date>, <Start>, <L\u0103\u0163ime de clase> ]
ClosestPoint=CelmaiapropiatPunct
ClosestPoint.Syntax=[ <Cale>, <Punct> ]
Coefficients=Coeficien\u0163i
Coefficients.Syntax=[ <Polinomial> ]\n[ <Conic> ]
Column=Coloan\u0103
Column.Syntax=[ <Celul\u0103 din foaia de calcul> ]
ColumnName=NumeColoan\u0103
ColumnName.Syntax=[ <Celul\u0103 din foaia de calcul> ]
Command=Comand\u0103
CompleteSquare=P\u0103tratComplet
CompleteSquare.Syntax=[ <Func\u0163ie p\u0103tratic\u0103> ]
ComplexRoot=R\u0103d\u0103cin\u0103Complex\u0103
ComplexRoot.Syntax=[ <Polinomial> ]
Conic=Conic\u0103
Conic.Syntax=[ <Punct>, <Punct>, <Punct>, <Punct>, <Punct> ]\n[ <Num\u0103r>, <Num\u0103r>, <Num\u0103r>, <Num\u0103r>, <Num\u0103r>, <Num\u0103r> ]
ConstructionStep=PasDeConstruc\u0163ie
ConstructionStep.Syntax=[ ]\n[ <Obiect> ]
ConvexHull.Syntax=[ <List\u0103 de Puncte> ]
CopyFreeObject=Copia\u0163iObiectLiber
CopyFreeObject.Syntax=[ <Obiect> ]
Corner=Col\u0163
Corner.Syntax=[ <Num\u0103r col\u0163uri> ]\n[ <Imagine>, <Num\u0103r col\u0163uri> ]\n[ <Text>, <Num\u0103r col\u0163uri> ]
CountIf=ContorCondi\u0163ional
CountIf.Syntax=[ <Condi\u0163ie>, <List\u0103> ]
Covariance=Covarian\u0163\u0103
Covariance.Syntax=[ <List\u0103 de puncte> ]\n[ <List\u0103 de numere>, <List\u0103 de numere> ]
CrossRatio=RaportAnarmonic
CrossRatio.Syntax=[ <Punct>, <Punct>, <Punct>, <Punct> ]
Curvature=Curbur\u0103
Curvature.Syntax=[ <Punct>, <Func\u0163ie> ]\n[ <Punct>, <Curb\u0103> ]
CurvatureVector=VectorDeCurbur\u0103
CurvatureVector.Syntax=[ <Punct>, <Func\u0163ie> ]\n[ <Punct>, <Curb\u0103> ]
CurveCartesian=Curb\u0103
CurveCartesian.Syntax=[ <Expresie>, <Expresie>, <Variabil\u0103 Parametru>, <Valoare Ini\u0163ial\u0103>, <Valoare Final\u0103> ]
Defined=Define\u015fte
Defined.Syntax=[ <Obiect> ]
Degree=Grad
Degree.Syntax=[ <Polinomial> ]
DelauneyTriangulation=TriangulareDelaunay
DelauneyTriangulation.Syntax=[ <List\u0103 de puncte> ]
Delete=\u015eterge
Delete.Syntax=[ <Obiect> ]
Denominator=Numitor
Denominator.Syntax=[ <Func\u0163ie> ]
Derivative=Derivata
Derivative.Syntax=[ <Func\u0163ie> ]\n[ <Curb\u0103> ]\n[ <Func\u0163ie>, <Num\u0103r> ]\n[ <Func\u0163ie>, <Variabil\u0103> ]\n[ <Curb\u0103>, <Num\u0103r> ]\n[ <Func\u0163ie>, <Variabil\u0103>, <Num\u0103r> ]
Determinant.Syntax=[ <Matrice> ]
Diameter=DiametruConjugat
Diameter.Syntax=[ <Vector>, <Conic\u0103> ]\n[ <Dreapt\u0103>, <Conic\u0103> ]
Dilate=Dilatare
Dilate.Syntax=[ <Obiect>, <Factor de Dilatare> ]\n[ <Obiect>, <Factor de Dilatare>, <Punct Central al Dilat\u0103rii> ]
Direction=Direc\u0163ie
Direction.Syntax=[ <Dreapt\u0103> ]
Directrix=Directoare
Directrix.Syntax=[ <Conic\u0103> ]
Distance=Distan\u0163\u0103
Distance.Syntax=[ <Punct>, <Obiect> ]\n[ <Dreapt\u0103>, <Dreapt\u0103> ]
Div.Syntax=[ <Num\u0103r\u0103tor>, <Numitor> ]
DotPlot.Syntax=[ <List\u0103 de date brute> ]
DynamicCoordinates=CoordonateDinamice
DynamicCoordinates.Syntax=[ <Punct>, <Num\u0103r>, <Num\u0103r> ]
Eccentricity=Excentricitate
Element.Syntax=[ <List\u0103>, <Pozi\u0163ia Elementului> ]
Ellipse=Elips\u0103
Ellipse.Syntax=[ <Focar>, <Focar>, <Lungime Axa Mare> ]\n[ <Focar>, <Focar>, <Segment> ]\n[ <Focar>, <Focar>, <Punct> ]
Excentricity=ExcentricitateLiniar\u0103
Excentricity.Syntax=[ <Conic\u0103> ]
Execute=Execut\u0103
Execute.Syntax=[ <List\u0103 de Texte> ]\n[ <List\u0103 de Texte>, <Parametru>, <Parametru>, ... ]
Expand=Dezvolt\u0103
Expand.Syntax=[ <Expresie> ]
Exponential=Exponen\u0163ial
Exponential.Syntax=[ <Lambda>, x ]\n[ <Lambda>, <Valoare variabil\u0103> ]\n[ <Lambda>, x, <Cumulativ Boolean> ]
Extremum=Extrem
Extremum.Syntax=[ <Polinom> ]
FDistribution=DistribuireF
FDistribution.Syntax=[ <Num\u0103r\u0103tor grade de libertate>, <Numitor grade de libertate>, x ]\n[ <Num\u0103r\u0103tor grade de libertate>, <Numitor grade de libertate>, <Valoare variabil\u0103> ]\n[ <Num\u0103r\u0103tor grade de libertate>, <Numitor grade de libertate>, x, <Cumulativ Boolean> ]
Factor=Factorizeaz\u0103
Factor.Syntax=[ <Polinom> ]
Factors=Factori
Factors.Syntax=[ <Polinomial> ]\n[ <Num\u0103r> ]
FillCells=Completeaz\u0103Celule
FillCells.Syntax=[ <Gam\u0103Celule>, <Obiect> ]\n[ <Gam\u0103Celule>, <List\u0103> ]\n[ <Gam\u0103Celule>, <Matrice> ]
FillColumn=Completeaz\u0103Coloan\u0103
FillColumn.Syntax=[ <Coloan\u0103>, <List\u0103> ]
FillRow=Completeaz\u0103Rând
FillRow.Syntax=[ <Rând>, <List\u0103> ]
First=PrimulElement
First.Syntax=[ <List\u0103> ]\n[ <List\u0103>, <Num\u0103rul de elemente> ]
FirstAxis=AxaMare
FirstAxis.Syntax=[ <Conic\u0103> ]
FirstAxisLength=LungimeSemiaxaMare
FirstAxisLength.Syntax=[ <Conic\u0103> ]
Fit=Potrivit
Fit.Syntax=[ <List\u0103 de puncte>, <List\u0103 de func\u0163ii> ]\n[ <List\u0103 de puncte>, <Func\u0163ie> ]
FitExp=RegresieExponen\u0163ial\u0103
FitExp.Syntax=[ <List\u0103 de puncte> ]
FitGrowth.Syntax=[ <List\u0103 de puncte> ]
FitLineX=XDreapt\u0103Regresie
FitLineX.Syntax=[ <List\u0103 de puncte> ]
FitLineY=YDreapt\u0103Regresie
FitLineY.Syntax=[ <List\u0103 de puncte> ]
FitLog=RegresieLogaritmic\u0103
FitLog.Syntax=[ <List\u0103 de puncte> ]
FitLogistic=RegresieLogistic\u0103
FitLogistic.Syntax=[ <List\u0103 de puncte> ]
FitPoly=RegresiePolinomial\u0103
FitPoly.Syntax=[ <List\u0103 de puncte>, <Gradul polinomului> ]
FitPow=RegresieSeriePuteri
FitPow.Syntax=[ <List\u0103 de puncte> ]
FitSin=RegresieSinusoidal\u0103
FitSin.Syntax=[ <List\u0103 de puncte> ]
Focus=Focar
Focus.Syntax=[ <Conic\u0103> ]
FractionText=TextFrac\u0163ie
FractionText.Syntax=[ <Num\u0103r> ]
Frequency=Frecven\u0163\u0103
Frequency.Syntax=[ <List\u0103 de date brute> ]\n[ <Cumulativ Boolean>, <List\u0103 de date brute> ]\n[ <List\u0103 de limite de clas\u0103>, <List\u0103 de date brute> ]\n[ <Cumulativ Boolean>, <List\u0103 de limite de clas\u0103>, <List\u0103 de date brute> ]\n[ <List\u0103 de limite de clas\u0103>, <List\u0103 de date brute>, <Utiliza\u021bi Densitate>, <Scal\u0103 Factor densitate (op\u021bional)> ]\n[ <Cumulativ Boolean>, <List\u0103 de date brute>, <List\u0103 de date brute>, <Utiliza\u021bi Densitate>, <Scal\u0103 Factor densitate (op\u021bional)> ]
Function=Func\u0163ie
Function.Syntax=[ <Func\u0163ie>, <Valoare Ini\u0163ial\u0103 x>, <Valoare Final\u0103 x> ]
GCD=CMMDC
GCD.Syntax=[ <List\u0103 de Numere> ]\n[ <Num\u0103r>, <Num\u0103r> ]
GeometricMean=MedieGeometric\u0103
GeometricMean.Syntax=[ <List\u0103 de numere> ]
HarmonicMean.Syntax=[ <List\u0103 de numere> ]
HideLayer.Syntax=[ <Num\u0103r> ]
Histogram=Histogram\u0103
Histogram.Syntax=[ <List\u0103 Frontierelor de Clas\u0103>, <List\u0103 de În\u0103l\u0163imi> ]\n[ <List\u0103 Frontierelor de Clas\u0103>, <List\u0103 de Date Neprelucrate> ]
Hull.Syntax=[ <List\u0103 de Puncte>, <Procent> ]
Hyperbola=Hiperbol\u0103
Hyperbola.Syntax=[ <Focar>, <Focar>, <Lungime Axa Mare> ]\n[ <Focar>, <Focar>, <Segment> ]\n[ <Punct>, <Punct>, <Punct> ]
Identity.Syntax=[ <Num\u0103r> ]
If=Dac\u0103
If.Syntax=[ <Condi\u0163ie>, <Atunci> ]\n[ <Condi\u0163ie>, <Atunci>, <Altfel> ]
Insert=Inserare
Insert.Syntax=[ <List\u0103>, <List\u0103>, <Pozi\u0163ie> ]\n[ <Obiect>, <List\u0103>, <Pozi\u0163ie> ]
Integral=Integral\u0103
Integral.Syntax=[ <Func\u0163ie> ]\n[ <Func\u0163ie>, <Valoare Ini\u0163ial\u0103 x>, <Valoare Final\u0103 x> ]\n[ <Func\u0163ie>, <Func\u0163ie>, <Valoare Ini\u0163ial\u0103 x>, <Valoare Final\u0103 x> ]
Intersect=Intersec\u0163ie
Intersect.Syntax=[ <Obiect>, <Obiect> ]\n[ <Obiect>, <Obiect>, <Num\u0103rul puncte de intersec\u0163ie> ]\n[ <Obiect>, <Obiect>, <Punct Ini\u0163ial> ]
Intersection=Intersec\u0163ie
Intersection.Syntax=[ <List\u0103>, <List\u0103> ]
InverseNormal=NormalaInvers\u0103
InverseNormal.Syntax=[ <Medie>, <Devia\u0163ie standard>, <Probabilitate> ]
Invert=Invers\u0103
Invert.Syntax=[ <Matrice> ]
IsInteger=EsteÎntreg
IsInteger.Syntax=[ <Num\u0103r> ]
Iteration=Itera\u0163ie
Iteration.Syntax=[ <Func\u0163ie>, <Valoare Ini\u0163ial\u0103>, <Num\u0103r Itera\u0163ii> ]
IterationList=List\u0103Itera\u0163ie
IterationList.Syntax=[ <Func\u0163ie>, <Valoare Ini\u0163ial\u0103>, <Num\u0103r Itera\u0163ii> ]
KeepIf=Men\u0163ineCondi\u0163ie
KeepIf.Syntax=[ <Condi\u0163ie>, <List\u0103> ]
LCM=CMMMC
LCM.Syntax=[ <List\u0103 de numere> ]\n[ <Num\u0103r>, <Num\u0103r> ]
LaTeX=LaTeX
LaTeX.Syntax=[ <Obiect> ]\n[ <Obiect> ]
Last=Ultimul
Last.Syntax=[ <List\u0103> ]\n[ <List\u0103>, <Num\u0103r Elemente> ]
Length=Lungime
Length.Syntax=[ <Vector> ]\n[ <Punct> ]\n[ <List\u0103> ]\n[ <Func\u0163ie>, <Valoare Ini\u0163ial\u0103 x>, <Valoare Final\u0103 x> ]\n[ <Func\u0163ie>, <Punct Ini\u0163ial>, <Punct Final> ]\n[ <Curb\u0103>, <Valoare Ini\u0163ial\u0103 x>, <Valoare Final\u0103 x> ]\n[ <Curb\u0103>, <Punct Ini\u0163ial>, <Punct Final> ]
LetterToUnicode=Liter\u0103Unicod
LetterToUnicode.Syntax=[ "<Liter\u0103>" ]
Line=Dreapt\u0103
Line.Syntax=[ <Punct>, <Punct> ]\n[ <Punct>, <Dreapt\u0103 Paralel\u0103> ]\n[ <Punct>, <Vector Direc\u0163ie> ]
LineBisector=Mediatoare
LineBisector.Syntax=[ <Segment> ]\n[ <Punct>, <Punct> ]
Locus=LocGeometric
Locus.Syntax=[ <Punct care creeaz\u0103 linia de loc geometric>, <Punct> ]
LowerSum=Sum\u0103Inferioar\u0103
LowerSum.Syntax=[ <Func\u0163ie>, <Valoare ini\u0163ial\u0103 x>, <Valoare final\u0103 x>, <Num\u0103r dreptunghiuri> ]
Max.Syntax=[ <List\u0103> ]\n[ <Num\u0103r>, <Num\u0103r> ]
Mean=Medie
Mean.Syntax=[ <List\u0103 de numere> ]
MeanX=MedieX
MeanX.Syntax=[ <List\u0103 de puncte> ]
MeanY=MedieY
MeanY.Syntax=[ <List\u0103 de puncte> ]
Median=Median\u0103
Median.Syntax=[ <List\u0103 de numere> ]
Midpoint=Mijloc
Midpoint.Syntax=[ <Segment> ]\n[ <Conic\u0103> ]\n[ <Punct>, <Punct> ]
Min.Syntax=[ <List\u0103> ]\n[ <Num\u0103r>, <Num\u0103r> ]
Mirror=Reflexie
Mirror.Syntax=[ <Obiect>, <Punct> ]\n[ <Obiect>, <Dreapt\u0103> ]\n[ <Punct>, <Cerc> ]
Mod=Rest
Mod.Syntax=[ <Deîmp\u0103r\u0163it>, <Împ\u0103r\u0163itor> ]
Mode=Modul
Mode.Syntax=[ <List\u0103 de numere> ]
Name=Nume
Name.Syntax=[ <Obiect> ]
Normal=Normal\u0103
Normal.Syntax=[ <Medie>, <Devia\u0163ie standard>, <Valoare variabil\u0103> ]
Object=Obiect
Object.Syntax=[ <Nume de obiect ca text> ]
OrthogonalLine=Perpendicular\u0103
OrthogonalLine.Syntax=[ <Punct>, <Dreapt\u0103> ]\n[ <Punct>, <Segment> ]\n[ <Punct>, <Vector> ]
OrthogonalVector=VectorPerpendicular
OrthogonalVector.Syntax=[ <Dreapt\u0103> ]\n[ <Segment> ]\n[ <Vector> ]
OsculatingCircle=CercOsculator
OsculatingCircle.Syntax=[ <Punct>, <Func\u0163ie> ]\n[ <Punct>, <Curb\u0103> ]
PMCC=CoeficientCorela\u0163ie
PMCC.Syntax=[ <List\u0103 puncte> ]\n[ <List\u0103 coordonate-x>, <List\u0103 coordonate-y> ]
Parabola=Parabol\u0103
Parabola.Syntax=[ <Punct>, <Dreapt\u0103> ]
Parameter=Parametru
Parameter.Syntax=[ <Parabol\u0103> ]
Perimeter=Perimetru
Perimeter.Syntax=[ <Poligon> ]\n[ <Conic\u0103> ]
Point=Punct
Point.Syntax=[ <Obiect> ]\n[ <Punct>, <Vector> ]
Polar=Polar\u0103
Polar.Syntax=[ <Punct>, <Conic\u0103> ]
Polygon=Poligon
Polygon.Syntax=[ <Punct>, ..., <Punct> ]\n[ <Punct>, <Punct>, <Num\u0103rul Vârfuri> ]
Polynomial=Polinom
Polynomial.Syntax=[ <Func\u0163ie> ]\n[ <List\u0103 de puncte> ]
PrimeFactors.Syntax=[ <Num\u0103r> ]
Product=Produs
Product.Syntax=[ <List\u0103 de numere> ]
Q1.Syntax=[ <List\u0103 de numere> ]
Q3.Syntax=[ <List\u0103 de numere> ]
Radius=Raz\u0103
Radius.Syntax=[ <Conic\u0103> ]
Random=Aleator
Random.Syntax=[ <Minim Întreg>, <Maxim Întreg> ]
RandomBinomial=AleatorBinomial
RandomBinomial.Syntax=[ <Num\u0103r Încerc\u0103ri>, <Probabilitate> ]
RandomNormal=AleatorNormal
RandomNormal.Syntax=[ <Medie>, <Abatere standard> ]
RandomPoisson=AleatorPoisson
RandomPoisson.Syntax=[ <Medie> ]
Ray=Semidreapt\u0103
Ray.Syntax=[ <Punct ini\u0163ial>, <Punct> ]\n[ <Punct ini\u0163ial>, <Vector direc\u0163ie> ]
Relation=Rela\u0163ie
Relation.Syntax=[ <Obiect>, <Obiect> ]
RemoveUndefined=Elimin\u0103Nedefinire
RemoveUndefined.Syntax=[ <List\u0103> ]
Reverse=Inversare
Reverse.Syntax=[ <List\u0103> ]
Root=R\u0103d\u0103cin\u0103
Root.Syntax=[ <Polinom> ]\n[ <Func\u0163ie>, <Valoare ini\u0163ial\u0103-x> ]\n[ <Func\u0163ie>, <Valoare ini\u0163ial\u0103-x>, <Valoare final\u0103-x> ]
Rotate=Rota\u0163ie
Rotate.Syntax=[ <Obiect>, <Unghi> ]\n[ <Obiect>, <Unghi>, <Punct> ]
Row=Linie
Row.Syntax=[ <Celul\u0103 din foaia de calcul> ]
SD.Syntax=[ <List\u0103 de numere> ]
SXX.Syntax=[ <List\u0103 de numere> ]\n[ <List\u0103 de puncte> ]
SXY.Syntax=[ <List\u0103 de puncte> ]\n[ <List\u0103 de numere>, <List\u0103 de numere> ]
SYY.Syntax=[ <List\u0103 de numere> ]\n[ <List\u0103 de puncte> ]
SecondAxis=AxaMic\u0103
SecondAxis.Syntax=[ Conic\u0103 ]
SecondAxisLength=LungimeSemiaxaMic\u0103
SecondAxisLength.Syntax=[ Conic\u0103 ]
Sector.Syntax=[ <Conic\u0103>, <Punct>, <Punct> ]\n[ <Conic\u0103>, <Valoare parametru>, <Valoare parametru> ]
Segment.Syntax=[ <Punct>, <Punct> ]\n[ <Punct>, <Lungime> ]
Semicircle=Semicerc
Semicircle.Syntax=[ <Punct>, <Punct> ]
Sequence=Secven\u0163\u0103
Sequence.Syntax=[ <Expresie>, <Variabil\u0103>, <Valoare ini\u0163ial\u0103>, <Valoare final\u0103> ]\n[ <Expresie>, <Variabil\u0103>, <Valoare ini\u0163ial\u0103>, <Valoare final\u0103>, <Pas> ]
SetAxesRatio.Syntax=[ <Num\u0103r>, <Num\u0103r> ]
SetFilling.Syntax=[ <Obiect>, <Num\u0103r> ]
SetLabelMode.Syntax=[ <Obiect>, <Num\u0103r> ]
SetPointSize.Syntax=[ <Punct>, <Num\u0103r> ]
SetPointStyle.Syntax=[ <Punct>, <Num\u0103r> ]
SetTooltipMode.Syntax=[ <Obiect>, <Num\u0103r> ]
ShowLayer.Syntax=[ <Num\u0103r> ]
SigmaXX.Syntax=[ <List\u0103 de numere> ]\n[ <List\u0103 de puncte> ]
SigmaXY.Syntax=[ <List\u0103 de puncte> ]\n[ <List\u0103 de coordonate-x>, <List\u0103 de coordonate-y> ]
SigmaYY.Syntax=[ <List\u0103 de numere> ]\n[ <List\u0103 de puncte> ]
Simplify=Simplificare
Simplify.Syntax=[ <Func\u0163ie> ]
Slope=Pant\u0103
Slope.Syntax=[ <Dreapt\u0103> ]
Sort=Sorteaz\u0103
Sort.Syntax=[ <List\u0103> ]
Sum=Sum\u0103
Sum.Syntax=[ <List\u0103> ]\n[ <List\u0103>, <Num\u0103r elemente> ]
TableText=TextTabel
TableText.Syntax=[ <List\u0103>, <List\u0103>, ... ]\n[ <List\u0103>, <List\u0103>, ..., <Aliniere text> ]
Take=Extrage
Take.Syntax=[ <List\u0103>, <Pozi\u0163ie ini\u0163ial\u0103>, <Pozi\u0163ie final\u0103> ]
Tangent=Tangent\u0103
Tangent.Syntax=[ <Punct>, <Conic\u0103> ]\n[ <Punct>, <Func\u0163ie> ]\n[ <Punct>, <Curb\u0103> ]\n[ <Valoare-x>, <Func\u0163ie> ]\n[ <Dreapt\u0103 paralel\u0103>, <Conic\u0103> ]\n[ <Segment paralel>, <Conic\u0103> ]
TaylorSeries=SerieTaylor
TaylorSeries.Syntax=[ <Func\u0163ie>, <Valoare-x>, <Num\u0103r ordine> ]
Text.Syntax=[ <Obiect> ]\n[ <Obiect>, <Boolean la Înlocuire a variabilei>\n[ <Obiect>, <Punct> ]\n[ <Obiect>, <Punct>, <Boolean la Înlocuire a variabilei> ]
TextToUnicode=TextÎnUnicod
TiedRank=RangLegat
TiedRank.Syntax=[ <List\u0103> ]
ToolImage=InstrumentImagine
ToolImage.Syntax=[ <Num\u0103r> ]
Translate=Transla\u0163ie
Translate.Syntax=[ <Obiect>, <Vector> ]\n[ <Vector>, <Punct ini\u0163ial> ]
Transpose=Transpus\u0103
Transpose.Syntax=[ <Matrice> ]
TrapezoidalSum=Sum\u0103Trapezoidal\u0103
TrapezoidalSum.Syntax=[ <Func\u0163ie>, <Valoare ini\u0163iala-x>, <Valoare final\u0103-x>, <Num\u0103r trapeze> ]
TravelingSalesman.Syntax=[ <List\u0103 de puncte> ]
Triangular=Triunghiular
Triangular.Syntax=[ <Limit\u0103 inferioar\u0103>, <Limit\u0103 superioar\u0103>, <Mode>, x ]\n[ <Limit\u0103 inferioar\u0103>, <Limit\u0103 superioar\u0103>, <Mode>, <Valoare variabil\u0103> ]\n[ <Limit\u0103 inferioar\u0103>, <Limit\u0103 superioar\u0103>, <Mode>, x, <Cumulativ Boolean> ]
TurningPoint=PunctInflexiune
TurningPoint.Syntax=[ <Polinom> ]
UnicodeToLetter=UnicodÎnLiter\u0103
UnicodeToLetter.Syntax=[ <Întreg> ]
UnicodeToText=UnicodÎnText
UnicodeToText.Syntax=[ <List\u0103 întregi> ]
Uniform.Syntax=[ <Limit\u0103 inferioar\u0103>, <Limit\u0103 superioar\u0103>, x ]\n[ <Limit\u0103 inferioar\u0103>, <Limit\u0103 superioar\u0103>, <Valoare variabil\u0103> ]\n[ <Limit\u0103 inferioar\u0103>, <Limit\u0103 superioar\u0103>, x, <Cumulativ Boolean> ]
Union=Uniune
Union.Syntax=[ <List\u0103>, <List\u0103> ]\n[ <Poligon>, <Poligon> ]
Unique=Unic
Unique.Syntax=[ <List\u0103> ]
UnitOrthogonalVector=VectorUnitatePerpendicular
UnitOrthogonalVector.Syntax=[ <Dreapt\u0103> ]\n[ <Segment> ]\n[ <Vector> ]
UnitVector=VectorUnitate
UnitVector.Syntax=[ <Vector> ]\n[ <Dreapt\u0103> ]\n[ <Segment> ]
UpdateConstruction=ActualizareConstruc\u0163ie
UpperSum=Sum\u0103Superioar\u0103
UpperSum.Syntax=[ <Func\u0163ie>, <Valoare ini\u0163ial\u0103 - x>, <Valoare final\u0103 - x>, <Num\u0103r dreptunghiuri> ]
Variance=Varian\u0163\u0103
Variance.Syntax=[ <List\u0103 de Numere> ]
Vector.Syntax=[ <Punct> ]\n[ <Punct Ini\u0163ial>, <Punct Final> ]
Vertex=Vârf
Vertex.Syntax=[ <Conic\u0103> ]
VerticalText=TextVertical
Voronoi.Syntax=[ <List\u0103 de puncte> ]
Weibull.Syntax=[ <Form\u0103>, <Dimensiune>, x ]\n[ <Form\u0103>, <Dimensiune>, <Valoare variabil\u0103> ]\n[ <Form\u0103>, <Dimensiune>, x, <Cumulativ Boolean> ]
Zip.Syntax=[ <Expresie>, <Var1>, <List\u01031>, <Var2>, <List\u01032>, ... ]
Zipf.Syntax=[ <Num\u0103r de elemente>, <Exponent> ]\n[ <Num\u0103r de elemente>, <Exponent>, <Cumulativ Boolean> ]\n[ <Num\u0103r de elemente>, <Exponent>, <Valoare variabila>, <Cumulativ Boolean> ]
ZoomIn=VizualizareIntrare
ZoomIn.Syntax=[ <Factor dimensiune> ]\n[ <Factor dimnesiune>, <Punct centru> ]\n[ <Min x>, <Min y>, <Max x>, <Max y> ]
ZoomOut=VizualizareIe\u015fire
ZoomOut.Syntax=[ <Factor dimensiune> ]\n[ <Factor dimensiune>, <Punct centru> ]