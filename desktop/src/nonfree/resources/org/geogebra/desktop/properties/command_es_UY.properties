# Copyright (c) GeoGebra Group, office@geogebra.org
# The GeoGebra language files are licensed to you under the terms of the
# Creative Commons Attribution-NonCommercial-ShareAlike licence (version 3.0 or later),
# the current text of which can be found via this link:
# http://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.
# Attribution (as required by that Creative Commons license) should take the form of
# (at least) a mention of our name, an appropriate copyright notice and a link to our
# website located at http://www.geogebra.org.
# For further details, please see http://www.geogebra.org/license
AffineRatio.Syntax=[ <Origen (punto)>, <Final (punto)>, <Punto alineado> ]
AngularBisector.Syntax=[ <Punto>, <Vértice>, <Punto> ]\n[ <Lado (recta, semirrecta o segmento)>, <Lado (recta, semirrecta o segmento)> ]
Arc.Syntax=[ <Circunferencia>, <Punto inicial>, <Punto final (antihorario)> ]\n[ <Elipse>, <Punto inicial>, <Punto final (antihorario)> ]\n[ <Circunferencia>, <Valor inicial>, <Valor final> ]\n[ <Elipse>, <Valor inicial>, <Valor final> ]
Area.Syntax=[ <Cónica> ]\n[ <Polígono> ]\n[ <Punto>, ..., <Punto> ]
AttachCopyToView.Syntax=[ <Objeto>, <Vista 0|1|2> ]\n[ <Objeto>, <Vista 0|1|2>, <Esquina 1>, <Esquina 3>, <Punto 1 en pantalla>, <Punto 2 en pantalla> ]
BarChart.Syntax=[ <Lista de datos>, <Lista de frecuencias> ]\n[ <Lista de datos brutos>, <Ancho de barras>, <Factor vertical de escala (opcional)> ]\n[ <Lista de datos>, <Lista de frecuencias>, <Ancho de barras> ]\n[ <Valor inicial>, <Valor final>, <Lista de alturas> ]\n[ <Valor inicial>, <Valor final>, <Expresión>, <Variable>, <De número>, <A número> ]\n[ <Valor inicial>, <Valor final>, <Expresión>, <Variable>, <De número>, <A número>, <Incremento> ]
BarCode.Syntax=[ ]\n[ <Imagen> ]\n[ <Texto o número>, "<Formato (opcional)>", "<Corrección de error (opcional)>", <Ancho (opcional)>, <Altura (opcional)> ]
Binomial.SyntaxCAS=[ <Número (o valor numérico)>, <Número (o valor numérico)> ]
BinomialDist.Syntax=[ <Número de ensayos>, <Probabilidad de éxito> ]\n[ <Número de ensayos>, <Probabilidad de éxito>, <Acumulada booleana> ]\n[ <Número de ensayos>, <Probabilidad de éxito>, <Valor de variable>, <Acumulada booleana> ]
BinomialDist.SyntaxCAS=[ <Número de ensayos>, <Probabilidad de éxito>, <Valor de variable>, <Acumulada booleana> ]
Cauchy.Syntax=[ <Mediana>, <Escala>, x ]\n[ <Mediana>, <Escala>, <Valor de variable> ]\n[ <Mediana>, <Escala>, x, <Acumulada booleana> ]
Cauchy.SyntaxCAS=[ <Mediana>, <Escala>, <Valor de variable> ]
Checkbox.Syntax=[ ]\n[ <Título> ]\n[ <Lista> ]\n[ <Título>, <Lista> ]
ChiSquared.Syntax=[ <Grados de libertad>, x ]\n[ <Grados de libertad>, <Valor de variable> ]\n[ <Grados de libertad>, x, <Acumulada booleana> ]
ChiSquared.SyntaxCAS=[ <Grados de libertad>, <Valor de variable> ]
Circle.Syntax=[ <Centro>, <Número (radio)> ]\n[ <Punto>, <Segmento> ]\n[ <Punto (centro)>, <Punto> ]\n[ <Punto>, <Punto>, <Punto> ]
Circle.Syntax3D=[ <Punto (centro)>, <Número o valor numérico (radio)> ]\n[ <Punto>, <Segmento> ]\n[ <Punto>, <Punto> ]\n[ <Recta>, <Punto> ]\n[ <Punto>, <Punto>, <Punto> ]\n[ <Punto>, <Radio>, <Dirección> ]\n[ <Punto>, <Punto>, <Dirección> ]
CircleArc.Syntax=[ <Centro>, <Punto extremo>, <Punto extremo antihorario> ]
CircleSector.Syntax=[ <Centro>, <Punto extremo>, <Punto extremo antihorario> ]
CircumcircleArc.Syntax=[ <Punto extremo>, <Punto>, <Punto extremo> ]
CircumcircleSector.Syntax=[ <Punto extremo>, <Punto>, <Punto extremo> ]
Circumference.Syntax=[ <Cónica o Polígono> ]
Classes.Syntax=[ <Lista de datos>, <Cantidad de clases (número)> ]\n[ <Lista de datos>, <Inicio>, <Ancho de clases> ]
Column.Syntax=[ <Celda de Hoja de cálculo> ]
ColumnName.Syntax=[ <Celda de la Hoja de cálculo> ]
ConvexHull.Syntax=[ <Lista de Puntos> ]
CrossRatio.Syntax=[ <Origen 1 (punto)>, <Origen 2 (punto)>, <Final (punto)>, <Punto Alineado> ]
Cubic.Syntax=[ <Punto>, <Punto>, <Punto>, <Número (valor numérico)> ]
CurveCartesian.Syntax=[ <Expresión>, <Expresión>, <Parámetro Variable>, <Valor Inicial>, <Valor Final> ]
Derivative.SyntaxCAS=[ <Expresión> ]\n[ <Expresión>, <Variable> ]\n[ <Expresión>, <Variable>, <Orden de la derivada (número)> ]
Dilate.Syntax=[ <Objeto>, <Número (factor de escala)> ]\n[ <Objeto>, <Número (factor de escala)>, <Punto (centro)> ]
Distance.Syntax=[ <Recta>, <Recta> ]\n[ <Punto>, <Objeto (punto, recta, cónica... )> ]
Erlang.Syntax=[ <Figura>, <Razón>, x ]\n[ <Figura>, <Razón>, <Valor de Variable> ]\n[ <Figura>, <Razón>, x, <Acumulada o no (true/false)> ]
Exponential.Syntax=[ <Lambda>, x ]\n[ <Lambda>, <Valor de Variable> ]\n[ <Lambda>, x, <Acumulada Booleana> ]
FillCells.Syntax=[ <RangoCeldas>, <Objeto> ]\n[ <Celda>, <Lista> ]\n[ <Celda>, <Matriz> ]
FitLineX.Syntax=[ <Lista de Puntos> ]
FitLineY.Syntax=[ <Lista de Puntos> ]
FitSin.Syntax=[ <Lista de Puntos> ]
FrequencyTable.Syntax=[ <Lista de datos brutos>, <Factor de escala (opcional)> ]\n[ <Acumulada o no (true/false)>, <Lista de datos brutos> ]\n[ <Lista de límites de clase>, <Lista de datos brutos> ]\n[ <Acumulada o no (true/false)>, <Lista de límites de clase>, <Lista de datos brutos> ]\n[ <Lista de límites de clase>, <Lista de datos brutos>, <Densidad>, <Factor de escala de densidad (opcional)> ]\n[ <Acumulada o no (true/false)>, <Lista de límites de clase>, <Lista de datos brutos>, <Densidad>, <Factor de escala de densidad (opcional)> ]
Function.Syntax=[ <Lista de Números> ]\n[ <Función>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]
GCD.Syntax=[ <Lista de Números> ]\n[ <Número (o valor numérico)>, <Número (o valor numérico)> ]
Gamma.SyntaxCAS=[ <Alfa>, <Beta>, <Valor de Variable> ]
GroebnerDegRevLex.Syntax=[ <Lista de polinomios> ]\n[ <Lista de polinomios>, <Lista de variables> ]
GroebnerLex.Syntax=[ <Lista de polinomios> ]\n[ <Lista de polinomios>, <Lista de variables> ]
GroebnerLexDeg.Syntax=[ <Lista de polinomios> ]\n[ <Lista de polinomios>, <Lista de variables> ]
Height.Syntax=[ <Cuerpo> ]
HistogramRight.Syntax=[ <Lista de Extremos de Intervalo>, <Lista de Alturas> ]\n[ <Lista de Extremos de Intervalo>, <Lista de Datos en Bruto>, <Densidad en Uso>, <Factor de Escala de Densidad (opcional)> ]\n[ <Boolenana Acumulativa>, <Lista de Extremos de Intervalo>, <Lista de Datos en Bruto>, <Densidad en Uso>, <Factor de Escala de Densidad (opcional)> ]
ImplicitCurve.Syntax=[ <Lista de Puntos> ]\n[ <f(x, y)> ]
IntersectPath.Syntax=[ <Recta (semirrecta o segmento)>, <Polígono> ]\n[ <Polígono>, <Polígono> ]
IntersectPath.Syntax3D=[ <Recta (semirrecta o segmento)>, <Polígono o cónica> ]\n[ <Polígono>, <Polígono o cónica> ]\n[ <Plano>, <Polígono> ]\n[ <Plano>, <Cuádrica> ]
Iteration.Syntax=[ <Función>, <Valor inicial>, <Número de iteraciones> ]\n[ <Expresión>, <Variables>, <{Valores iniciales}>, <Número de iteraciones> ]
IterationList.Syntax=[ <Función>, <Valor inicial>, <Número de iteraciones> ]\n[ <Expresión>, <Variables>, <{Valores iniciales}>, <Número de iteraciones> ]
Join.Syntax=[ <Lista de Listas> ]\n[ <Lista>, <Lista>, ... ]
Length.SyntaxCAS=[ <Función o curva>, <Extremo inferior del intervalo>, <Extremo superior del intervalo> ]\n[ <Función o curva>, <Variable>, <Punto inicial>, <Punto final> ]
Locus.Syntax=[ <Punto que trazará el lugar>, <Punto> ]\n[ <Punto que trazará el lugar>, <Deslizador> ]\n[ <Campo de direcciones>, <Punto> ]\n[ <f(x y)>, <Punto> ]
LocusEquation.Syntax=[ <Lugar geométrico> ]\n[ <Punto del lugar>, <Punto variable> ]
Maximize.Syntax=[ <Número dependiente>, <Número libre> ]\n[ <Número dependiente>, <Punto en el recorrido> ]
Minimize.Syntax=[ <Número dependiente>, <Número libre> ]\n[ <Número dependiente>, <Punto en el recorrido> ]
Mirror=Simetriza
Pan.Syntax3D=[ <x>, <y>, <z> ]
Polygon.Syntax3D=[ <Lista de puntos> ]\n[ <Punto>, ..., <Punto> ]\n[ <Punto>, <Punto>, <Número de vértices> ]\n[ <Punto>, <Punto>, <Número de vértices>, <Dirección> ]
SetActiveView.Syntax=[ <Vista (1 o 2)> ]
SetFixed.Syntax=[ <Objeto>, <Fijo o no (true/false)> ]
SetValue.Syntax=[ <Valor lógico>, <true/false (o 1/0)> ]\n[ <Objeto>, <Objeto> ]\n[ <Lista>, <Número>, <Objeto> ]
SolveCubic.SyntaxCAS=[ <Polinomio de tercer grado> ]
SolveQuartic.Syntax=[ <Polinomio de cuarto grado> ]
Spline.Syntax=[ <Lista de puntos> ]\n[ <Lista de puntos>, <Orden (mayor o igual que 3)> ]
StemPlot.Syntax=[ <Lista> ]\n[ <Lista>, <Ajuste (-1, 0 o 1)> ]
Surface.Syntax=[ <Expresión>, <Expresión>, <Expresión>, <Parámetro 1>, <Valor inicial 1>, <Valor final 1>, <Parámetro 2>, <Valor inicial 2>, <Valor final 2> ]
Take.SyntaxCAS=[ <Lista>, <Posición inicial>, <Posición final> ]
Textfield.Syntax=[ ]\n[ <Objeto asociado> ]
ToExponential.SyntaxCAS=[ <Número complejo> ]
ToolImage.Syntax=[ <Número> ]
Triangular.Syntax=[ <Límite inferior>, <Límite superior>, <Moda>, x ]\n[ <Límite inferior>, <Límite superior>, <Moda>, <Valor> ]\n[ <Límite inferior>, <Límite superior>, <Moda>, x, <Acumulada o no (true/false)> ]
nPr=NúmeroArreglos