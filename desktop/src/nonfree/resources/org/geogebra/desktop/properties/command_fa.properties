# Copyright (c) GeoGebra Group, office@geogebra.org
# The GeoGebra language files are licensed to you under the terms of the
# Creative Commons Attribution-NonCommercial-ShareAlike licence (version 3.0 or later),
# the current text of which can be found via this link:
# https://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.
# Attribution (as required by that Creative Commons license) should take the form of
# (at least) a mention of our name, an appropriate copyright notice and a link to our
# website located at https://www.geogebra.org.
# For further details, please see https://www.geogebra.org/license
ANOVA.Syntax=[ <\u0641\u0647\u0631\u0633\u062a>, <\u0641\u0647\u0631\u0633\u062a>, ... ]
AffineRatio.Syntax=[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]
Angle=\u0632\u0627\u0648\u06cc\u0647
Angle.Syntax=[ <\u0634\u06cc> ]\n[ <\u0628\u0631\u062f\u0627\u0631>, <\u0628\u0631\u062f\u0627\u0631> ]\n[ <\u062e\u0637>, <\u062e\u0637> ]\n[ <\u0646\u0642\u0637\u0647>, <\u061f>, <\u0646\u0642\u0637\u0647> ]\n[ <\u0646\u0642\u0637\u0647>, <\u061f>, <\u0632\u0627\u0648\u06cc\u0647> ]
Angle.Syntax3D=[ <\u0634\u06cc> ]\n[ <\u0628\u0631\u062f\u0627\u0631>, <\u0628\u0631\u062f\u0627\u0631> ]\n[ <\u062e\u0637>, <\u062e\u0637> ]\n[ <\u062e\u0637>, <\u061f> ]\n[ <Plane>, <Plane> ]\n[ <\u0646\u0642\u0637\u0647>, <Apex>, <\u0646\u0642\u0637\u0647> ]\n[ <\u0646\u0642\u0637\u0647>, <Apex>, <\u0632\u0627\u0648\u06cc\u0647> ]
AngularBisector.Syntax=[ <\u062e\u0637>, <\u062e\u0637> ]\n[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]
Append.Syntax=[ <\u0641\u0647\u0631\u0633\u062a>, <\u0634\u06cc> ]\n[ <\u0634\u06cc>, <\u0641\u0647\u0631\u0633\u062a> ]
ApplyMatrix.Syntax=[ <\u0645\u0627\u062a\u0631\u06cc\u0633>, <\u0634\u06cc> ]
Arc=\u0622\u0631\u06a9
Arc.Syntax=[ <\u062f\u0627\u06cc\u0631\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]\n[ <\u0628\u06cc\u0636\u06cc>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]\n[ <\u062f\u0627\u06cc\u0631\u0647>, <Parameter Value>, <Parameter Value> ]\n[ <\u0628\u06cc\u0636\u06cc>, <Parameter Value>, <Parameter Value> ]
AreConcurrent.Syntax=[ <\u062e\u0637>, <\u062e\u0637>, <\u062e\u0637> ]
AreParallel.Syntax=[ <\u062e\u0637>, <\u062e\u0637> ]
Area=\u0646\u0627\u062d\u06cc\u0647
Area.Syntax=[ <\u0645\u062e\u0631\u0648\u0637> ]\n[ <\u0686\u0646\u062f \u0648\u062c\u0647\u06cc> ]\n[ <\u0646\u0642\u0637\u0647>, ..., <\u0646\u0642\u0637\u0647> ]
Assume=\u0641\u0631\u0636
Asymptote.Syntax=[ <\u0645\u062e\u0631\u0648\u0637> ]\n[ <\u062a\u0627\u0628\u0639> ]\n[ <Implicit Curve> ]
BarCode=\u0628\u0627\u0631\u06a9\u062f
Bernoulli=\u0628\u0631\u0646\u0648\u0644\u06cc
Cauchy=\u06a9\u0648\u0634\u06cc
Cell=\u0633\u0644\u0648\u0644
Centroid.Syntax=[ <\u0686\u0646\u062f\u0636\u0644\u0639\u06cc> ]
CircumcircleArc.Syntax=[ \u0646\u0642\u0637\u0647, \u0646\u0642\u0637\u0647, \u0646\u0642\u0637\u0647 ]
ClosestPoint.Syntax=[ <\u0646\u0642\u0637\u0647>, <\u0645\u0633\u06cc\u0631> ]\n[ <\u062e\u0637>, <\u062e\u0637> ]
CommonDenominator.Syntax=[ <\u0639\u0628\u0627\u0631\u062a>, <\u0639\u0628\u0627\u0631\u062a> ]
CompetitionRank.Syntax=[ <\u0644\u06cc\u0633\u062a> ]
ComplexRoot.Syntax=[ <\u0686\u0646\u062f\u062c\u0645\u0644\u0647\u200c\u0627\u06cc> ]
Cone=\u0645\u062e\u0631\u0648\u0637\u06cc
ConstructionStep.Syntax=[ ]\n[ <\u0634\u06cc\u0621> ]
Covariance=\u06a9\u0648\u0648\u0627\u0631\u06cc\u0627\u0646\u0633
Cross.Syntax=[ <\u0628\u0631\u062f\u0627\u0631>, <\u0628\u0631\u062f\u0627\u0631> ]
Cube.Syntax=[ <\u0645\u0631\u0628\u0639> ]\n[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]\n[ <\u062c\u0647\u062a>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]
Curvature=\u0627\u0646\u062d\u0646\u0627
Curvature.Syntax=[ <\u0634\u06cc\u0621>, <\u0646\u0642\u0637\u0647> ]
CurveCartesian=\u0645\u0646\u062d\u0646\u06cc
Cylinder=\u0627\u0633\u062a\u0648\u0627\u0646\u0647
Degree.Syntax=[ <\u0686\u0646\u062f\u062c\u0645\u0644\u0647\u200c\u0627\u06cc> ]
Delete=\u062d\u0630\u0641
Denominator=\u0645\u062e\u0631\u062c
Derivative=\u0645\u0634\u062a\u0642
Dimension.Syntax=[ <\u0634\u06cc\u0621> ]
Distance=\u0641\u0627\u0635\u0644\u0647
Divisors.Syntax=[ <\u0639\u062f\u062f> ]
Eigenvectors.SyntaxCAS=[ <\u0645\u0627\u062a\u0631\u06cc\u0633> ]
Ends=\u067e\u0627\u06cc\u0627\u0646
Execute=\u0627\u062c\u0631\u0627
Exponential=\u0646\u0645\u0627\u06cc\u06cc
Extremum=\u0627\u06a9\u0633\u062a\u0631\u0645\u0645
Factor=\u0639\u0627\u0645\u0644
Factor.SyntaxCAS=[ <\u0639\u062f\u062f> ]\n[ <\u0686\u0646\u062f\u062c\u0645\u0644\u0647\u200c\u0627\u06cc> ]\n[ <\u0645\u062a\u063a\u06cc\u0631>, <\u0639\u0628\u0627\u0631\u062a> ]
Fit=\u0645\u0646\u0627\u0633\u0628
Gamma=\u06af\u0627\u0645\u0627
Height=\u0627\u0631\u062a\u0641\u0627\u0639
Hyperbola=\u0647\u0630\u0644\u0648\u0644\u06cc
Identity=\u0647\u0645\u0627\u0646\u06cc
Identity.Syntax=[ <\u0639\u062f\u062f> ]
Incircle.Syntax=[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]
LetterToUnicode.Syntax=[ "<\u062d\u0631\u0641>" ]
LimitBelow.Syntax=[ <\u0645\u0642\u062f\u0627\u0631>, <\u062a\u0627\u0628\u0639> ]
LimitBelow.SyntaxCAS=[ <\u0645\u0642\u062f\u0627\u0631>, <\u0639\u0628\u0627\u0631\u062a> ]\n[ <\u0645\u0642\u062f\u0627\u0631>, <\u0645\u062a\u063a\u06cc\u0631>, <\u0639\u0628\u0627\u0631\u062a> ]
LineBisector=\u0639\u0645\u0648\u062f\u0645\u0646\u0635\u0641
Max=\u0628\u06cc\u0634\u06cc\u0646\u0647
Mean=\u0645\u06cc\u0627\u0646\u0647
Min=\u06a9\u0645\u06cc\u0646\u0647
Mod=\u0645\u062f
NDerivative.Syntax=[ <\u062a\u0627\u0628\u0639> ]
NSolve.Syntax=[ <\u0645\u0639\u0627\u062f\u0644\u0647> ]
NextPrime.Syntax=[ <\u0639\u062f\u062f> ]
Normal=\u0646\u0631\u0645\u0627\u0644
Numerator.SyntaxCAS=[ <\u0639\u0628\u0627\u0631\u062a> ]
Numeric=\u0639\u062f\u062f\u06cc
OrdinalRank.Syntax=[ <\u0644\u06cc\u0633\u062a> ]
Parabola.Syntax=[ <\u062e\u0637>, <\u0646\u0642\u0637\u0647> ]
Parameter=\u067e\u0627\u0631\u0627\u0645\u062a\u0631
Parameter.Syntax=[ <\u0647\u0630\u0644\u0648\u0644\u06cc> ]
Percentile=\u0635\u062f\u06a9
Plane=\u0635\u0641\u062d\u0647
Point=\u0646\u0642\u0637\u0647
PointList.Syntax=[ <\u0644\u06cc\u0633\u062a> ]
Poisson=\u067e\u0648\u0622\u0633\u0648\u0646
PreviousPrime.Syntax=[ <\u0639\u062f\u062f> ]
Product=\u0636\u0631\u0628
Relation.Syntax=[ <\u0644\u06cc\u0633\u062a> ]\n[ <\u0634\u06cc\u0621>, <\u0634\u06cc\u0621> ]
Repeat=\u062a\u06a9\u0631\u0627\u0631
RootList.Syntax=[ <\u0644\u06cc\u0633\u062a> ]
Sample=\u0646\u0645\u0648\u0646\u0647
SetLayer.Syntax=[ <\u0644\u0627\u06cc\u0647>, <\u0634\u06cc\u0621> ]
SetLineStyle.Syntax=[ <\u0639\u062f\u062f>, <\u062e\u0637> ]
SetPointStyle.Syntax=[ <\u0639\u062f\u062f>, <\u0646\u0642\u0637\u0647> ]
Shuffle.Syntax=[ <\u0644\u06cc\u0633\u062a> ]
Slider=\u0644\u063a\u0632\u0646\u062f\u0647
Spearman=\u0627\u0633\u067e\u06cc\u0631\u0645\u0646
Spline=\u0627\u0633\u067e\u0644\u0627\u06cc\u0646
StopLogging.Syntax=[ ]
Substitute=\u062c\u0627\u06cc\u06af\u0632\u06cc\u0646\u06cc
SurdText.Syntax=[ <\u0646\u0642\u0637\u0647> ]\n[ <\u0639\u062f\u062f> ]\n[ <\u0639\u062f\u062f>, <\u0644\u06cc\u0633\u062a> ]
TTest=T\u0622\u0632\u0645\u0648\u0646
Tangent=\u0645\u0645\u0627\u0633
Tangent.SyntaxCAS=[ <\u062a\u0627\u0628\u0639>, <\u0639\u062f\u062f> ]\n[ <\u0634\u06cc\u0621>, <\u0646\u0642\u0637\u0647> ]
ToBase.Syntax=[ <\u067e\u0627\u06cc\u0647>, <\u0639\u062f\u062f> ]
Top=\u0628\u0627\u0644\u0627
Transpose=\u062a\u0631\u0627\u0646\u0647\u0627\u062f\u0647
TurningPoint.Syntax=[ <\u0686\u0646\u062f\u062c\u0645\u0644\u0647\u200c\u0627\u06cc> ]
TurtleBack.Syntax=[ <\u0641\u0627\u0635\u0644\u0647>, <\u0644\u0627\u06a9\u067e\u0634\u062a> ]
TurtleRight.Syntax=[ <\u0632\u0627\u0648\u06cc\u0647>, <\u0644\u0627\u06a9\u067e\u0634\u062a> ]
Unique=\u0645\u0646\u062d\u0635\u0631\u0628\u0641\u0631\u062f
Variance=\u0648\u0627\u0631\u06cc\u0627\u0646\u0633
Vector=\u0628\u0631\u062f\u0627\u0631
Volume=\u062d\u062c\u0645