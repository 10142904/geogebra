#!/bin/sh
# Creates a benchmark output for the prover in CSV format to stdout,
# and also in HTML format into html/.
# @author Zoltan Kovacs <zoltan@geogebra.org>

DEBUG=1 # In tmp/ there can be some log, if you set this to 1.
TIMEOUT=120
HTML=html/index.html
PROVERS="Botana Recio PureSymbolic Auto"
TESTGGBURLBASE=http://dev.geogebra.org/trac/browser/trunk
GGBDIR=geogebra/test/scripts/benchmark/prover

THISDIR=`dirname $0`
MYDIR=`cd $THISDIR; pwd`
mkdir -p $MYDIR/tmp $MYDIR/html
LOGFILE=$MYDIR/tmp/.test.log
REGRESSIONFILE=$MYDIR/tmp/.regression.out
rm -f $HTML

BUILDDIR=../../../../desktop/build
test -r $BUILDDIR/geogebra.jar 2>&1 || exit 1 # Non-existing JAR

VERSION=`cd $BUILDDIR; java -jar geogebra.jar --v 2>&1 | head -1 | cut -f5 -d" "`
REVISION=`svn info | grep ^Revision: | cut -f2 -d" "`

# Title
TITLE="Prover benchmark for GeoGebra $VERSION (r$REVISION)"
DATE=`date "+%Y-%m-%d %H:%M"`
HOST=`hostname`
echo "<!DOCTYPE html><html><head>
<title>$TITLE</title>
</head><body><h1>$TITLE</h1>
<h2>on $DATE at $HOST</h2><pre>" >> $HTML
hwinfo --short --cpu 2>&1 | grep CPU | sed 's/^[ \t]*//' >> $HTML
echo -n "</pre>" >> $HTML

# Heading
echo -n "Filename;"
cat style.html >> $MYDIR/$HTML
echo "<table><tr><th>Filename</th>" >> $MYDIR/$HTML
for j in $PROVERS; do
 echo -n "$j result;Speed;"
 echo "<th>$j result</th><th>Speed</th>" >> $MYDIR/$HTML
 done
echo
echo "</tr>" >> $MYDIR/$HTML

# Content
TESTS=0
for i in `find -name '*.ggb' | sort`; do
 TESTS=`expr $TESTS + 1`
 # Creating thumbnail:
 cd $MYDIR
 DIRNAME=`dirname $i | sed s/"^\.\/tests\/"/""/`
 TEST=`basename $i`
 unzip $i geogebra_thumbnail.png >/dev/null 2>&1
 mv geogebra_thumbnail.png html/$TEST.png
 echo -n "$TEST;"
 echo "<tr><td><img src=\"$TEST.png\"><br><a href=\"$TESTGGBURLBASE/$GGBDIR/$i\">$TEST</a></td>" >> $MYDIR/$HTML
 for j in $PROVERS; do
  cd $MYDIR; cd $BUILDDIR
  # Testing:
  timeout $TIMEOUT java -jar geogebra.jar --prover=engine:$j,timeout:$TIMEOUT --logFile=$LOGFILE \
   --regressionFile=$REGRESSIONFILE $MYDIR/$i --language=en \
   >$MYDIR/tmp/.test.stdout 2>$MYDIR/tmp/.test.stderr
  
  RETVAL=$?
  if [ $RETVAL = 124 ]; then
   RESULT=""
   TIME=timeout
  else
   # Regression out file used to show the wrong result (the stored value in the file is shown):
   RESULT=`cat $REGRESSIONFILE | grep Prove | sed 's/\(.*\)= \(.*\)/\2/'`
   # But now it's OK, thanks to Markus and Simon in [17470].
   #RESULT=`cat $LOGFILE | grep "Statement is " | sed 's/\(.*\)Statement is \(.*\)/\2/'`
   TIME=`cat $LOGFILE | grep Benchmarking | awk '{print $5}'`
   if [ $DEBUG = 1 ]; then
    cp $REGRESSIONFILE $REGRESSIONFILE-$TEST-$j
    cp $LOGFILE $LOGFILE-$TEST-$j
    fi
   fi # No timeout
  echo -n "$RESULT;$TIME;"
  RESULTCLASS=""
  if [ "$RESULT" != "$DIRNAME" ]; then
   RESULTCLASS=" class=\"error\" info=\"$DIRNAME\""
  else
   VARNAME=$`echo $j`
   VALUE=`eval echo $VARNAME`
   eval $j=`expr $VALUE + 1`
   fi
  echo "<td$RESULTCLASS>$RESULT</td><td$RESULTCLASS>$TIME</td>" >> $MYDIR/$HTML
  done # All provers done for this tests
 echo
 echo "</tr>" >> $MYDIR/$HTML
 done # All tests done

# Summary
echo -n "Summary;"
echo "<tr><td class=\"summary\"><b>Summary (of $TESTS)</b></td>" >> $MYDIR/$HTML
for j in $PROVERS; do
 VARNAME=$`echo $j`
 VALUE=`eval echo $VARNAME`
 echo -n "$VALUE;;"
 echo "<td class=\"summary\" colspan=\"2\"><b>$VALUE</b></td>" >> $MYDIR/$HTML
 done
echo

echo "</tr></table></body></html>" >> $MYDIR/$HTML
