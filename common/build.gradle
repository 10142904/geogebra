project.setDescription('Common parts of GeoGebra for various platforms')

buildscript {
	dependencies {
		classpath "ca.coglinc:javacc-gradle-plugin:2.3.1"
		
	}
	configurations.all {
		resolutionStrategy {
			force 'net.java.dev.javacc:javacc:5.0'
		}
	}
}

apply plugin: 'ca.coglinc.javacc'
apply plugin: 'java'
apply plugin: 'findbugs'

sourceCompatibility = 1.6
targetCompatibility = 1.6

dependencies {
	compile project(':editor-base')
	compile project(':renderer-base')
    compile 'com.google.j2objc:annotations:1.0.2'
    compile ("com.google.code.findbugs:annotations:3.0.1") {
        exclude module: 'jsr305'
        exclude module: 'jcip-annotations'
    }
}

sourceSets {
    nonfree
    gpl
    main {
        java {
            srcDir compileJavacc.outputDirectory
            srcDir compileJavacc.inputDirectory
        }
        resources {
            if (project.hasProperty("usegpl")) {
                srcDirs += gpl.resources.srcDirs
            } else {
                srcDirs += nonfree.resources.srcDirs
            }
        }
    }
}


compileJavacc {
	arguments = [static: 'false']
}

task cleanJavacc(type: Delete) {
	description 'Cleans the javacc generated files.'
	delete compileJavacc
}

test {
     ignoreFailures = true
}

findbugs{
     ignoreFailures = true
     excludeFilter = file("src/main/config/findbugs.xml")
}

tasks.withType(FindBugs) {
    exclude '**/edu/uci/**', '**/org/apache/**', '**/com/github/**', '**/com/google/**'
    classes = classes.filter { 
        !it.path.contains(new File("edu/uci/").path)  &&
        !it.path.contains(new File("org/apache/").path) &&
        !it.path.contains(new File("com/github/").path) &&
        !it.path.contains(new File("com/google/").path)
    }
}
